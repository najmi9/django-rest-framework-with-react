{"version":3,"sources":["Components/Loader.js","Pages/Home.jsx","Pages/Aboutme.jsx","service/blogAPI.js","Pages/PostDetails.jsx","Components/AsideBar.jsx","Pages/Blog.jsx","service/courseAPI.js","Components/course_item.jsx","Pages/Courses.jsx","Pages/static_pages/django_hello_world.jsx","Pages/static_pages/math_for_developers.jsx","Pages/static_pages/mercure_show.jsx","Pages/static_pages/symfony_react.jsx","Pages/static_pages/node_express_app.js","Pages/static_pages/static-routes.js","Components/Header.jsx","App.js","serviceWorker.js","index.js"],"names":["Loader","useEffect","customElements","define","SpinningDots","style","dots","Home","to","Aboutme","className","src","width","height","href","class","fetchPosts","a","console","log","API_URL","axios","get","response","data","fetchPost","id","POST_API","PostItem","match","params","useState","post","setPost","loading","setLoading","parseInt","e","title","picture","alt","content","createdAT","AsideBar","Blog","setPosts","then","r","catch","map","fetchCourses","CourseItem","course","image","description","Courses","courses","setCourses","Django","DeveloperMath","Mercure","SymfonyReact","Express","StaticRoutes","path","component","Header","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","placeholder","App","exact","PostDetails","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.54a1901c.chunk.js","sourcesContent":["import React, {useEffect} from 'react';\nimport SpinningDots from '@grafikart/spinning-dots-element'\n\nconst Loader = () =>{\nuseEffect(()=>{\n\ncustomElements.define('spinning-dots', SpinningDots)\n\n\n}, []);\n\n   return(\n   <spinning-dots style={{\"width\":200+\"px\", \"strokeWidth\":20+\"px\", \"color\": \"#535FF6\"}} dots=\"8\">\n   </spinning-dots>\n   );\n}\n\nexport default Loader;\n\n","import React, {useEffect} from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Loader from '../Components/Loader';\n\nconst Home = () => {\n\n\n    return (\n       <div>\n\n\n           <Link to=\"/about-me\"> About Me </Link>\n       </div> \n    );\n};\n\nexport default Home;\n","import React from 'react';\n\nconst Aboutme = () => {\n\n    return(<div className=\"container p-5 m-5 bg-light border\">\n\n        <h1> my Name is Imad Najmi ! </h1>\n        <p>\n          <img src=\"./imgs/najmi.jpg\" width=\"200px\" height=\"200px\" />\n        </p>\n        <h5>Email: imadnajmi9@gmail.com   </h5>\n        <h5>Tel: +212 07 62 95 17 42  </h5>\n        <h5>Adress: Morroco marakech Chichaoua  </h5>\n        <h5>Age: 22/03/1999  </h5>\n        <h5>Web Developper </h5>\n        <h5>physics degree 2019</h5>\n        <h5>Now I am Student at Cady Ayyad University in Marrakech </h5>\n        <h5> Technologies </h5>\n        <ul>\n           <li> HTML, CSS and Javascript </li>\n           <li> Node JS and Express </li>\n           <li> Php and Symfony Framework </li>\n           <li> React JS and Api-Platform </li>\n           <li> Python and django Framework</li>\n           <li> Linux and SQL language</li>\n        </ul>\n        <h5> Languages :  </h5>\n         <ul>\n            Arabic, Frensh and English\n         </ul> \n\n<h2> my Works : </h2>\n<section>\n  <div className=\"work-item\">\n      <h3> e-commerce website </h3>\n      <p>\n      responsive website shows products to clients, \n      which an user can authenticate to buy a product, \n      and see his pannel that contains old and new chosen products, \n      payement is with paypal,\n      I used jwt-authencation-bundle for security.\n      </p>\n      <p> <a href=\"https://shopping-najmi.herokuapp.com\">link here </a> </p>\n      <p>\n        <img src=\"./imgs/shopping.png\" width=\"200px\" height=\"350px\" />\n      </p>\n      <h4> Used Technologies </h4>\n     \n        <ul>\n          <li>  Symfony and ApiPlatform   </li>\n          <li>  React and Redux </li>\n          <li>  Bootstrap </li>\n          <li>  Axios </li>\n        </ul>\n      \n\n  </div>\n\n   <div className=\"work-item\">\n     <h3> Vertime website </h3>\n      <p>\n      responsive website maded by symfony when students can sign up to the school \n      to be candidats and when they accept by the admin, so the can see thier courses\n      , notes and prof announces.\n\n      Each prof can add a student note, course and announce besides to see his salary.\n      The admin control all the organasation, he can add a prof remove a students, add classes and see statistics. \n      </p>\n      <p> <a href=\"https://najmi-accademy.herokuapp.com\">link here </a> </p>\n      <p>\n        <img src=\"./imgs/accademy.png\" width=\"400px\" height=\"200px\" />\n      </p>\n      <h4> Used Technologies </h4>\n      \n        <ul>\n          <li>  Symfony  </li>\n          <li>  Bootstrap </li>\n        </ul>\n     \n  </div>\n</section> \n\n    <div class=\"interests\">\n       <h2> my interests :  </h2>\n       <h5> I interest in my familly and friends </h5>\n       <h5> I like science and physics, I have a licence in physics </h5>\n       <h5> I do sport, my favorite is running and body builder. </h5>\n       <h5> I listen all kind of music. </h5>\n    </div>\n    </div>);\n};\n\nexport default Aboutme;\n","import axios from 'axios';\nimport {API_URL} from '../Config';\n\nconst POST_API = API_URL + '/posts';\n\nconst fetchPosts = async () =>{\n\tconsole.log(POST_API)\n    const response = await axios.get(POST_API);\n\treturn await response.data\n}\n\nconst fetchPost = async (id) =>{\n    const response = await axios.get(POST_API+'/' + id);\n\treturn await response.data\n}\n\nexport {\n\tfetchPosts,\n\tfetchPost,\n}","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport {fetchPost} from '../service/blogAPI';\nimport Loader from '../Components/Loader'\n\nconst PostItem = ({ match }) =>{\n\tconst id = match.params.id;\n\tconst [post, setPost] = useState({});\n\tconst [loading, setLoading] = useState(false);\n\tuseEffect(()=>{\n\t\ttry {\n\t\t\tsetPost(fetchPost(parseInt(id)));\n            setLoading(true);\n\t\t} catch(e) {\n\t\t\tconsole.log(e);\n\t\t}\n\t}, []);\n\n\treturn(\n       <div>\n       <section>\n          { !loading && <Loader /> }\n        </section>\n        <section>\n           {loading && (\n           <div>\n            <h1> {post.title} </h1>\n            <div> <img src={post.picture} alt={post.title} /></div>\n            <div> {post.content} </div>\n            <small> {post.createdAT} </small>\n           </div>)}\n        </section>\n       </div>\n\t);\n}\n\nexport default PostItem;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst AsideBar = () => {\n    return (\n       <div  className=\"list-group\">\n           \t\t <Link to=\"/django-demo-app\"  className=\"list-group-item list-group-item-action\">Explain Basic Django App</Link> \n           \t\t <Link to=\"/math-for-developers\" className=\"list-group-item list-group-item-action\"> What are the math concepts  I should know it as a developer ?</Link>\n           \t\t <Link to=\"/mercure-protocol-with-symfony\" className=\"list-group-item list-group-item-action\"> How ro use Mercure Protocol with Symfony and API Platform ?</Link>\n           \t\t <Link to=\"/node-express-app\" className=\"list-group-item list-group-item-action\">Hello World Express application using Sequelize </Link> \n           \t\t <Link to=\"/symfony-react\" className=\"list-group-item list-group-item-action\"> How to use Symfony and React in the same project ?</Link> \n       </div> \n    );\n};\n\nexport default AsideBar;\n","import React, { useState, useEffect } from 'react';\nimport { fetchPosts } from '../service/blogAPI';\nimport PostItem from '../Components/post_item';\nimport SpinningDots from '@grafikart/spinning-dots-element'\n\n\nconst Blog = () =>{\n\tconst [posts, setPosts] = useState([]);\n\tconst [loading, setLoading] = useState(false);\n\tuseEffect(()=>{\n\t\t\ncustomElements.define('spinning-dots', SpinningDots)\n        fetchPosts().then(r=>{\n        \tsetPosts(r);\n        \tsetLoading(true)\n        }).catch(e=>console.log(e))\n\t}, []);\n\n\treturn(\n        <div>\n         <section>\n          { !loading && (  <spinning-dots style={{\"width\":200+\"px\", \"strokeWidth\":20+\"px\", \"color\": \"#535FF6\"}} dots=\"8\">\n   </spinning-dots>) }\n        </section>\n        <section>\n          {/* loading && (<div> {posts.map(post=>(<PostItem post={post} />))} </div>)  */}\n          { loading && (<div> {['posts', 'dd'].map(post=>console.log(post))} </div>) }\n        </section>\n        </div>\n\t);\n}\nexport default Blog;","import axios from 'axios';\nimport {API_URL} from '../Config';\n\nconst COURSE_API = API_URL + '/courses';\n\nconst fetchCourses = async () =>{\n    const response = await axios.get(COURSE_API);\n    console.log(response)\n\treturn await response.data\n}\n\nconst fetchCourse = async (id) =>{\n    const response = await axios.get(COURSE_API+'/' + id);\n\treturn await response.data\n}\n\nexport {\n\tfetchCourses,\n\tfetchCourse,\n}","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst CourseItem = ({course}) => {\n    return (\n         <div className=\"container\">\n           <Link to={\"/course-\"+course.id}><h1> {course.title} </h1></Link>\n           <div> <img src={course.image} alt={course.title} /></div>\n           <div> {course.description} </div>\n           <small> {course.createdAT} </small>\n       </div>\n    );\n};\n\nexport default CourseItem;\n","import React, { useState, useEffect } from 'react';\nimport {fetchCourses } from '../service/courseAPI';\nimport CourseItem from '../Components/course_item';\n\nconst Courses = () => {\n\tconst [courses, setCourses] = useState([]);\n\tconst [loading, setLoading] = useState(false);\n\tuseEffect(()=>{\n\t\tfetchCourses().then(response=>{\n\t\t\tsetCourses(response)\n\t\t\tsetLoading(true)\n\t\t}).catch(e=>console.log(e))\n\t}, []);\n    return (\n        <div>\n         <section>\n          { !loading && (  <spinning-dots style={{\"width\":200+\"px\", \"strokeWidth\":20+\"px\", \"color\": \"#535FF6\"}} dots=\"8\">\n   </spinning-dots>) }\n        </section>\n        <section>\n          { loading && (<div> {courses.map(course=>(<CourseItem course={course} />))} </div>)  }\n        </section>\n        </div>\n    );\n};\n\n\nexport default Courses;\n\n","import React from 'react';\n\nconst Django = () => {\n    return (\n       <h1> Django </h1> \n    );\n};\n\n\nexport default Django;\n","import React from 'react';\n\nconst DeveloperMath = () => {\n    return (\n       <h1> DeveloperMath </h1> \n    );\n};\n\n\nexport default DeveloperMath;\n","import React from 'react';\n\nconst Mercure = () =>{\n\treturn(\n\t\t<article>\n\t\t  <div>\n\t\t      <h1> </h1>\n\t\t      <h3> </h3>\n\t\t  </div>\n\t\t  <div>\n\t\t     <img src= '' />\n\t\t  </div>\n\t\t  <div>\n\t\t     <h5> </h5>\n\t\t     <p> </p>\n\t\t  </div>\n\t\t  <div>\n\t\t    \n\t\t  </div>\n\t\t</article>\n    );\n}\nexport default Mercure;","import React from 'react';\n\nconst SymfonyReact = () => {\n    return (\n       <h1> SymfonyReact </h1> \n    );\n};\n\n\nexport default SymfonyReact;\n","import React from 'react';\n\nconst Express = () => {\n    return (\n       <h1> Express </h1> \n    );\n};\n\n\nexport default Express;\n","import React from 'react';\nimport { Route } from \"react-router-dom\";\nimport Django from './django_hello_world';\nimport DeveloperMath from './math_for_developers'\nimport Mercure from './mercure_show';\nimport SymfonyReact from './symfony_react';\nimport Express from './node_express_app';\n\nconst StaticRoutes = () => {\n    return (\n        <>\n      <Route path=\"/django-demo-app\" component= { Django } />\n      <Route path=\"/math-for-developers\" component= { DeveloperMath } />\n      <Route path=\"/mercure-protocol-with-symfony\" component= { Mercure } />\n      <Route path=\"/node-express-app\" component= { Express } />\n      <Route path=\"/symfony-react\" component= { SymfonyReact } />\n        </>\n    );\n};\n\n\nexport default StaticRoutes;\n","import React from 'react';\nimport '../Styles/header.css';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n    return (\n       <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <Link className=\"navbar-brand\" to=\"/\">Coding with Najmi</Link>\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span className=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul className=\"navbar-nav mr-auto\">\n      <li className=\"nav-item active\">\n        <Link className=\"nav-link\" to=\"/\">Home <span className=\"sr-only\">\n        (current)</span></Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link className=\"nav-link\" to=\"/about-me\">About Me</Link>\n      </li>\n\n        <li className=\"nav-item\">\n        <Link className=\"nav-link\" to=\"/blog\">Blogs</Link>\n      </li>\n       <li className=\"nav-item\">\n        <Link className=\"nav-link\" to=\"/courses\">Courses</Link>\n      </li>\n    </ul>\n    <form className=\"form-inline my-2 my-lg-0\">\n      <input className=\"form-control mr-sm-2\" type=\"search\"\n       placeholder=\"Search\" aria-label=\"Search\" />\n      <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n    </form>\n  </div>\n</nav>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport Home from './Pages/Home';\nimport Aboutme from './Pages/Aboutme';\nimport PostDetails from './Pages/PostDetails';\nimport AsideBar from './Components/AsideBar';\nimport Blog from './Pages/Blog';\nimport Courses from './Pages/Courses';\nimport StaticRoutes from './Pages/static_pages/static-routes'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  withRouter\n} from \"react-router-dom\";\nimport Header from './Components/Header';\nimport './Styles/header.css';\n\nconst App = () => {\n    return (\n        <Router>\n        <Header />\n        <AsideBar />\n      <Switch>\n      <Route path=\"/\" component= { Home} exact />\n      <Route path=\"/blog-:id\" component= { PostDetails}  />\n      <Route path=\"/about-me\" component= { Aboutme}  />\n      <Route path=\"/blog\" component= { Blog}  />\n      <Route path=\"/courses\" component= { Courses}  />\n\n      <StaticRoutes />\n   \n     </Switch>\n    \n   </Router>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}