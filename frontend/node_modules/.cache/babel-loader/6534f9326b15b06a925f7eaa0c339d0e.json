{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar node_1 = require(\"./node\");\n\nexports.Node = node_1.Node;\nexports.Element = node_1.Element;\nexports.DataNode = node_1.DataNode;\nexports.NodeWithChildren = node_1.NodeWithChildren;\nvar reWhitespace = /\\s+/g; // Default options\n\nvar defaultOpts = {\n  normalizeWhitespace: false,\n  withStartIndices: false,\n  withEndIndices: false\n};\n\nvar DomHandler =\n/** @class */\nfunction () {\n  /**\n   * Initiate a new DomHandler.\n   *\n   * @param callback Called once parsing has completed.\n   * @param options Settings for the handler.\n   * @param elementCB Callback whenever a tag is closed.\n   */\n  function DomHandler(callback, options, elementCB) {\n    /** The constructed DOM */\n    this.dom = [];\n    /** Indicated whether parsing has been completed. */\n\n    this._done = false;\n    /** Stack of open tags. */\n\n    this._tagStack = [];\n    /** A data node that is still being written to. */\n\n    this._lastNode = null;\n    /** Reference to the parser instance. Used for location information. */\n\n    this._parser = null; // Make it possible to skip arguments, for backwards-compatibility\n\n    if (typeof options === \"function\") {\n      elementCB = options;\n      options = defaultOpts;\n    }\n\n    if (typeof callback === \"object\") {\n      options = callback;\n      callback = undefined;\n    }\n\n    this._callback = callback || null;\n    this._options = options || defaultOpts;\n    this._elementCB = elementCB || null;\n  }\n\n  DomHandler.prototype.onparserinit = function (parser) {\n    this._parser = parser;\n  }; // Resets the handler back to starting state\n\n\n  DomHandler.prototype.onreset = function () {\n    this.dom = [];\n    this._done = false;\n    this._tagStack = [];\n    this._lastNode = null;\n    this._parser = this._parser || null;\n  }; // Signals the handler that parsing is done\n\n\n  DomHandler.prototype.onend = function () {\n    if (this._done) return;\n    this._done = true;\n    this._parser = null;\n    this.handleCallback(null);\n  };\n\n  DomHandler.prototype.onerror = function (error) {\n    this.handleCallback(error);\n  };\n\n  DomHandler.prototype.onclosetag = function () {\n    this._lastNode = null; // If(this._tagStack.pop().name !== name) this.handleCallback(Error(\"Tagname didn't match!\"));\n\n    var elem = this._tagStack.pop();\n\n    if (!elem || !this._parser) {\n      return;\n    }\n\n    if (this._options.withEndIndices) {\n      elem.endIndex = this._parser.endIndex;\n    }\n\n    if (this._elementCB) this._elementCB(elem);\n  };\n\n  DomHandler.prototype.onopentag = function (name, attribs) {\n    var element = new node_1.Element(name, attribs);\n    this.addNode(element);\n\n    this._tagStack.push(element);\n  };\n\n  DomHandler.prototype.ontext = function (data) {\n    var normalize = this._options.normalizeWhitespace;\n    var _lastNode = this._lastNode;\n\n    if (_lastNode && _lastNode.type === \"text\"\n    /* Text */\n    ) {\n        if (normalize) {\n          _lastNode.data = (_lastNode.data + data).replace(reWhitespace, \" \");\n        } else {\n          _lastNode.data += data;\n        }\n      } else {\n      if (normalize) {\n        data = data.replace(reWhitespace, \" \");\n      }\n\n      var node = new node_1.DataNode(\"text\"\n      /* Text */\n      , data);\n      this.addNode(node);\n      this._lastNode = node;\n    }\n  };\n\n  DomHandler.prototype.oncomment = function (data) {\n    if (this._lastNode && this._lastNode.type === \"comment\"\n    /* Comment */\n    ) {\n        this._lastNode.data += data;\n        return;\n      }\n\n    var node = new node_1.DataNode(\"comment\"\n    /* Comment */\n    , data);\n    this.addNode(node);\n    this._lastNode = node;\n  };\n\n  DomHandler.prototype.oncommentend = function () {\n    this._lastNode = null;\n  };\n\n  DomHandler.prototype.oncdatastart = function () {\n    var text = new node_1.DataNode(\"text\"\n    /* Text */\n    , \"\");\n    var node = new node_1.NodeWithChildren(\"cdata\"\n    /* CDATA */\n    , [text]);\n    this.addNode(node);\n    text.parent = node;\n    this._lastNode = text;\n  };\n\n  DomHandler.prototype.oncdataend = function () {\n    this._lastNode = null;\n  };\n\n  DomHandler.prototype.onprocessinginstruction = function (name, data) {\n    var node = new node_1.ProcessingInstruction(name, data);\n    this.addNode(node);\n  };\n\n  DomHandler.prototype.handleCallback = function (error) {\n    if (typeof this._callback === \"function\") {\n      this._callback(error, this.dom);\n    } else if (error) {\n      throw error;\n    }\n  };\n\n  DomHandler.prototype.addNode = function (node) {\n    var parent = this._tagStack[this._tagStack.length - 1];\n    var siblings = parent ? parent.children : this.dom;\n    var previousSibling = siblings[siblings.length - 1];\n\n    if (this._parser) {\n      if (this._options.withStartIndices) {\n        node.startIndex = this._parser.startIndex;\n      }\n\n      if (this._options.withEndIndices) {\n        node.endIndex = this._parser.endIndex;\n      }\n    }\n\n    siblings.push(node);\n\n    if (previousSibling) {\n      node.prev = previousSibling;\n      previousSibling.next = node;\n    }\n\n    if (parent) {\n      node.parent = parent;\n    }\n\n    this._lastNode = null;\n  };\n\n  DomHandler.prototype.addDataNode = function (node) {\n    this.addNode(node);\n    this._lastNode = node;\n  };\n\n  return DomHandler;\n}();\n\nexports.DomHandler = DomHandler;\nexports.default = DomHandler;","map":{"version":3,"sources":["/home/chemime/Desktop/Python/django/trainingapp/frontend/node_modules/domhandler/lib/index.js"],"names":["Object","defineProperty","exports","value","node_1","require","Node","Element","DataNode","NodeWithChildren","reWhitespace","defaultOpts","normalizeWhitespace","withStartIndices","withEndIndices","DomHandler","callback","options","elementCB","dom","_done","_tagStack","_lastNode","_parser","undefined","_callback","_options","_elementCB","prototype","onparserinit","parser","onreset","onend","handleCallback","onerror","error","onclosetag","elem","pop","endIndex","onopentag","name","attribs","element","addNode","push","ontext","data","normalize","type","replace","node","oncomment","oncommentend","oncdatastart","text","parent","oncdataend","onprocessinginstruction","ProcessingInstruction","length","siblings","children","previousSibling","startIndex","prev","next","addDataNode","default"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar node_1 = require(\"./node\");\nexports.Node = node_1.Node;\nexports.Element = node_1.Element;\nexports.DataNode = node_1.DataNode;\nexports.NodeWithChildren = node_1.NodeWithChildren;\nvar reWhitespace = /\\s+/g;\n// Default options\nvar defaultOpts = {\n    normalizeWhitespace: false,\n    withStartIndices: false,\n    withEndIndices: false\n};\nvar DomHandler = /** @class */ (function () {\n    /**\n     * Initiate a new DomHandler.\n     *\n     * @param callback Called once parsing has completed.\n     * @param options Settings for the handler.\n     * @param elementCB Callback whenever a tag is closed.\n     */\n    function DomHandler(callback, options, elementCB) {\n        /** The constructed DOM */\n        this.dom = [];\n        /** Indicated whether parsing has been completed. */\n        this._done = false;\n        /** Stack of open tags. */\n        this._tagStack = [];\n        /** A data node that is still being written to. */\n        this._lastNode = null;\n        /** Reference to the parser instance. Used for location information. */\n        this._parser = null;\n        // Make it possible to skip arguments, for backwards-compatibility\n        if (typeof options === \"function\") {\n            elementCB = options;\n            options = defaultOpts;\n        }\n        if (typeof callback === \"object\") {\n            options = callback;\n            callback = undefined;\n        }\n        this._callback = callback || null;\n        this._options = options || defaultOpts;\n        this._elementCB = elementCB || null;\n    }\n    DomHandler.prototype.onparserinit = function (parser) {\n        this._parser = parser;\n    };\n    // Resets the handler back to starting state\n    DomHandler.prototype.onreset = function () {\n        this.dom = [];\n        this._done = false;\n        this._tagStack = [];\n        this._lastNode = null;\n        this._parser = this._parser || null;\n    };\n    // Signals the handler that parsing is done\n    DomHandler.prototype.onend = function () {\n        if (this._done)\n            return;\n        this._done = true;\n        this._parser = null;\n        this.handleCallback(null);\n    };\n    DomHandler.prototype.onerror = function (error) {\n        this.handleCallback(error);\n    };\n    DomHandler.prototype.onclosetag = function () {\n        this._lastNode = null;\n        // If(this._tagStack.pop().name !== name) this.handleCallback(Error(\"Tagname didn't match!\"));\n        var elem = this._tagStack.pop();\n        if (!elem || !this._parser) {\n            return;\n        }\n        if (this._options.withEndIndices) {\n            elem.endIndex = this._parser.endIndex;\n        }\n        if (this._elementCB)\n            this._elementCB(elem);\n    };\n    DomHandler.prototype.onopentag = function (name, attribs) {\n        var element = new node_1.Element(name, attribs);\n        this.addNode(element);\n        this._tagStack.push(element);\n    };\n    DomHandler.prototype.ontext = function (data) {\n        var normalize = this._options.normalizeWhitespace;\n        var _lastNode = this._lastNode;\n        if (_lastNode && _lastNode.type === \"text\" /* Text */) {\n            if (normalize) {\n                _lastNode.data = (_lastNode.data + data).replace(reWhitespace, \" \");\n            }\n            else {\n                _lastNode.data += data;\n            }\n        }\n        else {\n            if (normalize) {\n                data = data.replace(reWhitespace, \" \");\n            }\n            var node = new node_1.DataNode(\"text\" /* Text */, data);\n            this.addNode(node);\n            this._lastNode = node;\n        }\n    };\n    DomHandler.prototype.oncomment = function (data) {\n        if (this._lastNode && this._lastNode.type === \"comment\" /* Comment */) {\n            this._lastNode.data += data;\n            return;\n        }\n        var node = new node_1.DataNode(\"comment\" /* Comment */, data);\n        this.addNode(node);\n        this._lastNode = node;\n    };\n    DomHandler.prototype.oncommentend = function () {\n        this._lastNode = null;\n    };\n    DomHandler.prototype.oncdatastart = function () {\n        var text = new node_1.DataNode(\"text\" /* Text */, \"\");\n        var node = new node_1.NodeWithChildren(\"cdata\" /* CDATA */, [text]);\n        this.addNode(node);\n        text.parent = node;\n        this._lastNode = text;\n    };\n    DomHandler.prototype.oncdataend = function () {\n        this._lastNode = null;\n    };\n    DomHandler.prototype.onprocessinginstruction = function (name, data) {\n        var node = new node_1.ProcessingInstruction(name, data);\n        this.addNode(node);\n    };\n    DomHandler.prototype.handleCallback = function (error) {\n        if (typeof this._callback === \"function\") {\n            this._callback(error, this.dom);\n        }\n        else if (error) {\n            throw error;\n        }\n    };\n    DomHandler.prototype.addNode = function (node) {\n        var parent = this._tagStack[this._tagStack.length - 1];\n        var siblings = parent ? parent.children : this.dom;\n        var previousSibling = siblings[siblings.length - 1];\n        if (this._parser) {\n            if (this._options.withStartIndices) {\n                node.startIndex = this._parser.startIndex;\n            }\n            if (this._options.withEndIndices) {\n                node.endIndex = this._parser.endIndex;\n            }\n        }\n        siblings.push(node);\n        if (previousSibling) {\n            node.prev = previousSibling;\n            previousSibling.next = node;\n        }\n        if (parent) {\n            node.parent = parent;\n        }\n        this._lastNode = null;\n    };\n    DomHandler.prototype.addDataNode = function (node) {\n        this.addNode(node);\n        this._lastNode = node;\n    };\n    return DomHandler;\n}());\nexports.DomHandler = DomHandler;\nexports.default = DomHandler;\n"]},"metadata":{},"sourceType":"script"}