{"ast":null,"code":"/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n  return re.source;\n}\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\n\n\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\n\n\nfunction concat() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  var joined = args.map(function (x) {\n    return source(x);\n  }).join(\"\");\n  return joined;\n}\n/*\n Language: Groovy\n Author: Guillaume Laforge <glaforge@gmail.com>\n Description: Groovy programming language implementation inspired from Vsevolod's Java mode\n Website: https://groovy-lang.org\n */\n\n\nfunction variants(variants) {\n  var obj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  obj.variants = variants;\n  return obj;\n}\n\nfunction groovy(hljs) {\n  var IDENT_RE = '[A-Za-z0-9_$]+';\n  var COMMENT = variants([hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.COMMENT('/\\\\*\\\\*', '\\\\*/', {\n    relevance: 0,\n    contains: [{\n      // eat up @'s in emails to prevent them to be recognized as doctags\n      begin: /\\w+@/,\n      relevance: 0\n    }, {\n      className: 'doctag',\n      begin: '@[A-Za-z]+'\n    }]\n  })]);\n  var REGEXP = {\n    className: 'regexp',\n    begin: /~?\\/[^\\/\\n]+\\//,\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  var NUMBER = variants([hljs.BINARY_NUMBER_MODE, hljs.C_NUMBER_MODE]);\n  var STRING = variants([{\n    begin: /\"\"\"/,\n    end: /\"\"\"/\n  }, {\n    begin: /'''/,\n    end: /'''/\n  }, {\n    begin: \"\\\\$/\",\n    end: \"/\\\\$\",\n    relevance: 10\n  }, hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE], {\n    className: \"string\"\n  });\n  return {\n    name: 'Groovy',\n    keywords: {\n      built_in: 'this super',\n      literal: 'true false null',\n      keyword: 'byte short char int long boolean float double void ' + // groovy specific keywords\n      'def as in assert trait ' + // common keywords with Java\n      'abstract static volatile transient public private protected synchronized final ' + 'class interface enum if else for while switch case break default continue ' + 'throw throws try catch finally implements extends new import package return instanceof'\n    },\n    contains: [hljs.SHEBANG(), COMMENT, STRING, REGEXP, NUMBER, {\n      className: 'class',\n      beginKeywords: 'class interface trait enum',\n      end: '{',\n      illegal: ':',\n      contains: [{\n        beginKeywords: 'extends implements'\n      }, hljs.UNDERSCORE_TITLE_MODE]\n    }, {\n      className: 'meta',\n      begin: '@[A-Za-z]+'\n    }, {\n      // highlight map keys and named parameters as attrs\n      className: 'attr',\n      begin: IDENT_RE + '[ \\t]*:'\n    }, {\n      // catch middle element of the ternary operator\n      // to avoid highlight it as a label, named parameter, or map key\n      begin: /\\?/,\n      end: /:/,\n      contains: [COMMENT, STRING, REGEXP, NUMBER, 'self']\n    }, {\n      // highlight labeled statements\n      className: 'symbol',\n      begin: '^[ \\t]*' + lookahead(IDENT_RE + ':'),\n      excludeBegin: true,\n      end: IDENT_RE + ':',\n      relevance: 0\n    }],\n    illegal: /#|<\\//\n  };\n}\n\nmodule.exports = groovy;","map":{"version":3,"sources":["/home/chemime/Desktop/Python/django/trainingapp/frontend/node_modules/highlight.js/lib/languages/groovy.js"],"names":["source","re","lookahead","concat","args","joined","map","x","join","variants","obj","groovy","hljs","IDENT_RE","COMMENT","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","relevance","contains","begin","className","REGEXP","BACKSLASH_ESCAPE","NUMBER","BINARY_NUMBER_MODE","C_NUMBER_MODE","STRING","end","APOS_STRING_MODE","QUOTE_STRING_MODE","name","keywords","built_in","literal","keyword","SHEBANG","beginKeywords","illegal","UNDERSCORE_TITLE_MODE","excludeBegin","module","exports"],"mappings":"AAAA;;;;;AAKA;;;;AAIA,SAASA,MAAT,CAAgBC,EAAhB,EAAoB;AAClB,MAAI,CAACA,EAAL,EAAS,OAAO,IAAP;AACT,MAAI,OAAOA,EAAP,KAAc,QAAlB,EAA4B,OAAOA,EAAP;AAE5B,SAAOA,EAAE,CAACD,MAAV;AACD;AAED;;;;;;AAIA,SAASE,SAAT,CAAmBD,EAAnB,EAAuB;AACrB,SAAOE,MAAM,CAAC,KAAD,EAAQF,EAAR,EAAY,GAAZ,CAAb;AACD;AAED;;;;;;AAIA,SAASE,MAAT,GAAyB;AAAA,oCAANC,IAAM;AAANA,IAAAA,IAAM;AAAA;;AACvB,MAAMC,MAAM,GAAGD,IAAI,CAACE,GAAL,CAAS,UAACC,CAAD;AAAA,WAAOP,MAAM,CAACO,CAAD,CAAb;AAAA,GAAT,EAA2BC,IAA3B,CAAgC,EAAhC,CAAf;AACA,SAAOH,MAAP;AACD;AAED;;;;;;;;AAOA,SAASI,QAAT,CAAkBA,QAAlB,EAAsC;AAAA,MAAVC,GAAU,uEAAJ,EAAI;AACpCA,EAAAA,GAAG,CAACD,QAAJ,GAAeA,QAAf;AACA,SAAOC,GAAP;AACD;;AAED,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;AACpB,MAAMC,QAAQ,GAAG,gBAAjB;AACA,MAAMC,OAAO,GAAGL,QAAQ,CAAC,CACvBG,IAAI,CAACG,mBADkB,EAEvBH,IAAI,CAACI,oBAFkB,EAGvBJ,IAAI,CAACE,OAAL,CACE,SADF,EAEE,MAFF,EAGE;AACEG,IAAAA,SAAS,EAAG,CADd;AAEEC,IAAAA,QAAQ,EAAG,CACT;AACE;AACAC,MAAAA,KAAK,EAAE,MAFT;AAEiBF,MAAAA,SAAS,EAAE;AAF5B,KADS,EAIN;AACDG,MAAAA,SAAS,EAAG,QADX;AAEDD,MAAAA,KAAK,EAAG;AAFP,KAJM;AAFb,GAHF,CAHuB,CAAD,CAAxB;AAoBA,MAAME,MAAM,GAAG;AACbD,IAAAA,SAAS,EAAE,QADE;AAEbD,IAAAA,KAAK,EAAE,gBAFM;AAGbD,IAAAA,QAAQ,EAAE,CACRN,IAAI,CAACU,gBADG;AAHG,GAAf;AAOA,MAAMC,MAAM,GAAGd,QAAQ,CAAC,CACtBG,IAAI,CAACY,kBADiB,EAEtBZ,IAAI,CAACa,aAFiB,CAAD,CAAvB;AAIA,MAAMC,MAAM,GAAGjB,QAAQ,CAAC,CACtB;AACEU,IAAAA,KAAK,EAAE,KADT;AAEEQ,IAAAA,GAAG,EAAE;AAFP,GADsB,EAInB;AACDR,IAAAA,KAAK,EAAE,KADN;AAEDQ,IAAAA,GAAG,EAAE;AAFJ,GAJmB,EAOnB;AACDR,IAAAA,KAAK,EAAE,MADN;AAEDQ,IAAAA,GAAG,EAAE,MAFJ;AAGDV,IAAAA,SAAS,EAAE;AAHV,GAPmB,EAYtBL,IAAI,CAACgB,gBAZiB,EAatBhB,IAAI,CAACiB,iBAbiB,CAAD,EAerB;AAAET,IAAAA,SAAS,EAAE;AAAb,GAfqB,CAAvB;AAkBE,SAAO;AACHU,IAAAA,IAAI,EAAE,QADH;AAEHC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,QAAQ,EAAE,YADJ;AAENC,MAAAA,OAAO,EAAE,iBAFH;AAGNC,MAAAA,OAAO,EACP,wDACA;AACA,+BAFA,GAGA;AACA,uFAJA,GAKA,4EALA,GAMA;AAVM,KAFP;AAcHhB,IAAAA,QAAQ,EAAE,CACNN,IAAI,CAACuB,OAAL,EADM,EAENrB,OAFM,EAGNY,MAHM,EAINL,MAJM,EAKNE,MALM,EAMN;AACIH,MAAAA,SAAS,EAAE,OADf;AAEIgB,MAAAA,aAAa,EAAE,4BAFnB;AAEiDT,MAAAA,GAAG,EAAE,GAFtD;AAGIU,MAAAA,OAAO,EAAE,GAHb;AAIInB,MAAAA,QAAQ,EAAE,CACN;AAACkB,QAAAA,aAAa,EAAE;AAAhB,OADM,EAENxB,IAAI,CAAC0B,qBAFC;AAJd,KANM,EAeN;AACIlB,MAAAA,SAAS,EAAE,MADf;AACuBD,MAAAA,KAAK,EAAE;AAD9B,KAfM,EAkBN;AACE;AACAC,MAAAA,SAAS,EAAE,MAFb;AAEqBD,MAAAA,KAAK,EAAEN,QAAQ,GAAG;AAFvC,KAlBM,EAsBN;AACE;AACA;AACAM,MAAAA,KAAK,EAAE,IAHT;AAIEQ,MAAAA,GAAG,EAAE,GAJP;AAKET,MAAAA,QAAQ,EAAE,CACRJ,OADQ,EAERY,MAFQ,EAGRL,MAHQ,EAIRE,MAJQ,EAKR,MALQ;AALZ,KAtBM,EAmCN;AACI;AACAH,MAAAA,SAAS,EAAE,QAFf;AAGID,MAAAA,KAAK,EAAE,YAAYjB,SAAS,CAACW,QAAQ,GAAG,GAAZ,CAHhC;AAII0B,MAAAA,YAAY,EAAE,IAJlB;AAKIZ,MAAAA,GAAG,EAAEd,QAAQ,GAAG,GALpB;AAMII,MAAAA,SAAS,EAAE;AANf,KAnCM,CAdP;AA0DHoB,IAAAA,OAAO,EAAE;AA1DN,GAAP;AA4DH;;AAEDG,MAAM,CAACC,OAAP,GAAiB9B,MAAjB","sourcesContent":["/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\n Language: Groovy\n Author: Guillaume Laforge <glaforge@gmail.com>\n Description: Groovy programming language implementation inspired from Vsevolod's Java mode\n Website: https://groovy-lang.org\n */\n\nfunction variants(variants, obj = {}) {\n  obj.variants = variants;\n  return obj;\n}\n\nfunction groovy(hljs) {\n  const IDENT_RE = '[A-Za-z0-9_$]+';\n  const COMMENT = variants([\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    hljs.COMMENT(\n      '/\\\\*\\\\*',\n      '\\\\*/',\n      {\n        relevance : 0,\n        contains : [\n          {\n            // eat up @'s in emails to prevent them to be recognized as doctags\n            begin: /\\w+@/, relevance: 0\n          }, {\n            className : 'doctag',\n            begin : '@[A-Za-z]+'\n          }\n        ]\n      }\n    )\n  ]);\n  const REGEXP = {\n    className: 'regexp',\n    begin: /~?\\/[^\\/\\n]+\\//,\n    contains: [\n      hljs.BACKSLASH_ESCAPE\n    ]\n  };\n  const NUMBER = variants([\n    hljs.BINARY_NUMBER_MODE,\n    hljs.C_NUMBER_MODE,\n  ]);\n  const STRING = variants([\n    {\n      begin: /\"\"\"/,\n      end: /\"\"\"/\n    }, {\n      begin: /'''/,\n      end: /'''/\n    }, {\n      begin: \"\\\\$/\",\n      end: \"/\\\\$\",\n      relevance: 10\n    },\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    ],\n    { className: \"string\" }\n  );\n\n    return {\n        name: 'Groovy',\n        keywords: {\n            built_in: 'this super',\n            literal: 'true false null',\n            keyword:\n            'byte short char int long boolean float double void ' +\n            // groovy specific keywords\n            'def as in assert trait ' +\n            // common keywords with Java\n            'abstract static volatile transient public private protected synchronized final ' +\n            'class interface enum if else for while switch case break default continue ' +\n            'throw throws try catch finally implements extends new import package return instanceof'\n        },\n        contains: [\n            hljs.SHEBANG(),\n            COMMENT,\n            STRING,\n            REGEXP,\n            NUMBER,\n            {\n                className: 'class',\n                beginKeywords: 'class interface trait enum', end: '{',\n                illegal: ':',\n                contains: [\n                    {beginKeywords: 'extends implements'},\n                    hljs.UNDERSCORE_TITLE_MODE\n                ]\n            },\n            {\n                className: 'meta', begin: '@[A-Za-z]+'\n            },\n            {\n              // highlight map keys and named parameters as attrs\n              className: 'attr', begin: IDENT_RE + '[ \\t]*:'\n            },\n            {\n              // catch middle element of the ternary operator\n              // to avoid highlight it as a label, named parameter, or map key\n              begin: /\\?/,\n              end: /:/,\n              contains: [\n                COMMENT,\n                STRING,\n                REGEXP,\n                NUMBER,\n                'self'\n              ]\n            },\n            {\n                // highlight labeled statements\n                className: 'symbol',\n                begin: '^[ \\t]*' + lookahead(IDENT_RE + ':'),\n                excludeBegin: true,\n                end: IDENT_RE + ':',\n                relevance: 0\n            }\n        ],\n        illegal: /#|<\\//\n    };\n}\n\nmodule.exports = groovy;\n"]},"metadata":{},"sourceType":"script"}