{"ast":null,"code":"var _jsxFileName = \"/home/chemime/Desktop/Python/django/trainingapp/frontend/src/Components/blog/markdown-parser/MarkDown.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport CodeBlock from \"./CodeBlock.jsx\";\nimport { toast } from 'react-toastify';\n\nconst MarkDown = ({\n  content\n}) => {\n  const [markdown, setMarkdown] = useState('');\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    fetch(content).then(res => res.text()).then(text => {\n      setMarkdown(text);\n      setLoading(true);\n    }).catch(err => {\n      setLoading(false);\n      toast.error(\"unexpected error happen when we tryinig to load the post !\");\n    });\n  }, [content]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, loading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(ReactMarkdown, {\n    source: markdown,\n    skipHtml: false,\n    escapeHtml: false,\n    renderers: {\n      code: CodeBlock\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default MarkDown;","map":{"version":3,"sources":["/home/chemime/Desktop/Python/django/trainingapp/frontend/src/Components/blog/markdown-parser/MarkDown.jsx"],"names":["React","useEffect","useState","ReactMarkdown","CodeBlock","toast","MarkDown","content","markdown","setMarkdown","loading","setLoading","fetch","then","res","text","catch","err","error","code"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AAEA,OAAOC,SAAP,MAAsB,iBAAtB;AAEA,SAASC,KAAT,QAAsB,gBAAtB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAE/B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACG,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AAEHD,EAAAA,SAAS,CAAC,MAAI;AAEbW,IAAAA,KAAK,CAACL,OAAD,CAAL,CACOM,IADP,CACYC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EADjB,EAEOF,IAFP,CAEYE,IAAI,IAAE;AACRN,MAAAA,WAAW,CAACM,IAAD,CAAX;AACAJ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KALP,EAMOK,KANP,CAMaC,GAAG,IAAE;AACRN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAN,MAAAA,KAAK,CAACa,KAAN,CAAY,4DAAZ;AACH,KATP;AAWA,GAbQ,EAaN,CAACX,OAAD,CAbM,CAAT;AAeG,sBACK,0CAGCG,OAAO,iBACR;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACO,oBAAC,aAAD;AACA,IAAA,MAAM,EAAEF,QADR;AAEA,IAAA,QAAQ,EAAE,KAFV;AAGA,IAAA,UAAU,EAAE,KAHZ;AAIA,IAAA,SAAS,EAAE;AAAEW,MAAAA,IAAI,EAAEf;AAAR,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADP,CAJA,CADL;AAkBH,CAtCD;;AAwCA,eAAeE,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\n\nimport CodeBlock from \"./CodeBlock.jsx\";\n\nimport { toast } from 'react-toastify'\n\nconst MarkDown = ({content}) => {\n\n\tconst [markdown, setMarkdown] = useState('');\n    const [loading, setLoading] = useState(false);\n\n\tuseEffect(()=>{\n\n\t\tfetch(content)\n        .then(res=>res.text())\n        .then(text=>{\n            setMarkdown(text);\n            setLoading(true);\n        })\n        .catch(err=>{\n            setLoading(false);\n            toast.error(\"unexpected error happen when we tryinig to load the post !\")\n        });\n\n\t}, [content]);\n\n    return (\n         <>\n        \n         \n         {loading && (\n    \t    <div className=\"container\">\n                <ReactMarkdown \n                source={markdown}\n                skipHtml={false}\n                escapeHtml={false}\n                renderers={{ code: CodeBlock }}\n                \n               \n                />\n            </div>\n         )}\n         </>\n    );\n};\n\nexport default MarkDown;\n"]},"metadata":{},"sourceType":"module"}