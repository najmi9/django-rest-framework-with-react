{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar xml_json_1 = __importDefault(require(\"./maps/xml.json\"));\n\nvar inverseXML = getInverseObj(xml_json_1.default);\nvar xmlReplacer = getInverseReplacer(inverseXML);\nexports.encodeXML = getInverse(inverseXML, xmlReplacer);\n\nvar entities_json_1 = __importDefault(require(\"./maps/entities.json\"));\n\nvar inverseHTML = getInverseObj(entities_json_1.default);\nvar htmlReplacer = getInverseReplacer(inverseHTML);\nexports.encodeHTML = getInverse(inverseHTML, htmlReplacer);\n\nfunction getInverseObj(obj) {\n  return Object.keys(obj).sort().reduce(function (inverse, name) {\n    inverse[obj[name]] = \"&\" + name + \";\";\n    return inverse;\n  }, {});\n}\n\nfunction getInverseReplacer(inverse) {\n  var single = [];\n  var multiple = [];\n  Object.keys(inverse).forEach(function (k) {\n    return k.length === 1 ? // Add value to single array\n    single.push(\"\\\\\" + k) : // Add value to multiple array\n    multiple.push(k);\n  }); //TODO add ranges\n\n  multiple.unshift(\"[\" + single.join(\"\") + \"]\");\n  return new RegExp(multiple.join(\"|\"), \"g\");\n}\n\nvar reNonASCII = /[^\\0-\\x7F]/g;\nvar reAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\nfunction singleCharReplacer(c) {\n  return \"&#x\" + c.charCodeAt(0).toString(16).toUpperCase() + \";\";\n} // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any\n\n\nfunction astralReplacer(c, _) {\n  // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n  var high = c.charCodeAt(0);\n  var low = c.charCodeAt(1);\n  var codePoint = (high - 0xd800) * 0x400 + low - 0xdc00 + 0x10000;\n  return \"&#x\" + codePoint.toString(16).toUpperCase() + \";\";\n}\n\nfunction getInverse(inverse, re) {\n  return function (data) {\n    return data.replace(re, function (name) {\n      return inverse[name];\n    }).replace(reAstralSymbols, astralReplacer).replace(reNonASCII, singleCharReplacer);\n  };\n}\n\nvar reXmlChars = getInverseReplacer(inverseXML);\n\nfunction escape(data) {\n  return data.replace(reXmlChars, singleCharReplacer).replace(reAstralSymbols, astralReplacer).replace(reNonASCII, singleCharReplacer);\n}\n\nexports.escape = escape;","map":{"version":3,"sources":["/home/chemime/Desktop/Python/django/trainingapp/frontend/node_modules/entities/lib/encode.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","xml_json_1","require","inverseXML","getInverseObj","default","xmlReplacer","getInverseReplacer","encodeXML","getInverse","entities_json_1","inverseHTML","htmlReplacer","encodeHTML","obj","keys","sort","reduce","inverse","name","single","multiple","forEach","k","length","push","unshift","join","RegExp","reNonASCII","reAstralSymbols","singleCharReplacer","c","charCodeAt","toString","toUpperCase","astralReplacer","_","high","low","codePoint","re","data","replace","reXmlChars","escape"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar xml_json_1 = __importDefault(require(\"./maps/xml.json\"));\nvar inverseXML = getInverseObj(xml_json_1.default);\nvar xmlReplacer = getInverseReplacer(inverseXML);\nexports.encodeXML = getInverse(inverseXML, xmlReplacer);\nvar entities_json_1 = __importDefault(require(\"./maps/entities.json\"));\nvar inverseHTML = getInverseObj(entities_json_1.default);\nvar htmlReplacer = getInverseReplacer(inverseHTML);\nexports.encodeHTML = getInverse(inverseHTML, htmlReplacer);\nfunction getInverseObj(obj) {\n    return Object.keys(obj)\n        .sort()\n        .reduce(function (inverse, name) {\n        inverse[obj[name]] = \"&\" + name + \";\";\n        return inverse;\n    }, {});\n}\nfunction getInverseReplacer(inverse) {\n    var single = [];\n    var multiple = [];\n    Object.keys(inverse).forEach(function (k) {\n        return k.length === 1\n            ? // Add value to single array\n                single.push(\"\\\\\" + k)\n            : // Add value to multiple array\n                multiple.push(k);\n    });\n    //TODO add ranges\n    multiple.unshift(\"[\" + single.join(\"\") + \"]\");\n    return new RegExp(multiple.join(\"|\"), \"g\");\n}\nvar reNonASCII = /[^\\0-\\x7F]/g;\nvar reAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\nfunction singleCharReplacer(c) {\n    return \"&#x\" + c\n        .charCodeAt(0)\n        .toString(16)\n        .toUpperCase() + \";\";\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any\nfunction astralReplacer(c, _) {\n    // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n    var high = c.charCodeAt(0);\n    var low = c.charCodeAt(1);\n    var codePoint = (high - 0xd800) * 0x400 + low - 0xdc00 + 0x10000;\n    return \"&#x\" + codePoint.toString(16).toUpperCase() + \";\";\n}\nfunction getInverse(inverse, re) {\n    return function (data) {\n        return data\n            .replace(re, function (name) { return inverse[name]; })\n            .replace(reAstralSymbols, astralReplacer)\n            .replace(reNonASCII, singleCharReplacer);\n    };\n}\nvar reXmlChars = getInverseReplacer(inverseXML);\nfunction escape(data) {\n    return data\n        .replace(reXmlChars, singleCharReplacer)\n        .replace(reAstralSymbols, astralReplacer)\n        .replace(reNonASCII, singleCharReplacer);\n}\nexports.escape = escape;\n"]},"metadata":{},"sourceType":"script"}