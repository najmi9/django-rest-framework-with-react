{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar domhandler_1 = __importDefault(require(\"domhandler\"));\n\nvar DomUtils = __importStar(require(\"domutils\"));\n\nvar Parser_1 = require(\"./Parser\"); //TODO: Consume data as it is coming in\n\n\nvar FeedHandler =\n/** @class */\nfunction (_super) {\n  __extends(FeedHandler, _super);\n  /**\n   *\n   * @param callback\n   * @param options\n   */\n\n\n  function FeedHandler(callback, options) {\n    var _this = this;\n\n    if (typeof callback === \"object\" && callback !== null) {\n      callback = undefined;\n      options = callback;\n    }\n\n    _this = _super.call(this, callback, options) || this;\n    return _this;\n  }\n\n  FeedHandler.prototype.onend = function () {\n    var feed = {};\n    var feedRoot = getOneElement(isValidFeed, this.dom);\n\n    if (feedRoot) {\n      if (feedRoot.name === \"feed\") {\n        var childs = feedRoot.children;\n        feed.type = \"atom\";\n        addConditionally(feed, \"id\", \"id\", childs);\n        addConditionally(feed, \"title\", \"title\", childs);\n        var href = getAttribute(\"href\", getOneElement(\"link\", childs));\n\n        if (href) {\n          feed.link = href;\n        }\n\n        addConditionally(feed, \"description\", \"subtitle\", childs);\n        var updated = fetch(\"updated\", childs);\n\n        if (updated) {\n          feed.updated = new Date(updated);\n        }\n\n        addConditionally(feed, \"author\", \"email\", childs, true);\n        feed.items = getElements(\"entry\", childs).map(function (item) {\n          var entry = {};\n          var children = item.children;\n          addConditionally(entry, \"id\", \"id\", children);\n          addConditionally(entry, \"title\", \"title\", children);\n          var href = getAttribute(\"href\", getOneElement(\"link\", children));\n\n          if (href) {\n            entry.link = href;\n          }\n\n          var description = fetch(\"summary\", children) || fetch(\"content\", children);\n\n          if (description) {\n            entry.description = description;\n          }\n\n          var pubDate = fetch(\"updated\", children);\n\n          if (pubDate) {\n            entry.pubDate = new Date(pubDate);\n          }\n\n          return entry;\n        });\n      } else {\n        var childs = getOneElement(\"channel\", feedRoot.children).children;\n        feed.type = feedRoot.name.substr(0, 3);\n        feed.id = \"\";\n        addConditionally(feed, \"title\", \"title\", childs);\n        addConditionally(feed, \"link\", \"link\", childs);\n        addConditionally(feed, \"description\", \"description\", childs);\n        var updated = fetch(\"lastBuildDate\", childs);\n\n        if (updated) {\n          feed.updated = new Date(updated);\n        }\n\n        addConditionally(feed, \"author\", \"managingEditor\", childs, true);\n        feed.items = getElements(\"item\", feedRoot.children).map(function (item) {\n          var entry = {};\n          var children = item.children;\n          addConditionally(entry, \"id\", \"guid\", children);\n          addConditionally(entry, \"title\", \"title\", children);\n          addConditionally(entry, \"link\", \"link\", children);\n          addConditionally(entry, \"description\", \"description\", children);\n          var pubDate = fetch(\"pubDate\", children);\n          if (pubDate) entry.pubDate = new Date(pubDate);\n          return entry;\n        });\n      }\n    }\n\n    this.feed = feed;\n    this.handleCallback(feedRoot ? null : Error(\"couldn't find root of feed\"));\n  };\n\n  return FeedHandler;\n}(domhandler_1.default);\n\nexports.FeedHandler = FeedHandler;\n\nfunction getElements(what, where) {\n  return DomUtils.getElementsByTagName(what, where, true);\n}\n\nfunction getOneElement(what, where) {\n  return DomUtils.getElementsByTagName(what, where, true, 1)[0];\n}\n\nfunction fetch(what, where, recurse) {\n  if (recurse === void 0) {\n    recurse = false;\n  }\n\n  return DomUtils.getText(DomUtils.getElementsByTagName(what, where, recurse, 1)).trim();\n}\n\nfunction getAttribute(name, elem) {\n  if (!elem) {\n    return null;\n  }\n\n  var attribs = elem.attribs;\n  return attribs[name];\n}\n\nfunction addConditionally(obj, prop, what, where, recurse) {\n  if (recurse === void 0) {\n    recurse = false;\n  }\n\n  var tmp = fetch(what, where, recurse); // @ts-ignore\n\n  if (tmp) obj[prop] = tmp;\n}\n\nfunction isValidFeed(value) {\n  return value === \"rss\" || value === \"feed\" || value === \"rdf:RDF\";\n}\n\nvar defaultOptions = {\n  xmlMode: true\n};\n/**\n * Parse a feed.\n *\n * @param feed The feed that should be parsed, as a string.\n * @param options Optionally, options for parsing. When using this option, you probably want to set `xmlMode` to `true`.\n */\n\nfunction parseFeed(feed, options) {\n  if (options === void 0) {\n    options = defaultOptions;\n  }\n\n  var handler = new FeedHandler(options);\n  new Parser_1.Parser(handler, options).end(feed);\n  return handler.feed;\n}\n\nexports.parseFeed = parseFeed;","map":{"version":3,"sources":["/home/chemime/Desktop/Python/django/trainingapp/frontend/node_modules/htmlparser2/lib/FeedHandler.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__importDefault","mod","__esModule","__importStar","result","k","call","defineProperty","exports","value","domhandler_1","require","DomUtils","Parser_1","FeedHandler","_super","callback","options","_this","undefined","onend","feed","feedRoot","getOneElement","isValidFeed","dom","name","childs","children","type","addConditionally","href","getAttribute","link","updated","fetch","Date","items","getElements","map","item","entry","description","pubDate","substr","id","handleCallback","Error","default","what","where","getElementsByTagName","recurse","getText","trim","elem","attribs","obj","prop","tmp","defaultOptions","xmlMode","parseFeed","handler","Parser","end"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar domhandler_1 = __importDefault(require(\"domhandler\"));\nvar DomUtils = __importStar(require(\"domutils\"));\nvar Parser_1 = require(\"./Parser\");\n//TODO: Consume data as it is coming in\nvar FeedHandler = /** @class */ (function (_super) {\n    __extends(FeedHandler, _super);\n    /**\n     *\n     * @param callback\n     * @param options\n     */\n    function FeedHandler(callback, options) {\n        var _this = this;\n        if (typeof callback === \"object\" && callback !== null) {\n            callback = undefined;\n            options = callback;\n        }\n        _this = _super.call(this, callback, options) || this;\n        return _this;\n    }\n    FeedHandler.prototype.onend = function () {\n        var feed = {};\n        var feedRoot = getOneElement(isValidFeed, this.dom);\n        if (feedRoot) {\n            if (feedRoot.name === \"feed\") {\n                var childs = feedRoot.children;\n                feed.type = \"atom\";\n                addConditionally(feed, \"id\", \"id\", childs);\n                addConditionally(feed, \"title\", \"title\", childs);\n                var href = getAttribute(\"href\", getOneElement(\"link\", childs));\n                if (href) {\n                    feed.link = href;\n                }\n                addConditionally(feed, \"description\", \"subtitle\", childs);\n                var updated = fetch(\"updated\", childs);\n                if (updated) {\n                    feed.updated = new Date(updated);\n                }\n                addConditionally(feed, \"author\", \"email\", childs, true);\n                feed.items = getElements(\"entry\", childs).map(function (item) {\n                    var entry = {};\n                    var children = item.children;\n                    addConditionally(entry, \"id\", \"id\", children);\n                    addConditionally(entry, \"title\", \"title\", children);\n                    var href = getAttribute(\"href\", getOneElement(\"link\", children));\n                    if (href) {\n                        entry.link = href;\n                    }\n                    var description = fetch(\"summary\", children) ||\n                        fetch(\"content\", children);\n                    if (description) {\n                        entry.description = description;\n                    }\n                    var pubDate = fetch(\"updated\", children);\n                    if (pubDate) {\n                        entry.pubDate = new Date(pubDate);\n                    }\n                    return entry;\n                });\n            }\n            else {\n                var childs = getOneElement(\"channel\", feedRoot.children)\n                    .children;\n                feed.type = feedRoot.name.substr(0, 3);\n                feed.id = \"\";\n                addConditionally(feed, \"title\", \"title\", childs);\n                addConditionally(feed, \"link\", \"link\", childs);\n                addConditionally(feed, \"description\", \"description\", childs);\n                var updated = fetch(\"lastBuildDate\", childs);\n                if (updated) {\n                    feed.updated = new Date(updated);\n                }\n                addConditionally(feed, \"author\", \"managingEditor\", childs, true);\n                feed.items = getElements(\"item\", feedRoot.children).map(function (item) {\n                    var entry = {};\n                    var children = item.children;\n                    addConditionally(entry, \"id\", \"guid\", children);\n                    addConditionally(entry, \"title\", \"title\", children);\n                    addConditionally(entry, \"link\", \"link\", children);\n                    addConditionally(entry, \"description\", \"description\", children);\n                    var pubDate = fetch(\"pubDate\", children);\n                    if (pubDate)\n                        entry.pubDate = new Date(pubDate);\n                    return entry;\n                });\n            }\n        }\n        this.feed = feed;\n        this.handleCallback(feedRoot ? null : Error(\"couldn't find root of feed\"));\n    };\n    return FeedHandler;\n}(domhandler_1.default));\nexports.FeedHandler = FeedHandler;\nfunction getElements(what, where) {\n    return DomUtils.getElementsByTagName(what, where, true);\n}\nfunction getOneElement(what, where) {\n    return DomUtils.getElementsByTagName(what, where, true, 1)[0];\n}\nfunction fetch(what, where, recurse) {\n    if (recurse === void 0) { recurse = false; }\n    return DomUtils.getText(DomUtils.getElementsByTagName(what, where, recurse, 1)).trim();\n}\nfunction getAttribute(name, elem) {\n    if (!elem) {\n        return null;\n    }\n    var attribs = elem.attribs;\n    return attribs[name];\n}\nfunction addConditionally(obj, prop, what, where, recurse) {\n    if (recurse === void 0) { recurse = false; }\n    var tmp = fetch(what, where, recurse);\n    // @ts-ignore\n    if (tmp)\n        obj[prop] = tmp;\n}\nfunction isValidFeed(value) {\n    return value === \"rss\" || value === \"feed\" || value === \"rdf:RDF\";\n}\nvar defaultOptions = { xmlMode: true };\n/**\n * Parse a feed.\n *\n * @param feed The feed that should be parsed, as a string.\n * @param options Optionally, options for parsing. When using this option, you probably want to set `xmlMode` to `true`.\n */\nfunction parseFeed(feed, options) {\n    if (options === void 0) { options = defaultOptions; }\n    var handler = new FeedHandler(options);\n    new Parser_1.Parser(handler, options).end(feed);\n    return handler.feed;\n}\nexports.parseFeed = parseFeed;\n"]},"metadata":{},"sourceType":"script"}