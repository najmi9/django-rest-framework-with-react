{"ast":null,"code":"var _jsxFileName = \"/home/chemime/Desktop/Python/django/trainingapp/frontend/src/Pages/MarkDown.jsx\";\nimport React, { useEffect, useState } from 'react'; //import ReactMarkdown from 'react-markdown';\n\nimport content from './1.md';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport Markdown from 'markdown-to-jsx';\n\nconst MarkDown = () => {\n  const [md, setMd] = useState('');\n  useEffect(() => {}, []);\n  const input = '# This is a header\\n\\nAnd this is a paragraph';\n\n  const MyParagraph = ({\n    children\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, children);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Markdown, {\n    options: {\n      overrides: {\n        SyntaxHighlighter: {\n          component: SyntaxHighlighter,\n          props: {\n            docco\n          }\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(SyntaxHighlighter, {\n    language: \"php\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 6\n    }\n  }, \"# I am free and I wanna live $li = \\\"jack\\\"\")));\n};\n\nexport default MarkDown;","map":{"version":3,"sources":["/home/chemime/Desktop/Python/django/trainingapp/frontend/src/Pages/MarkDown.jsx"],"names":["React","useEffect","useState","content","Prism","SyntaxHighlighter","docco","Markdown","MarkDown","md","setMd","input","MyParagraph","children","overrides","component","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;;AACA,OAAOC,OAAP,MAAoB,QAApB;AAEA,SAASC,KAAK,IAAIC,iBAAlB,QAA2C,0BAA3C;AACA,SAASC,KAAT,QAAsB,+CAAtB;AAEA,OAAOC,QAAP,MAAqB,iBAArB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACtB,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcR,QAAQ,CAAC,EAAD,CAA5B;AACAD,EAAAA,SAAS,CAAC,MAAI,CAIb,CAJQ,EAIN,EAJM,CAAT;AAMA,QAAMU,KAAK,GAAG,+CAAd;;AAEG,QAAMC,WAAW,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,kBACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,QAAN,CADA;;AAGA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,QAAD;AACS,IAAA,OAAO,EAAE;AACXC,MAAAA,SAAS,EAAE;AACPT,QAAAA,iBAAiB,EAAE;AACfU,UAAAA,SAAS,EAAEV,iBADI;AAEfW,UAAAA,KAAK,EAAC;AACLV,YAAAA;AADK;AAFS;AADZ;AADA,KADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAYA,oBAAC,iBAAD;AAAmB,IAAA,QAAQ,EAAC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAZA,CADA,CADD;AAqBH,CAlCD;;AAoCA,eAAeE,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n//import ReactMarkdown from 'react-markdown';\nimport content from './1.md'; \n\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\nimport Markdown from 'markdown-to-jsx';\n\nconst MarkDown = () => {\n\tconst [md, setMd] = useState('');\n\tuseEffect(()=>{\n\n\t\t\n\n\t}, []);\n\n\tconst input = '# This is a header\\n\\nAnd this is a paragraph';\n\n    const MyParagraph = ({ children}) => (\n    <div>{children}</div>)\n\n    return (\n    \t<div>\n    \t<Markdown\n              options={{\n            overrides: {\n                SyntaxHighlighter: {\n                    component: SyntaxHighlighter,\n                    props:{\n                    \tdocco\n                    }\n                },\n            },\n        }}\n    >\n    \t<SyntaxHighlighter language=\"php\">\n    \t# I am free and I wanna live\n           $li = \"jack\"\n         </SyntaxHighlighter>\n    </Markdown>\n        </div>\n    );\n};\n\nexport default MarkDown;\n"]},"metadata":{},"sourceType":"module"}