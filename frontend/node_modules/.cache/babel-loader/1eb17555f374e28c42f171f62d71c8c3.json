{"ast":null,"code":"import _defineProperty from\"/home/chemime/Desktop/Python/django/trainingapp/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/chemime/Desktop/Python/django/trainingapp/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/home/chemime/Desktop/Python/django/trainingapp/frontend/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/chemime/Desktop/Python/django/trainingapp/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/chemime/Desktop/Python/django/trainingapp/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{createContact}from'../service/ContactAPI';import{toast}from'react-toastify';import{Redirect}from'react-router-dom';var Contact=function Contact(){var _React$createElement;var _useState=useState({email:'',message:''}),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var handleSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return createContact({'email':data.email,'message':data.message});case 3:res=_context.sent;toast.success('Your Messages Sended Successfly');Redirect('/');_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);toast.error('Sorry Your message not Sended');case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));return function handleSubmit(){return _ref.apply(this,arguments);};}();var handleChange=function handleChange(_ref2){var currentTarget=_ref2.currentTarget;var value=currentTarget.value,name=currentTarget.name;setData(_objectSpread({},data,_defineProperty({},name,value)));};return/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",name:\"email\",className:\"form-control\",value:data.email,onChange:handleChange}),/*#__PURE__*/React.createElement(\"textarea\",(_React$createElement={name:\"message\",className:\"form-control\"},_defineProperty(_React$createElement,\"className\",\"form-control\"),_defineProperty(_React$createElement,\"value\",data.message),_defineProperty(_React$createElement,\"onChange\",handleChange),_React$createElement),\"Message\"),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\",className:\"btn btn-success\"},\"send message\"));};export default Contact;","map":{"version":3,"sources":["/home/chemime/Desktop/Python/django/trainingapp/frontend/src/Components/contact.jsx"],"names":["React","useState","createContact","toast","Redirect","Contact","email","message","data","setData","handleSubmit","res","success","error","handleChange","currentTarget","value","name"],"mappings":"qrBAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,OAASC,aAAT,KAA8B,uBAA9B,CACA,OAASC,KAAT,KAAsB,gBAAtB,CACA,OAASC,QAAT,KAAyB,kBAAzB,CACA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,wCAEGJ,QAAQ,CAAC,CAChCK,KAAK,CAAC,EAD0B,CAEhCC,OAAO,CAAC,EAFwB,CAAD,CAFX,wCAEdC,IAFc,eAERC,OAFQ,eAOrB,GAAMC,CAAAA,YAAY,0FAAG,iLAEIR,CAAAA,aAAa,CAAC,CAC/B,QAAQM,IAAI,CAACF,KADkB,CAE/B,UAAUE,IAAI,CAACD,OAFgB,CAAD,CAFjB,QAERI,GAFQ,eAMdR,KAAK,CAACS,OAAN,CAAc,iCAAd,EACAR,QAAQ,CAAC,GAAD,CAAR,CAPc,+EASdD,KAAK,CAACU,KAAN,CAAY,+BAAZ,EATc,oEAAH,kBAAZH,CAAAA,YAAY,0CAAlB,CAYA,GAAMI,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,OAAsB,IAAnBC,CAAAA,aAAmB,OAAnBA,aAAmB,IAC7BC,CAAAA,KAD6B,CACdD,aADc,CAC7BC,KAD6B,CACtBC,IADsB,CACdF,aADc,CACtBE,IADsB,CAEpCR,OAAO,kBAAKD,IAAL,oBAAYS,IAAZ,CAAkBD,KAAlB,GAAP,CACN,CAHD,CAKG,mBACI,4BAAM,QAAQ,CAAEN,YAAhB,eACG,6BAAO,IAAI,CAAC,MAAZ,CAAmB,IAAI,CAAC,OAAxB,CACO,SAAS,CAAC,cADjB,CACgC,KAAK,CAAEF,IAAI,CAACF,KAD5C,CAEO,QAAQ,CAAEQ,YAFjB,EADH,cAKG,sDAAW,IAAI,CAAC,SAAhB,CAA0B,SAAS,CAAC,cAApC,mDACc,cADd,+CACoCN,IAAI,CAACD,OADzC,kDAEcO,YAFd,kCALH,cASG,8BAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAC,iBAAhC,iBATH,CADJ,CAeH,CAvCD,CAyCA,cAAeT,CAAAA,OAAf","sourcesContent":["import React, {useState} from 'react';\nimport { createContact } from '../service/ContactAPI';\nimport { toast } from 'react-toastify';\nimport { Redirect } from 'react-router-dom';\nconst Contact = () => {\n\n\tconst [data, setData] = useState({\n\t\temail:'',\n\t\tmessage:''\n\t});\n\n\tconst handleSubmit = async () =>{\n      try {\n      \t const res = await createContact({\n      \t \t'email':data.email,\n      \t \t'message':data.message\n      \t });\n      \t toast.success('Your Messages Sended Successfly');\n      \t Redirect('/');\n      } catch(e) {\n      \t toast.error('Sorry Your message not Sended')\n      }\n\t}\n\tconst handleChange = ({ currentTarget }) =>{\n        const {value, name} = currentTarget;\n        setData({...data, [name]:value});\n\t}\n\n    return (\n        <form onSubmit={handleSubmit}>\n           <input type=\"text\" name=\"email\" \n                  className=\"form-control\" value={data.email}\n                  onChange={handleChange}\n                  />\n           <textarea  name=\"message\" className=\"form-control\"\n           \t   className=\"form-control\" value={data.message}\n               onChange={handleChange}\n           >Message</textarea>\n           <button type=\"submit\" className=\"btn btn-success\">\n             send message\n           </button>\n        </form>\n    );\n};\n\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}