{"ast":null,"code":"'use strict';\n\nmodule.exports = yaml;\nyaml.displayName = 'yaml';\nyaml.aliases = ['yml'];\n\nfunction yaml(Prism) {\n  ;\n\n  (function (Prism) {\n    // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n    // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n    var anchorOrAlias = /[*&][^\\s[\\]{},]+/; // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n\n    var tag = /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/; // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n\n    var properties = '(?:' + tag.source + '(?:[ \\t]+' + anchorOrAlias.source + ')?|' + anchorOrAlias.source + '(?:[ \\t]+' + tag.source + ')?)';\n    /**\n     *\n     * @param {string} value\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n\n    function createValuePattern(value, flags) {\n      flags = (flags || '').replace(/m/g, '') + 'm'; // add m flag\n\n      var pattern = /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|]|}|\\s*#))/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      }).replace(/<<value>>/g, function () {\n        return value;\n      });\n      return RegExp(pattern, flags);\n    }\n\n    Prism.languages.yaml = {\n      scalar: {\n        pattern: RegExp(/([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)[^\\r\\n]+(?:\\2[^\\r\\n]+)*)/.source.replace(/<<prop>>/g, function () {\n          return properties;\n        })),\n        lookbehind: true,\n        alias: 'string'\n      },\n      comment: /#.*/,\n      key: {\n        pattern: RegExp(/((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)[^\\r\\n{[\\]},#\\s]+?(?=\\s*:\\s)/.source.replace(/<<prop>>/g, function () {\n          return properties;\n        })),\n        lookbehind: true,\n        alias: 'atrule'\n      },\n      directive: {\n        pattern: /(^[ \\t]*)%.+/m,\n        lookbehind: true,\n        alias: 'important'\n      },\n      datetime: {\n        pattern: createValuePattern(/\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?)?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/.source),\n        lookbehind: true,\n        alias: 'number'\n      },\n      boolean: {\n        pattern: createValuePattern(/true|false/.source, 'i'),\n        lookbehind: true,\n        alias: 'important'\n      },\n      null: {\n        pattern: createValuePattern(/null|~/.source, 'i'),\n        lookbehind: true,\n        alias: 'important'\n      },\n      string: {\n        // \\2 because of the lookbehind group\n        pattern: createValuePattern(/(\"|')(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2/.source),\n        lookbehind: true,\n        greedy: true\n      },\n      number: {\n        pattern: createValuePattern(/[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+\\.?\\d*|\\.?\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/.source, 'i'),\n        lookbehind: true\n      },\n      tag: tag,\n      important: anchorOrAlias,\n      punctuation: /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n    };\n    Prism.languages.yml = Prism.languages.yaml;\n  })(Prism);\n}","map":{"version":3,"sources":["/home/chemime/Desktop/Python/django/trainingapp/frontend/node_modules/refractor/lang/yaml.js"],"names":["module","exports","yaml","displayName","aliases","Prism","anchorOrAlias","tag","properties","source","createValuePattern","value","flags","replace","pattern","RegExp","languages","scalar","lookbehind","alias","comment","key","directive","datetime","boolean","null","string","greedy","number","important","punctuation","yml"],"mappings":"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","sourcesContent":["'use strict'\n\nmodule.exports = yaml\nyaml.displayName = 'yaml'\nyaml.aliases = ['yml']\nfunction yaml(Prism) {\n  ;(function (Prism) {\n    // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n    // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n    var anchorOrAlias = /[*&][^\\s[\\]{},]+/ // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n    var tag = /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/ // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n    var properties =\n      '(?:' +\n      tag.source +\n      '(?:[ \\t]+' +\n      anchorOrAlias.source +\n      ')?|' +\n      anchorOrAlias.source +\n      '(?:[ \\t]+' +\n      tag.source +\n      ')?)'\n    /**\n     *\n     * @param {string} value\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function createValuePattern(value, flags) {\n      flags = (flags || '').replace(/m/g, '') + 'm' // add m flag\n      var pattern = /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|]|}|\\s*#))/.source\n        .replace(/<<prop>>/g, function () {\n          return properties\n        })\n        .replace(/<<value>>/g, function () {\n          return value\n        })\n      return RegExp(pattern, flags)\n    }\n    Prism.languages.yaml = {\n      scalar: {\n        pattern: RegExp(\n          /([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)[^\\r\\n]+(?:\\2[^\\r\\n]+)*)/.source.replace(\n            /<<prop>>/g,\n            function () {\n              return properties\n            }\n          )\n        ),\n        lookbehind: true,\n        alias: 'string'\n      },\n      comment: /#.*/,\n      key: {\n        pattern: RegExp(\n          /((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)[^\\r\\n{[\\]},#\\s]+?(?=\\s*:\\s)/.source.replace(\n            /<<prop>>/g,\n            function () {\n              return properties\n            }\n          )\n        ),\n        lookbehind: true,\n        alias: 'atrule'\n      },\n      directive: {\n        pattern: /(^[ \\t]*)%.+/m,\n        lookbehind: true,\n        alias: 'important'\n      },\n      datetime: {\n        pattern: createValuePattern(\n          /\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?)?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/\n            .source\n        ),\n        lookbehind: true,\n        alias: 'number'\n      },\n      boolean: {\n        pattern: createValuePattern(/true|false/.source, 'i'),\n        lookbehind: true,\n        alias: 'important'\n      },\n      null: {\n        pattern: createValuePattern(/null|~/.source, 'i'),\n        lookbehind: true,\n        alias: 'important'\n      },\n      string: {\n        // \\2 because of the lookbehind group\n        pattern: createValuePattern(/(\"|')(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2/.source),\n        lookbehind: true,\n        greedy: true\n      },\n      number: {\n        pattern: createValuePattern(\n          /[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+\\.?\\d*|\\.?\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/\n            .source,\n          'i'\n        ),\n        lookbehind: true\n      },\n      tag: tag,\n      important: anchorOrAlias,\n      punctuation: /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n    }\n    Prism.languages.yml = Prism.languages.yaml\n  })(Prism)\n}\n"]},"metadata":{},"sourceType":"script"}