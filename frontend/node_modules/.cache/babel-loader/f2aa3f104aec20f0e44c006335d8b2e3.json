{"ast":null,"code":"const KEYWORDS = [\"as\", // for exports\n\"in\", \"of\", \"if\", \"for\", \"while\", \"finally\", \"var\", \"new\", \"function\", \"do\", \"return\", \"void\", \"else\", \"break\", \"catch\", \"instanceof\", \"with\", \"throw\", \"case\", \"default\", \"try\", \"switch\", \"continue\", \"typeof\", \"delete\", \"let\", \"yield\", \"const\", \"class\", // JS handles these with a special rule\n// \"get\",\n// \"set\",\n\"debugger\", \"async\", \"await\", \"static\", \"import\", \"from\", \"export\", \"extends\"];\nconst LITERALS = [\"true\", \"false\", \"null\", \"undefined\", \"NaN\", \"Infinity\"];\nconst TYPES = [\"Intl\", \"DataView\", \"Number\", \"Math\", \"Date\", \"String\", \"RegExp\", \"Object\", \"Function\", \"Boolean\", \"Error\", \"Symbol\", \"Set\", \"Map\", \"WeakSet\", \"WeakMap\", \"Proxy\", \"Reflect\", \"JSON\", \"Promise\", \"Float64Array\", \"Int16Array\", \"Int32Array\", \"Int8Array\", \"Uint16Array\", \"Uint32Array\", \"Float32Array\", \"Array\", \"Uint8Array\", \"Uint8ClampedArray\", \"ArrayBuffer\"];\nconst ERROR_TYPES = [\"EvalError\", \"InternalError\", \"RangeError\", \"ReferenceError\", \"SyntaxError\", \"TypeError\", \"URIError\"];\nconst BUILT_IN_GLOBALS = [\"setInterval\", \"setTimeout\", \"clearInterval\", \"clearTimeout\", \"require\", \"exports\", \"eval\", \"isFinite\", \"isNaN\", \"parseFloat\", \"parseInt\", \"decodeURI\", \"decodeURIComponent\", \"encodeURI\", \"encodeURIComponent\", \"escape\", \"unescape\"];\nconst BUILT_IN_VARIABLES = [\"arguments\", \"this\", \"super\", \"console\", \"window\", \"document\", \"localStorage\", \"module\", \"global\" // Node.js\n];\nconst BUILT_INS = [].concat(BUILT_IN_GLOBALS, BUILT_IN_VARIABLES, TYPES, ERROR_TYPES);\n/*\nLanguage: LiveScript\nAuthor: Taneli Vatanen <taneli.vatanen@gmail.com>\nContributors: Jen Evers-Corvina <jen@sevvie.net>\nOrigin: coffeescript.js\nDescription: LiveScript is a programming language that transcompiles to JavaScript. For info about language see http://livescript.net/\nWebsite: https://livescript.net\nCategory: scripting\n*/\n\nfunction livescript(hljs) {\n  var LIVESCRIPT_BUILT_INS = ['npm', 'print'];\n  var LIVESCRIPT_LITERALS = ['yes', 'no', 'on', 'off', 'it', 'that', 'void'];\n  var LIVESCRIPT_KEYWORDS = ['then', 'unless', 'until', 'loop', 'of', 'by', 'when', 'and', 'or', 'is', 'isnt', 'not', 'it', 'that', 'otherwise', 'from', 'to', 'til', 'fallthrough', 'case', 'enum', 'native', 'list', 'map', '__hasProp', '__extends', '__slice', '__bind', '__indexOf'];\n  var KEYWORDS$1 = {\n    keyword: KEYWORDS.concat(LIVESCRIPT_KEYWORDS).join(\" \"),\n    literal: LITERALS.concat(LIVESCRIPT_LITERALS).join(\" \"),\n    built_in: BUILT_INS.concat(LIVESCRIPT_BUILT_INS).join(\" \")\n  };\n  var JS_IDENT_RE = '[A-Za-z$_](?:\\-[0-9A-Za-z$_]|[0-9A-Za-z$_])*';\n  var TITLE = hljs.inherit(hljs.TITLE_MODE, {\n    begin: JS_IDENT_RE\n  });\n  var SUBST = {\n    className: 'subst',\n    begin: /#\\{/,\n    end: /}/,\n    keywords: KEYWORDS$1\n  };\n  var SUBST_SIMPLE = {\n    className: 'subst',\n    begin: /#[A-Za-z$_]/,\n    end: /(?:\\-[0-9A-Za-z$_]|[0-9A-Za-z$_])*/,\n    keywords: KEYWORDS$1\n  };\n  var EXPRESSIONS = [hljs.BINARY_NUMBER_MODE, {\n    className: 'number',\n    begin: '(\\\\b0[xX][a-fA-F0-9_]+)|(\\\\b\\\\d(\\\\d|_\\\\d)*(\\\\.(\\\\d(\\\\d|_\\\\d)*)?)?(_*[eE]([-+]\\\\d(_\\\\d|\\\\d)*)?)?[_a-z]*)',\n    relevance: 0,\n    starts: {\n      end: '(\\\\s*/)?',\n      relevance: 0\n    } // a number tries to eat the following slash to prevent treating it as a regexp\n\n  }, {\n    className: 'string',\n    variants: [{\n      begin: /'''/,\n      end: /'''/,\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      begin: /'/,\n      end: /'/,\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      begin: /\"\"\"/,\n      end: /\"\"\"/,\n      contains: [hljs.BACKSLASH_ESCAPE, SUBST, SUBST_SIMPLE]\n    }, {\n      begin: /\"/,\n      end: /\"/,\n      contains: [hljs.BACKSLASH_ESCAPE, SUBST, SUBST_SIMPLE]\n    }, {\n      begin: /\\\\/,\n      end: /(\\s|$)/,\n      excludeEnd: true\n    }]\n  }, {\n    className: 'regexp',\n    variants: [{\n      begin: '//',\n      end: '//[gim]*',\n      contains: [SUBST, hljs.HASH_COMMENT_MODE]\n    }, {\n      // regex can't start with space to parse x / 2 / 3 as two divisions\n      // regex can't start with *, and it supports an \"illegal\" in the main mode\n      begin: /\\/(?![ *])(\\\\\\/|.)*?\\/[gim]*(?=\\W)/\n    }]\n  }, {\n    begin: '@' + JS_IDENT_RE\n  }, {\n    begin: '``',\n    end: '``',\n    excludeBegin: true,\n    excludeEnd: true,\n    subLanguage: 'javascript'\n  }];\n  SUBST.contains = EXPRESSIONS;\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\(',\n    returnBegin: true,\n\n    /* We need another contained nameless mode to not have every nested\n    pair of parens to be called \"params\" */\n    contains: [{\n      begin: /\\(/,\n      end: /\\)/,\n      keywords: KEYWORDS$1,\n      contains: ['self'].concat(EXPRESSIONS)\n    }]\n  };\n  var SYMBOLS = {\n    begin: '(#=>|=>|\\\\|>>|-?->|\\\\!->)'\n  };\n  return {\n    name: 'LiveScript',\n    aliases: ['ls'],\n    keywords: KEYWORDS$1,\n    illegal: /\\/\\*/,\n    contains: EXPRESSIONS.concat([hljs.COMMENT('\\\\/\\\\*', '\\\\*\\\\/'), hljs.HASH_COMMENT_MODE, SYMBOLS, // relevance booster\n    {\n      className: 'function',\n      contains: [TITLE, PARAMS],\n      returnBegin: true,\n      variants: [{\n        begin: '(' + JS_IDENT_RE + '\\\\s*(?:=|:=)\\\\s*)?(\\\\(.*\\\\))?\\\\s*\\\\B\\\\->\\\\*?',\n        end: '\\\\->\\\\*?'\n      }, {\n        begin: '(' + JS_IDENT_RE + '\\\\s*(?:=|:=)\\\\s*)?!?(\\\\(.*\\\\))?\\\\s*\\\\B[-~]{1,2}>\\\\*?',\n        end: '[-~]{1,2}>\\\\*?'\n      }, {\n        begin: '(' + JS_IDENT_RE + '\\\\s*(?:=|:=)\\\\s*)?(\\\\(.*\\\\))?\\\\s*\\\\B!?[-~]{1,2}>\\\\*?',\n        end: '!?[-~]{1,2}>\\\\*?'\n      }]\n    }, {\n      className: 'class',\n      beginKeywords: 'class',\n      end: '$',\n      illegal: /[:=\"\\[\\]]/,\n      contains: [{\n        beginKeywords: 'extends',\n        endsWithParent: true,\n        illegal: /[:=\"\\[\\]]/,\n        contains: [TITLE]\n      }, TITLE]\n    }, {\n      begin: JS_IDENT_RE + ':',\n      end: ':',\n      returnBegin: true,\n      returnEnd: true,\n      relevance: 0\n    }])\n  };\n}\n\nmodule.exports = livescript;","map":{"version":3,"sources":["/home/chemime/Desktop/Python/django/trainingapp/frontend/node_modules/lowlight/node_modules/highlight.js/lib/languages/livescript.js"],"names":["KEYWORDS","LITERALS","TYPES","ERROR_TYPES","BUILT_IN_GLOBALS","BUILT_IN_VARIABLES","BUILT_INS","concat","livescript","hljs","LIVESCRIPT_BUILT_INS","LIVESCRIPT_LITERALS","LIVESCRIPT_KEYWORDS","KEYWORDS$1","keyword","join","literal","built_in","JS_IDENT_RE","TITLE","inherit","TITLE_MODE","begin","SUBST","className","end","keywords","SUBST_SIMPLE","EXPRESSIONS","BINARY_NUMBER_MODE","relevance","starts","variants","contains","BACKSLASH_ESCAPE","excludeEnd","HASH_COMMENT_MODE","excludeBegin","subLanguage","PARAMS","returnBegin","SYMBOLS","name","aliases","illegal","COMMENT","beginKeywords","endsWithParent","returnEnd","module","exports"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,CACf,IADe,EACT;AACN,IAFe,EAGf,IAHe,EAIf,IAJe,EAKf,KALe,EAMf,OANe,EAOf,SAPe,EAQf,KARe,EASf,KATe,EAUf,UAVe,EAWf,IAXe,EAYf,QAZe,EAaf,MAbe,EAcf,MAde,EAef,OAfe,EAgBf,OAhBe,EAiBf,YAjBe,EAkBf,MAlBe,EAmBf,OAnBe,EAoBf,MApBe,EAqBf,SArBe,EAsBf,KAtBe,EAuBf,QAvBe,EAwBf,UAxBe,EAyBf,QAzBe,EA0Bf,QA1Be,EA2Bf,KA3Be,EA4Bf,OA5Be,EA6Bf,OA7Be,EA8Bf,OA9Be,EA+Bf;AACA;AACA;AACA,UAlCe,EAmCf,OAnCe,EAoCf,OApCe,EAqCf,QArCe,EAsCf,QAtCe,EAuCf,MAvCe,EAwCf,QAxCe,EAyCf,SAzCe,CAAjB;AA2CA,MAAMC,QAAQ,GAAG,CACf,MADe,EAEf,OAFe,EAGf,MAHe,EAIf,WAJe,EAKf,KALe,EAMf,UANe,CAAjB;AASA,MAAMC,KAAK,GAAG,CACZ,MADY,EAEZ,UAFY,EAGZ,QAHY,EAIZ,MAJY,EAKZ,MALY,EAMZ,QANY,EAOZ,QAPY,EAQZ,QARY,EASZ,UATY,EAUZ,SAVY,EAWZ,OAXY,EAYZ,QAZY,EAaZ,KAbY,EAcZ,KAdY,EAeZ,SAfY,EAgBZ,SAhBY,EAiBZ,OAjBY,EAkBZ,SAlBY,EAmBZ,MAnBY,EAoBZ,SApBY,EAqBZ,cArBY,EAsBZ,YAtBY,EAuBZ,YAvBY,EAwBZ,WAxBY,EAyBZ,aAzBY,EA0BZ,aA1BY,EA2BZ,cA3BY,EA4BZ,OA5BY,EA6BZ,YA7BY,EA8BZ,mBA9BY,EA+BZ,aA/BY,CAAd;AAkCA,MAAMC,WAAW,GAAG,CAClB,WADkB,EAElB,eAFkB,EAGlB,YAHkB,EAIlB,gBAJkB,EAKlB,aALkB,EAMlB,WANkB,EAOlB,UAPkB,CAApB;AAUA,MAAMC,gBAAgB,GAAG,CACvB,aADuB,EAEvB,YAFuB,EAGvB,eAHuB,EAIvB,cAJuB,EAMvB,SANuB,EAOvB,SAPuB,EASvB,MATuB,EAUvB,UAVuB,EAWvB,OAXuB,EAYvB,YAZuB,EAavB,UAbuB,EAcvB,WAduB,EAevB,oBAfuB,EAgBvB,WAhBuB,EAiBvB,oBAjBuB,EAkBvB,QAlBuB,EAmBvB,UAnBuB,CAAzB;AAsBA,MAAMC,kBAAkB,GAAG,CACzB,WADyB,EAEzB,MAFyB,EAGzB,OAHyB,EAIzB,SAJyB,EAKzB,QALyB,EAMzB,UANyB,EAOzB,cAPyB,EAQzB,QARyB,EASzB,QATyB,CAShB;AATgB,CAA3B;AAYA,MAAMC,SAAS,GAAG,GAAGC,MAAH,CAChBH,gBADgB,EAEhBC,kBAFgB,EAGhBH,KAHgB,EAIhBC,WAJgB,CAAlB;AAOA;;;;;;;;;;AAUA,SAASK,UAAT,CAAoBC,IAApB,EAA0B;AACxB,MAAIC,oBAAoB,GAAG,CACzB,KADyB,EAEzB,OAFyB,CAA3B;AAIA,MAAIC,mBAAmB,GAAG,CACxB,KADwB,EAExB,IAFwB,EAGxB,IAHwB,EAIxB,KAJwB,EAKxB,IALwB,EAMxB,MANwB,EAOxB,MAPwB,CAA1B;AASA,MAAIC,mBAAmB,GAAG,CACxB,MADwB,EAExB,QAFwB,EAGxB,OAHwB,EAIxB,MAJwB,EAKxB,IALwB,EAMxB,IANwB,EAOxB,MAPwB,EAQxB,KARwB,EASxB,IATwB,EAUxB,IAVwB,EAWxB,MAXwB,EAYxB,KAZwB,EAaxB,IAbwB,EAcxB,MAdwB,EAexB,WAfwB,EAgBxB,MAhBwB,EAiBxB,IAjBwB,EAkBxB,KAlBwB,EAmBxB,aAnBwB,EAoBxB,MApBwB,EAqBxB,MArBwB,EAsBxB,QAtBwB,EAuBxB,MAvBwB,EAwBxB,KAxBwB,EAyBxB,WAzBwB,EA0BxB,WA1BwB,EA2BxB,SA3BwB,EA4BxB,QA5BwB,EA6BxB,WA7BwB,CAA1B;AA+BA,MAAIC,UAAU,GAAG;AACfC,IAAAA,OAAO,EAAEd,QAAQ,CAACO,MAAT,CAAgBK,mBAAhB,EAAqCG,IAArC,CAA0C,GAA1C,CADM;AAEfC,IAAAA,OAAO,EAAEf,QAAQ,CAACM,MAAT,CAAgBI,mBAAhB,EAAqCI,IAArC,CAA0C,GAA1C,CAFM;AAGfE,IAAAA,QAAQ,EAAEX,SAAS,CAACC,MAAV,CAAiBG,oBAAjB,EAAuCK,IAAvC,CAA4C,GAA5C;AAHK,GAAjB;AAKA,MAAIG,WAAW,GAAG,8CAAlB;AACA,MAAIC,KAAK,GAAGV,IAAI,CAACW,OAAL,CAAaX,IAAI,CAACY,UAAlB,EAA8B;AAACC,IAAAA,KAAK,EAAEJ;AAAR,GAA9B,CAAZ;AACA,MAAIK,KAAK,GAAG;AACVC,IAAAA,SAAS,EAAE,OADD;AAEVF,IAAAA,KAAK,EAAE,KAFG;AAEIG,IAAAA,GAAG,EAAE,GAFT;AAGVC,IAAAA,QAAQ,EAAEb;AAHA,GAAZ;AAKA,MAAIc,YAAY,GAAG;AACjBH,IAAAA,SAAS,EAAE,OADM;AAEjBF,IAAAA,KAAK,EAAE,aAFU;AAEKG,IAAAA,GAAG,EAAE,oCAFV;AAGjBC,IAAAA,QAAQ,EAAEb;AAHO,GAAnB;AAKA,MAAIe,WAAW,GAAG,CAChBnB,IAAI,CAACoB,kBADW,EAEhB;AACEL,IAAAA,SAAS,EAAE,QADb;AAEEF,IAAAA,KAAK,EAAE,yGAFT;AAGEQ,IAAAA,SAAS,EAAE,CAHb;AAIEC,IAAAA,MAAM,EAAE;AAACN,MAAAA,GAAG,EAAE,UAAN;AAAkBK,MAAAA,SAAS,EAAE;AAA7B,KAJV,CAI0C;;AAJ1C,GAFgB,EAQhB;AACEN,IAAAA,SAAS,EAAE,QADb;AAEEQ,IAAAA,QAAQ,EAAE,CACR;AACEV,MAAAA,KAAK,EAAE,KADT;AACgBG,MAAAA,GAAG,EAAE,KADrB;AAEEQ,MAAAA,QAAQ,EAAE,CAACxB,IAAI,CAACyB,gBAAN;AAFZ,KADQ,EAKR;AACEZ,MAAAA,KAAK,EAAE,GADT;AACcG,MAAAA,GAAG,EAAE,GADnB;AAEEQ,MAAAA,QAAQ,EAAE,CAACxB,IAAI,CAACyB,gBAAN;AAFZ,KALQ,EASR;AACEZ,MAAAA,KAAK,EAAE,KADT;AACgBG,MAAAA,GAAG,EAAE,KADrB;AAEEQ,MAAAA,QAAQ,EAAE,CAACxB,IAAI,CAACyB,gBAAN,EAAwBX,KAAxB,EAA+BI,YAA/B;AAFZ,KATQ,EAaR;AACEL,MAAAA,KAAK,EAAE,GADT;AACcG,MAAAA,GAAG,EAAE,GADnB;AAEEQ,MAAAA,QAAQ,EAAE,CAACxB,IAAI,CAACyB,gBAAN,EAAwBX,KAAxB,EAA+BI,YAA/B;AAFZ,KAbQ,EAiBR;AACEL,MAAAA,KAAK,EAAE,IADT;AACeG,MAAAA,GAAG,EAAE,QADpB;AAEEU,MAAAA,UAAU,EAAE;AAFd,KAjBQ;AAFZ,GARgB,EAiChB;AACEX,IAAAA,SAAS,EAAE,QADb;AAEEQ,IAAAA,QAAQ,EAAE,CACR;AACEV,MAAAA,KAAK,EAAE,IADT;AACeG,MAAAA,GAAG,EAAE,UADpB;AAEEQ,MAAAA,QAAQ,EAAE,CAACV,KAAD,EAAQd,IAAI,CAAC2B,iBAAb;AAFZ,KADQ,EAKR;AACE;AACA;AACAd,MAAAA,KAAK,EAAE;AAHT,KALQ;AAFZ,GAjCgB,EA+ChB;AACEA,IAAAA,KAAK,EAAE,MAAMJ;AADf,GA/CgB,EAkDhB;AACEI,IAAAA,KAAK,EAAE,IADT;AACeG,IAAAA,GAAG,EAAE,IADpB;AAEEY,IAAAA,YAAY,EAAE,IAFhB;AAEsBF,IAAAA,UAAU,EAAE,IAFlC;AAGEG,IAAAA,WAAW,EAAE;AAHf,GAlDgB,CAAlB;AAwDAf,EAAAA,KAAK,CAACU,QAAN,GAAiBL,WAAjB;AAEA,MAAIW,MAAM,GAAG;AACXf,IAAAA,SAAS,EAAE,QADA;AAEXF,IAAAA,KAAK,EAAE,KAFI;AAEGkB,IAAAA,WAAW,EAAE,IAFhB;;AAGX;;AAEAP,IAAAA,QAAQ,EAAE,CACR;AACEX,MAAAA,KAAK,EAAE,IADT;AACeG,MAAAA,GAAG,EAAE,IADpB;AAEEC,MAAAA,QAAQ,EAAEb,UAFZ;AAGEoB,MAAAA,QAAQ,EAAE,CAAC,MAAD,EAAS1B,MAAT,CAAgBqB,WAAhB;AAHZ,KADQ;AALC,GAAb;AAcA,MAAIa,OAAO,GAAG;AACZnB,IAAAA,KAAK,EAAE;AADK,GAAd;AAIA,SAAO;AACLoB,IAAAA,IAAI,EAAE,YADD;AAELC,IAAAA,OAAO,EAAE,CAAC,IAAD,CAFJ;AAGLjB,IAAAA,QAAQ,EAAEb,UAHL;AAIL+B,IAAAA,OAAO,EAAE,MAJJ;AAKLX,IAAAA,QAAQ,EAAEL,WAAW,CAACrB,MAAZ,CAAmB,CAC3BE,IAAI,CAACoC,OAAL,CAAa,QAAb,EAAuB,QAAvB,CAD2B,EAE3BpC,IAAI,CAAC2B,iBAFsB,EAG3BK,OAH2B,EAGlB;AACT;AACEjB,MAAAA,SAAS,EAAE,UADb;AAEES,MAAAA,QAAQ,EAAE,CAACd,KAAD,EAAQoB,MAAR,CAFZ;AAGEC,MAAAA,WAAW,EAAE,IAHf;AAIER,MAAAA,QAAQ,EAAE,CACR;AACEV,QAAAA,KAAK,EAAE,MAAMJ,WAAN,GAAoB,8CAD7B;AAC6EO,QAAAA,GAAG,EAAE;AADlF,OADQ,EAIR;AACEH,QAAAA,KAAK,EAAE,MAAMJ,WAAN,GAAoB,sDAD7B;AACqFO,QAAAA,GAAG,EAAE;AAD1F,OAJQ,EAOR;AACEH,QAAAA,KAAK,EAAE,MAAMJ,WAAN,GAAoB,sDAD7B;AACqFO,QAAAA,GAAG,EAAE;AAD1F,OAPQ;AAJZ,KAJ2B,EAoB3B;AACED,MAAAA,SAAS,EAAE,OADb;AAEEsB,MAAAA,aAAa,EAAE,OAFjB;AAGErB,MAAAA,GAAG,EAAE,GAHP;AAIEmB,MAAAA,OAAO,EAAE,WAJX;AAKEX,MAAAA,QAAQ,EAAE,CACR;AACEa,QAAAA,aAAa,EAAE,SADjB;AAEEC,QAAAA,cAAc,EAAE,IAFlB;AAGEH,QAAAA,OAAO,EAAE,WAHX;AAIEX,QAAAA,QAAQ,EAAE,CAACd,KAAD;AAJZ,OADQ,EAORA,KAPQ;AALZ,KApB2B,EAmC3B;AACEG,MAAAA,KAAK,EAAEJ,WAAW,GAAG,GADvB;AAC4BO,MAAAA,GAAG,EAAE,GADjC;AAEEe,MAAAA,WAAW,EAAE,IAFf;AAEqBQ,MAAAA,SAAS,EAAE,IAFhC;AAGElB,MAAAA,SAAS,EAAE;AAHb,KAnC2B,CAAnB;AALL,GAAP;AA+CD;;AAEDmB,MAAM,CAACC,OAAP,GAAiB1C,UAAjB","sourcesContent":["const KEYWORDS = [\n  \"as\", // for exports\n  \"in\",\n  \"of\",\n  \"if\",\n  \"for\",\n  \"while\",\n  \"finally\",\n  \"var\",\n  \"new\",\n  \"function\",\n  \"do\",\n  \"return\",\n  \"void\",\n  \"else\",\n  \"break\",\n  \"catch\",\n  \"instanceof\",\n  \"with\",\n  \"throw\",\n  \"case\",\n  \"default\",\n  \"try\",\n  \"switch\",\n  \"continue\",\n  \"typeof\",\n  \"delete\",\n  \"let\",\n  \"yield\",\n  \"const\",\n  \"class\",\n  // JS handles these with a special rule\n  // \"get\",\n  // \"set\",\n  \"debugger\",\n  \"async\",\n  \"await\",\n  \"static\",\n  \"import\",\n  \"from\",\n  \"export\",\n  \"extends\"\n];\nconst LITERALS = [\n  \"true\",\n  \"false\",\n  \"null\",\n  \"undefined\",\n  \"NaN\",\n  \"Infinity\"\n];\n\nconst TYPES = [\n  \"Intl\",\n  \"DataView\",\n  \"Number\",\n  \"Math\",\n  \"Date\",\n  \"String\",\n  \"RegExp\",\n  \"Object\",\n  \"Function\",\n  \"Boolean\",\n  \"Error\",\n  \"Symbol\",\n  \"Set\",\n  \"Map\",\n  \"WeakSet\",\n  \"WeakMap\",\n  \"Proxy\",\n  \"Reflect\",\n  \"JSON\",\n  \"Promise\",\n  \"Float64Array\",\n  \"Int16Array\",\n  \"Int32Array\",\n  \"Int8Array\",\n  \"Uint16Array\",\n  \"Uint32Array\",\n  \"Float32Array\",\n  \"Array\",\n  \"Uint8Array\",\n  \"Uint8ClampedArray\",\n  \"ArrayBuffer\"\n];\n\nconst ERROR_TYPES = [\n  \"EvalError\",\n  \"InternalError\",\n  \"RangeError\",\n  \"ReferenceError\",\n  \"SyntaxError\",\n  \"TypeError\",\n  \"URIError\"\n];\n\nconst BUILT_IN_GLOBALS = [\n  \"setInterval\",\n  \"setTimeout\",\n  \"clearInterval\",\n  \"clearTimeout\",\n\n  \"require\",\n  \"exports\",\n\n  \"eval\",\n  \"isFinite\",\n  \"isNaN\",\n  \"parseFloat\",\n  \"parseInt\",\n  \"decodeURI\",\n  \"decodeURIComponent\",\n  \"encodeURI\",\n  \"encodeURIComponent\",\n  \"escape\",\n  \"unescape\"\n];\n\nconst BUILT_IN_VARIABLES = [\n  \"arguments\",\n  \"this\",\n  \"super\",\n  \"console\",\n  \"window\",\n  \"document\",\n  \"localStorage\",\n  \"module\",\n  \"global\" // Node.js\n];\n\nconst BUILT_INS = [].concat(\n  BUILT_IN_GLOBALS,\n  BUILT_IN_VARIABLES,\n  TYPES,\n  ERROR_TYPES\n);\n\n/*\nLanguage: LiveScript\nAuthor: Taneli Vatanen <taneli.vatanen@gmail.com>\nContributors: Jen Evers-Corvina <jen@sevvie.net>\nOrigin: coffeescript.js\nDescription: LiveScript is a programming language that transcompiles to JavaScript. For info about language see http://livescript.net/\nWebsite: https://livescript.net\nCategory: scripting\n*/\n\nfunction livescript(hljs) {\n  var LIVESCRIPT_BUILT_INS = [\n    'npm',\n    'print'\n  ];\n  var LIVESCRIPT_LITERALS = [\n    'yes',\n    'no',\n    'on',\n    'off',\n    'it',\n    'that',\n    'void'\n  ];\n  var LIVESCRIPT_KEYWORDS = [\n    'then',\n    'unless',\n    'until',\n    'loop',\n    'of',\n    'by',\n    'when',\n    'and',\n    'or',\n    'is',\n    'isnt',\n    'not',\n    'it',\n    'that',\n    'otherwise',\n    'from',\n    'to',\n    'til',\n    'fallthrough',\n    'case',\n    'enum',\n    'native',\n    'list',\n    'map',\n    '__hasProp',\n    '__extends',\n    '__slice',\n    '__bind',\n    '__indexOf'\n  ];\n  var KEYWORDS$1 = {\n    keyword: KEYWORDS.concat(LIVESCRIPT_KEYWORDS).join(\" \"),\n    literal: LITERALS.concat(LIVESCRIPT_LITERALS).join(\" \"),\n    built_in: BUILT_INS.concat(LIVESCRIPT_BUILT_INS).join(\" \")\n  };\n  var JS_IDENT_RE = '[A-Za-z$_](?:\\-[0-9A-Za-z$_]|[0-9A-Za-z$_])*';\n  var TITLE = hljs.inherit(hljs.TITLE_MODE, {begin: JS_IDENT_RE});\n  var SUBST = {\n    className: 'subst',\n    begin: /#\\{/, end: /}/,\n    keywords: KEYWORDS$1\n  };\n  var SUBST_SIMPLE = {\n    className: 'subst',\n    begin: /#[A-Za-z$_]/, end: /(?:\\-[0-9A-Za-z$_]|[0-9A-Za-z$_])*/,\n    keywords: KEYWORDS$1\n  };\n  var EXPRESSIONS = [\n    hljs.BINARY_NUMBER_MODE,\n    {\n      className: 'number',\n      begin: '(\\\\b0[xX][a-fA-F0-9_]+)|(\\\\b\\\\d(\\\\d|_\\\\d)*(\\\\.(\\\\d(\\\\d|_\\\\d)*)?)?(_*[eE]([-+]\\\\d(_\\\\d|\\\\d)*)?)?[_a-z]*)',\n      relevance: 0,\n      starts: {end: '(\\\\s*/)?', relevance: 0} // a number tries to eat the following slash to prevent treating it as a regexp\n    },\n    {\n      className: 'string',\n      variants: [\n        {\n          begin: /'''/, end: /'''/,\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: /'/, end: /'/,\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: /\"\"\"/, end: /\"\"\"/,\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST, SUBST_SIMPLE]\n        },\n        {\n          begin: /\"/, end: /\"/,\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST, SUBST_SIMPLE]\n        },\n        {\n          begin: /\\\\/, end: /(\\s|$)/,\n          excludeEnd: true\n        }\n      ]\n    },\n    {\n      className: 'regexp',\n      variants: [\n        {\n          begin: '//', end: '//[gim]*',\n          contains: [SUBST, hljs.HASH_COMMENT_MODE]\n        },\n        {\n          // regex can't start with space to parse x / 2 / 3 as two divisions\n          // regex can't start with *, and it supports an \"illegal\" in the main mode\n          begin: /\\/(?![ *])(\\\\\\/|.)*?\\/[gim]*(?=\\W)/\n        }\n      ]\n    },\n    {\n      begin: '@' + JS_IDENT_RE\n    },\n    {\n      begin: '``', end: '``',\n      excludeBegin: true, excludeEnd: true,\n      subLanguage: 'javascript'\n    }\n  ];\n  SUBST.contains = EXPRESSIONS;\n\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\(', returnBegin: true,\n    /* We need another contained nameless mode to not have every nested\n    pair of parens to be called \"params\" */\n    contains: [\n      {\n        begin: /\\(/, end: /\\)/,\n        keywords: KEYWORDS$1,\n        contains: ['self'].concat(EXPRESSIONS)\n      }\n    ]\n  };\n\n  var SYMBOLS = {\n    begin: '(#=>|=>|\\\\|>>|-?->|\\\\!->)'\n  };\n\n  return {\n    name: 'LiveScript',\n    aliases: ['ls'],\n    keywords: KEYWORDS$1,\n    illegal: /\\/\\*/,\n    contains: EXPRESSIONS.concat([\n      hljs.COMMENT('\\\\/\\\\*', '\\\\*\\\\/'),\n      hljs.HASH_COMMENT_MODE,\n      SYMBOLS, // relevance booster\n      {\n        className: 'function',\n        contains: [TITLE, PARAMS],\n        returnBegin: true,\n        variants: [\n          {\n            begin: '(' + JS_IDENT_RE + '\\\\s*(?:=|:=)\\\\s*)?(\\\\(.*\\\\))?\\\\s*\\\\B\\\\->\\\\*?', end: '\\\\->\\\\*?'\n          },\n          {\n            begin: '(' + JS_IDENT_RE + '\\\\s*(?:=|:=)\\\\s*)?!?(\\\\(.*\\\\))?\\\\s*\\\\B[-~]{1,2}>\\\\*?', end: '[-~]{1,2}>\\\\*?'\n          },\n          {\n            begin: '(' + JS_IDENT_RE + '\\\\s*(?:=|:=)\\\\s*)?(\\\\(.*\\\\))?\\\\s*\\\\B!?[-~]{1,2}>\\\\*?', end: '!?[-~]{1,2}>\\\\*?'\n          }\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class',\n        end: '$',\n        illegal: /[:=\"\\[\\]]/,\n        contains: [\n          {\n            beginKeywords: 'extends',\n            endsWithParent: true,\n            illegal: /[:=\"\\[\\]]/,\n            contains: [TITLE]\n          },\n          TITLE\n        ]\n      },\n      {\n        begin: JS_IDENT_RE + ':', end: ':',\n        returnBegin: true, returnEnd: true,\n        relevance: 0\n      }\n    ])\n  };\n}\n\nmodule.exports = livescript;\n"]},"metadata":{},"sourceType":"script"}