{"ast":null,"code":"/*\nLanguage: HTML, XML\nWebsite: https://www.w3.org/XML/\nCategory: common\n*/\nfunction xml(hljs) {\n  var XML_IDENT_RE = '[A-Za-z0-9\\\\._:-]+';\n  var XML_ENTITIES = {\n    className: 'symbol',\n    begin: '&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;'\n  };\n  var XML_META_KEYWORDS = {\n    begin: '\\\\s',\n    contains: [{\n      className: 'meta-keyword',\n      begin: '#?[a-z_][a-z1-9_-]+',\n      illegal: '\\\\n'\n    }]\n  };\n  var XML_META_PAR_KEYWORDS = hljs.inherit(XML_META_KEYWORDS, {\n    begin: '\\\\(',\n    end: '\\\\)'\n  });\n  var APOS_META_STRING_MODE = hljs.inherit(hljs.APOS_STRING_MODE, {\n    className: 'meta-string'\n  });\n  var QUOTE_META_STRING_MODE = hljs.inherit(hljs.QUOTE_STRING_MODE, {\n    className: 'meta-string'\n  });\n  var TAG_INTERNALS = {\n    endsWithParent: true,\n    illegal: /</,\n    relevance: 0,\n    contains: [{\n      className: 'attr',\n      begin: XML_IDENT_RE,\n      relevance: 0\n    }, {\n      begin: /=\\s*/,\n      relevance: 0,\n      contains: [{\n        className: 'string',\n        endsParent: true,\n        variants: [{\n          begin: /\"/,\n          end: /\"/,\n          contains: [XML_ENTITIES]\n        }, {\n          begin: /'/,\n          end: /'/,\n          contains: [XML_ENTITIES]\n        }, {\n          begin: /[^\\s\"'=<>`]+/\n        }]\n      }]\n    }]\n  };\n  return {\n    name: 'HTML, XML',\n    aliases: ['html', 'xhtml', 'rss', 'atom', 'xjb', 'xsd', 'xsl', 'plist', 'wsf', 'svg'],\n    case_insensitive: true,\n    contains: [{\n      className: 'meta',\n      begin: '<![a-z]',\n      end: '>',\n      relevance: 10,\n      contains: [XML_META_KEYWORDS, QUOTE_META_STRING_MODE, APOS_META_STRING_MODE, XML_META_PAR_KEYWORDS, {\n        begin: '\\\\[',\n        end: '\\\\]',\n        contains: [{\n          className: 'meta',\n          begin: '<![a-z]',\n          end: '>',\n          contains: [XML_META_KEYWORDS, XML_META_PAR_KEYWORDS, QUOTE_META_STRING_MODE, APOS_META_STRING_MODE]\n        }]\n      }]\n    }, hljs.COMMENT('<!--', '-->', {\n      relevance: 10\n    }), {\n      begin: '<\\\\!\\\\[CDATA\\\\[',\n      end: '\\\\]\\\\]>',\n      relevance: 10\n    }, XML_ENTITIES, {\n      className: 'meta',\n      begin: /<\\?xml/,\n      end: /\\?>/,\n      relevance: 10\n    }, {\n      className: 'tag',\n\n      /*\n      The lookahead pattern (?=...) ensures that 'begin' only matches\n      '<style' as a single word, followed by a whitespace or an\n      ending braket. The '$' is needed for the lexeme to be recognized\n      by hljs.subMode() that tests lexemes outside the stream.\n      */\n      begin: '<style(?=\\\\s|>)',\n      end: '>',\n      keywords: {\n        name: 'style'\n      },\n      contains: [TAG_INTERNALS],\n      starts: {\n        end: '</style>',\n        returnEnd: true,\n        subLanguage: ['css', 'xml']\n      }\n    }, {\n      className: 'tag',\n      // See the comment in the <style tag about the lookahead pattern\n      begin: '<script(?=\\\\s|>)',\n      end: '>',\n      keywords: {\n        name: 'script'\n      },\n      contains: [TAG_INTERNALS],\n      starts: {\n        end: '\\<\\/script\\>',\n        returnEnd: true,\n        subLanguage: ['javascript', 'handlebars', 'xml']\n      }\n    }, {\n      className: 'tag',\n      begin: '</?',\n      end: '/?>',\n      contains: [{\n        className: 'name',\n        begin: /[^\\/><\\s]+/,\n        relevance: 0\n      }, TAG_INTERNALS]\n    }]\n  };\n}\n\nmodule.exports = xml;","map":{"version":3,"sources":["/home/chemime/Desktop/Python/django/trainingapp/frontend/node_modules/lowlight/node_modules/highlight.js/lib/languages/xml.js"],"names":["xml","hljs","XML_IDENT_RE","XML_ENTITIES","className","begin","XML_META_KEYWORDS","contains","illegal","XML_META_PAR_KEYWORDS","inherit","end","APOS_META_STRING_MODE","APOS_STRING_MODE","QUOTE_META_STRING_MODE","QUOTE_STRING_MODE","TAG_INTERNALS","endsWithParent","relevance","endsParent","variants","name","aliases","case_insensitive","COMMENT","keywords","starts","returnEnd","subLanguage","module","exports"],"mappings":"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","sourcesContent":["/*\nLanguage: HTML, XML\nWebsite: https://www.w3.org/XML/\nCategory: common\n*/\n\nfunction xml(hljs) {\n  var XML_IDENT_RE = '[A-Za-z0-9\\\\._:-]+';\n  var XML_ENTITIES = {\n    className: 'symbol',\n    begin: '&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;'\n  };\n  var XML_META_KEYWORDS = {\n\t  begin: '\\\\s',\n\t  contains:[\n\t    {\n\t      className: 'meta-keyword',\n\t      begin: '#?[a-z_][a-z1-9_-]+',\n\t      illegal: '\\\\n',\n      }\n\t  ]\n  };\n  var XML_META_PAR_KEYWORDS = hljs.inherit(XML_META_KEYWORDS, {begin: '\\\\(', end: '\\\\)'});\n  var APOS_META_STRING_MODE = hljs.inherit(hljs.APOS_STRING_MODE, {className: 'meta-string'});\n  var QUOTE_META_STRING_MODE = hljs.inherit(hljs.QUOTE_STRING_MODE, {className: 'meta-string'});\n  var TAG_INTERNALS = {\n    endsWithParent: true,\n    illegal: /</,\n    relevance: 0,\n    contains: [\n      {\n        className: 'attr',\n        begin: XML_IDENT_RE,\n        relevance: 0\n      },\n      {\n        begin: /=\\s*/,\n        relevance: 0,\n        contains: [\n          {\n            className: 'string',\n            endsParent: true,\n            variants: [\n              {begin: /\"/, end: /\"/, contains: [XML_ENTITIES]},\n              {begin: /'/, end: /'/, contains: [XML_ENTITIES]},\n              {begin: /[^\\s\"'=<>`]+/}\n            ]\n          }\n        ]\n      }\n    ]\n  };\n  return {\n    name: 'HTML, XML',\n    aliases: ['html', 'xhtml', 'rss', 'atom', 'xjb', 'xsd', 'xsl', 'plist', 'wsf', 'svg'],\n    case_insensitive: true,\n    contains: [\n      {\n        className: 'meta',\n        begin: '<![a-z]', end: '>',\n        relevance: 10,\n        contains: [\n\t\t\t\t  XML_META_KEYWORDS,\n\t\t\t\t  QUOTE_META_STRING_MODE,\n\t\t\t\t  APOS_META_STRING_MODE,\n\t\t\t\t\tXML_META_PAR_KEYWORDS,\n\t\t\t\t\t{\n\t\t\t\t\t  begin: '\\\\[', end: '\\\\]',\n\t\t\t\t\t  contains:[\n\t\t\t\t\t\t  {\n\t\t\t\t\t      className: 'meta',\n\t\t\t\t\t      begin: '<![a-z]', end: '>',\n\t\t\t\t\t      contains: [\n\t\t\t\t\t        XML_META_KEYWORDS,\n\t\t\t\t\t        XML_META_PAR_KEYWORDS,\n\t\t\t\t\t        QUOTE_META_STRING_MODE,\n\t\t\t\t\t        APOS_META_STRING_MODE\n\t\t\t\t\t\t    ]\n\t\t\t        }\n\t\t\t\t\t  ]\n\t\t\t\t  }\n\t\t\t\t]\n      },\n      hljs.COMMENT(\n        '<!--',\n        '-->',\n        {\n          relevance: 10\n        }\n      ),\n      {\n        begin: '<\\\\!\\\\[CDATA\\\\[', end: '\\\\]\\\\]>',\n        relevance: 10\n      },\n      XML_ENTITIES,\n      {\n        className: 'meta',\n        begin: /<\\?xml/, end: /\\?>/, relevance: 10\n      },\n      {\n        className: 'tag',\n        /*\n        The lookahead pattern (?=...) ensures that 'begin' only matches\n        '<style' as a single word, followed by a whitespace or an\n        ending braket. The '$' is needed for the lexeme to be recognized\n        by hljs.subMode() that tests lexemes outside the stream.\n        */\n        begin: '<style(?=\\\\s|>)', end: '>',\n        keywords: {name: 'style'},\n        contains: [TAG_INTERNALS],\n        starts: {\n          end: '</style>', returnEnd: true,\n          subLanguage: ['css', 'xml']\n        }\n      },\n      {\n        className: 'tag',\n        // See the comment in the <style tag about the lookahead pattern\n        begin: '<script(?=\\\\s|>)', end: '>',\n        keywords: {name: 'script'},\n        contains: [TAG_INTERNALS],\n        starts: {\n          end: '\\<\\/script\\>', returnEnd: true,\n          subLanguage: ['javascript', 'handlebars', 'xml']\n        }\n      },\n      {\n        className: 'tag',\n        begin: '</?', end: '/?>',\n        contains: [\n          {\n            className: 'name', begin: /[^\\/><\\s]+/, relevance: 0\n          },\n          TAG_INTERNALS\n        ]\n      }\n    ]\n  };\n}\n\nmodule.exports = xml;\n"]},"metadata":{},"sourceType":"script"}