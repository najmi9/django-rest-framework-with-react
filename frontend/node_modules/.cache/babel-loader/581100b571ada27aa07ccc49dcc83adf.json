{"ast":null,"code":"/*\nLanguage: Markdown\nRequires: xml.js\nAuthor: John Crepezzi <john.crepezzi@gmail.com>\nWebsite: https://daringfireball.net/projects/markdown/\nCategory: common, markup\n*/\nfunction markdown(hljs) {\n  var INLINE_HTML = {\n    begin: '<',\n    end: '>',\n    subLanguage: 'xml',\n    relevance: 0\n  };\n  var HORIZONTAL_RULE = {\n    begin: '^[-\\\\*]{3,}',\n    end: '$'\n  };\n  var CODE = {\n    className: 'code',\n    variants: [// TODO: fix to allow these to work with sublanguage also\n    {\n      begin: '(`{3,})(.|\\\\n)*?\\\\1`*[ ]*'\n    }, {\n      begin: '(~{3,})(.|\\\\n)*?\\\\1~*[ ]*'\n    }, // needed to allow markdown as a sublanguage to work\n    {\n      begin: '```',\n      end: '```+[ ]*$'\n    }, {\n      begin: '~~~',\n      end: '~~~+[ ]*$'\n    }, {\n      begin: '`.+?`'\n    }, {\n      begin: '(?=^( {4}|\\\\t))',\n      // use contains to gobble up multiple lines to allow the block to be whatever size\n      // but only have a single open/close tag vs one per line\n      contains: [{\n        begin: '^( {4}|\\\\t)',\n        end: '(\\\\n)$'\n      }],\n      relevance: 0\n    }]\n  };\n  var LIST = {\n    className: 'bullet',\n    begin: '^[ \\t]*([*+-]|(\\\\d+\\\\.))(?=\\\\s+)',\n    end: '\\\\s+',\n    excludeEnd: true\n  };\n  var LINK_REFERENCE = {\n    begin: /^\\[[^\\n]+\\]:/,\n    returnBegin: true,\n    contains: [{\n      className: 'symbol',\n      begin: /\\[/,\n      end: /\\]/,\n      excludeBegin: true,\n      excludeEnd: true\n    }, {\n      className: 'link',\n      begin: /:\\s*/,\n      end: /$/,\n      excludeBegin: true\n    }]\n  };\n  var LINK = {\n    begin: '\\\\[.+?\\\\][\\\\(\\\\[].*?[\\\\)\\\\]]',\n    returnBegin: true,\n    contains: [{\n      className: 'string',\n      begin: '\\\\[',\n      end: '\\\\]',\n      excludeBegin: true,\n      returnEnd: true,\n      relevance: 0\n    }, {\n      className: 'link',\n      begin: '\\\\]\\\\(',\n      end: '\\\\)',\n      excludeBegin: true,\n      excludeEnd: true\n    }, {\n      className: 'symbol',\n      begin: '\\\\]\\\\[',\n      end: '\\\\]',\n      excludeBegin: true,\n      excludeEnd: true\n    }],\n    relevance: 10\n  };\n  var BOLD = {\n    className: 'strong',\n    contains: [],\n    variants: [{\n      begin: /_{2}/,\n      end: /_{2}/\n    }, {\n      begin: /\\*{2}/,\n      end: /\\*{2}/\n    }]\n  };\n  var ITALIC = {\n    className: 'emphasis',\n    contains: [],\n    variants: [{\n      begin: /\\*(?!\\*)/,\n      end: /\\*/\n    }, {\n      begin: /_(?!_)/,\n      end: /_/,\n      relevance: 0\n    }]\n  };\n  BOLD.contains.push(ITALIC);\n  ITALIC.contains.push(BOLD);\n  var CONTAINABLE = [INLINE_HTML, LINK];\n  BOLD.contains = BOLD.contains.concat(CONTAINABLE);\n  ITALIC.contains = ITALIC.contains.concat(CONTAINABLE);\n  CONTAINABLE = CONTAINABLE.concat(BOLD, ITALIC);\n  var HEADER = {\n    className: 'section',\n    variants: [{\n      begin: '^#{1,6}',\n      end: '$',\n      contains: CONTAINABLE\n    }, {\n      begin: '(?=^.+?\\\\n[=-]{2,}$)',\n      contains: [{\n        begin: '^[=-]*$'\n      }, {\n        begin: '^',\n        end: \"\\\\n\",\n        contains: CONTAINABLE\n      }]\n    }]\n  };\n  var BLOCKQUOTE = {\n    className: 'quote',\n    begin: '^>\\\\s+',\n    contains: CONTAINABLE,\n    end: '$'\n  };\n  return {\n    name: 'Markdown',\n    aliases: ['md', 'mkdown', 'mkd'],\n    contains: [HEADER, INLINE_HTML, LIST, BOLD, ITALIC, BLOCKQUOTE, CODE, HORIZONTAL_RULE, LINK, LINK_REFERENCE]\n  };\n}\n\nmodule.exports = markdown;","map":{"version":3,"sources":["/home/chemime/Desktop/Python/django/trainingapp/frontend/node_modules/lowlight/node_modules/highlight.js/lib/languages/markdown.js"],"names":["markdown","hljs","INLINE_HTML","begin","end","subLanguage","relevance","HORIZONTAL_RULE","CODE","className","variants","contains","LIST","excludeEnd","LINK_REFERENCE","returnBegin","excludeBegin","LINK","returnEnd","BOLD","ITALIC","push","CONTAINABLE","concat","HEADER","BLOCKQUOTE","name","aliases","module","exports"],"mappings":"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","sourcesContent":["/*\nLanguage: Markdown\nRequires: xml.js\nAuthor: John Crepezzi <john.crepezzi@gmail.com>\nWebsite: https://daringfireball.net/projects/markdown/\nCategory: common, markup\n*/\n\nfunction markdown(hljs) {\n  const INLINE_HTML = {\n    begin: '<', end: '>',\n    subLanguage: 'xml',\n    relevance: 0\n  };\n  const HORIZONTAL_RULE = {\n    begin: '^[-\\\\*]{3,}', end: '$'\n  };\n  const CODE = {\n    className: 'code',\n    variants: [\n      // TODO: fix to allow these to work with sublanguage also\n      { begin: '(`{3,})(.|\\\\n)*?\\\\1`*[ ]*', },\n      { begin: '(~{3,})(.|\\\\n)*?\\\\1~*[ ]*', },\n      // needed to allow markdown as a sublanguage to work\n      { begin: '```', end: '```+[ ]*$' },\n      { begin: '~~~', end: '~~~+[ ]*$' },\n      { begin: '`.+?`' },\n      {\n        begin: '(?=^( {4}|\\\\t))',\n        // use contains to gobble up multiple lines to allow the block to be whatever size\n        // but only have a single open/close tag vs one per line\n        contains: [\n          { begin: '^( {4}|\\\\t)', end: '(\\\\n)$' }\n        ],\n        relevance: 0\n      }\n    ]\n  };\n  const LIST = {\n    className: 'bullet',\n    begin: '^[ \\t]*([*+-]|(\\\\d+\\\\.))(?=\\\\s+)',\n    end: '\\\\s+',\n    excludeEnd: true\n  };\n  const LINK_REFERENCE = {\n    begin: /^\\[[^\\n]+\\]:/,\n    returnBegin: true,\n    contains: [\n      {\n        className: 'symbol',\n        begin: /\\[/, end: /\\]/,\n        excludeBegin: true, excludeEnd: true\n      },\n      {\n        className: 'link',\n        begin: /:\\s*/, end: /$/,\n        excludeBegin: true\n      }\n    ]\n  };\n  const LINK = {\n    begin: '\\\\[.+?\\\\][\\\\(\\\\[].*?[\\\\)\\\\]]',\n    returnBegin: true,\n    contains: [\n      {\n        className: 'string',\n        begin: '\\\\[', end: '\\\\]',\n        excludeBegin: true,\n        returnEnd: true,\n        relevance: 0\n      },\n      {\n        className: 'link',\n        begin: '\\\\]\\\\(', end: '\\\\)',\n        excludeBegin: true, excludeEnd: true\n      },\n      {\n        className: 'symbol',\n        begin: '\\\\]\\\\[', end: '\\\\]',\n        excludeBegin: true, excludeEnd: true\n      }\n    ],\n    relevance: 10\n  };\n  const BOLD = {\n    className: 'strong',\n    contains: [],\n    variants: [\n      {begin: /_{2}/, end: /_{2}/ },\n      {begin: /\\*{2}/, end: /\\*{2}/ }\n    ]\n  };\n  const ITALIC = {\n    className: 'emphasis',\n    contains: [],\n    variants: [\n      { begin: /\\*(?!\\*)/, end: /\\*/ },\n      { begin: /_(?!_)/, end: /_/, relevance: 0},\n    ]\n  };\n  BOLD.contains.push(ITALIC);\n  ITALIC.contains.push(BOLD);\n\n  var CONTAINABLE = [\n    INLINE_HTML,\n    LINK\n  ];\n\n  BOLD.contains = BOLD.contains.concat(CONTAINABLE);\n  ITALIC.contains = ITALIC.contains.concat(CONTAINABLE);\n\n  CONTAINABLE = CONTAINABLE.concat(BOLD,ITALIC);\n\n  const HEADER = {\n    className: 'section',\n    variants: [\n      {\n        begin: '^#{1,6}',\n        end: '$',\n        contains: CONTAINABLE\n       },\n      {\n        begin: '(?=^.+?\\\\n[=-]{2,}$)',\n        contains: [\n          { begin: '^[=-]*$' },\n          { begin: '^', end: \"\\\\n\", contains: CONTAINABLE },\n        ]\n       }\n    ]\n  };\n\n  const BLOCKQUOTE = {\n    className: 'quote',\n    begin: '^>\\\\s+',\n    contains: CONTAINABLE,\n    end: '$',\n  };\n\n  return {\n    name: 'Markdown',\n    aliases: ['md', 'mkdown', 'mkd'],\n    contains: [\n      HEADER,\n      INLINE_HTML,\n      LIST,\n      BOLD,\n      ITALIC,\n      BLOCKQUOTE,\n      CODE,\n      HORIZONTAL_RULE,\n      LINK,\n      LINK_REFERENCE\n    ]\n  };\n}\n\nmodule.exports = markdown;\n"]},"metadata":{},"sourceType":"script"}