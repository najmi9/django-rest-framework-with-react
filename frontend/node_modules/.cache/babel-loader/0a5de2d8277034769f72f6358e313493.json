{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Tests whether an element is a tag or not.\n *\n * @param elem Element to test\n */\n\nfunction isTag(elem) {\n  return elem.type === \"tag\"\n  /* Tag */\n  || elem.type === \"script\"\n  /* Script */\n  || elem.type === \"style\"\n  /* Style */\n  ;\n}\n\nexports.isTag = isTag; // Exports for backwards compatibility\n\nexports.Text = \"text\"\n/* Text */\n; //Text\n\nexports.Directive = \"directive\"\n/* Directive */\n; //<? ... ?>\n\nexports.Comment = \"comment\"\n/* Comment */\n; //<!-- ... -->\n\nexports.Script = \"script\"\n/* Script */\n; //<script> tags\n\nexports.Style = \"style\"\n/* Style */\n; //<style> tags\n\nexports.Tag = \"tag\"\n/* Tag */\n; //Any tag\n\nexports.CDATA = \"cdata\"\n/* CDATA */\n; //<![CDATA[ ... ]]>\n\nexports.Doctype = \"doctype\"\n/* Doctype */\n;","map":{"version":3,"sources":["/home/chemime/Desktop/Python/django/trainingapp/frontend/node_modules/domelementtype/lib/index.js"],"names":["Object","defineProperty","exports","value","isTag","elem","type","Text","Directive","Comment","Script","Style","Tag","CDATA","Doctype"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACA;;;;;;AAKA,SAASC,KAAT,CAAeC,IAAf,EAAqB;AACjB,SAAQA,IAAI,CAACC,IAAL,KAAc;AAAM;AAApB,KACJD,IAAI,CAACC,IAAL,KAAc;AAAS;AADnB,KAEJD,IAAI,CAACC,IAAL,KAAc;AAAQ;AAF1B;AAGH;;AACDJ,OAAO,CAACE,KAAR,GAAgBA,KAAhB,C,CACA;;AACAF,OAAO,CAACK,IAAR,GAAe;AAAO;AAAtB,C,CAAkC;;AAClCL,OAAO,CAACM,SAAR,GAAoB;AAAY;AAAhC,C,CAAiD;;AACjDN,OAAO,CAACO,OAAR,GAAkB;AAAU;AAA5B,C,CAA2C;;AAC3CP,OAAO,CAACQ,MAAR,GAAiB;AAAS;AAA1B,C,CAAwC;;AACxCR,OAAO,CAACS,KAAR,GAAgB;AAAQ;AAAxB,C,CAAqC;;AACrCT,OAAO,CAACU,GAAR,GAAc;AAAM;AAApB,C,CAA+B;;AAC/BV,OAAO,CAACW,KAAR,GAAgB;AAAQ;AAAxB,C,CAAqC;;AACrCX,OAAO,CAACY,OAAR,GAAkB;AAAU;AAA5B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Tests whether an element is a tag or not.\n *\n * @param elem Element to test\n */\nfunction isTag(elem) {\n    return (elem.type === \"tag\" /* Tag */ ||\n        elem.type === \"script\" /* Script */ ||\n        elem.type === \"style\" /* Style */);\n}\nexports.isTag = isTag;\n// Exports for backwards compatibility\nexports.Text = \"text\" /* Text */; //Text\nexports.Directive = \"directive\" /* Directive */; //<? ... ?>\nexports.Comment = \"comment\" /* Comment */; //<!-- ... -->\nexports.Script = \"script\" /* Script */; //<script> tags\nexports.Style = \"style\" /* Style */; //<style> tags\nexports.Tag = \"tag\" /* Tag */; //Any tag\nexports.CDATA = \"cdata\" /* CDATA */; //<![CDATA[ ... ]]>\nexports.Doctype = \"doctype\" /* Doctype */;\n"]},"metadata":{},"sourceType":"script"}