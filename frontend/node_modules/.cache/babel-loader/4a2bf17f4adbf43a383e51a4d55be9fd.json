{"ast":null,"code":"const chapters = [{\n  \"id\": 4,\n  \"title\": \"What's Linux\",\n  \"introduction\": \"Just like Windows, iOS, and Mac OS, Linux is an operating system. In fact, one of the most popular platforms on the planet, Android, is powered by the Linux operating system. An operating system is software that manages all of the hardware resources associated with your desktop or laptop. To put it simply, the operating system manages the communication between your software and your hardware. Without the operating system (OS), the software wouldn?t function.\",\n  \"is_video\": false,\n  \"author\": 1,\n  \"body\": \"What's distribution ?\\r\\nLinux has a number of different versions to suit any type of user. From new users to hard-core users, you’ll find a “flavor” of Linux to match your needs. These versions are called distributions (or, in the short form, “distros”). Nearly every distribution of Linux can be downloaded for free, burned onto disk (or USB thumb drive), and installed (on as many machines as you like).\",\n  \"course\": 3,\n  \"media\": \"/courses/chapters/chap1.jpeg\",\n  \"createdAt\": \"09/23/2020 11:31:55\"\n}, {\n  \"id\": 5,\n  \"title\": \"Basic Commands in Linux\",\n  \"introduction\": \"When hearing about Linux, most people think of a complicated operating system that is only used by programmers. But it’s not as scary as it seems.\\r\\n\\r\\nLinux is an entire family of open-source Unix operating systems, that are based on the Linux Kernel. This includes all of the most popular Linux based systems like Ubuntu, Fedora, Mint, Debian, and others. More accurately, they’re called distributions or distros.\\r\\n\\r\\nSince Linux was first released in 1991, it has continued to gain popularity due to its open-source nature. People can freely modify and redistribute it under their own name.\\r\\n\\r\\nWhen operating a Linux OS, you need to use a shell — an interface that gives you access to the operating system’s services. Most Linux distributions use a graphic user interface (GUI) as their shell, mainly to provide ease of use for their users.\\r\\n\\r\\nThat being said, it’s recommended to use a command-line interface (CLI) because it’s more powerful and effective. Tasks that require a multi-step process through GUI can be done in a matter of seconds by typing commands into the CLI.\",\n  \"is_video\": false,\n  \"author\": 1,\n  \"body\": \"1. pwd command\\r\\nUse the pwd command to find out the path of the current working directory (folder) you’re in. The command will return an absolute (full) path, which is basically a path of all the directories that starts with a forward slash (/). An example of an absolute path is /home/username.\\r\\n\\r\\n2. cd command\\r\\nTo navigate through the Linux files and directories, use the cd command. It requires either the full path or the name of the directory, depending on the current working directory that you’re in.\\r\\n\\r\\nLet’s say you’re in /home/username/Documents and you want to go to Photos, a subdirectory of Documents. To do so, simply type the following command: cd Photos.\\r\\n\\r\\nAnother scenario is if you want to switch to a completely new directory, for example,/home/username/Movies. In this case, you have to type cd followed by the directory’s absolute path: cd /home/username/Movies.\\r\\n\\r\\nThere are some shortcuts to help you navigate quickly:\\r\\n\\r\\ncd .. (with two dots) to move one directory up\\r\\ncd to go straight to the home folder\\r\\ncd- (with a hyphen) to move to your previous directory\\r\\nOn a side note, Linux’s shell is case sensitive. So, you have to type the name’s directory exactly as it is.\\r\\n\\r\\n3. ls command\\r\\nThe ls command is used to view the contents of a directory. By default, this command will display the contents of your current working directory.\\r\\n\\r\\nIf you want to see the content of other directories, type ls and then the directory’s path. For example, enter ls /home/username/Documents to view the content of Documents.\\r\\n\\r\\nThere are variations you can use with the ls command:\\r\\n\\r\\nls -R will list all the files in the sub-directories as well\\r\\nls -a will show the hidden files\\r\\nls -al will list the files and directories with detailed information like the permissions, size, owner, etc.\\r\\n4. cat command\\r\\ncat (short for concatenate) is one of the most frequently used commands in Linux. It is used to list the contents of a file on the standard output (sdout). To run this command, type cat followed by the file’s name and its extension. For instance: cat file.txt.\\r\\n\\r\\nHere are other ways to use the cat command:\\r\\n\\r\\ncat > filename creates a new file\\r\\ncat filename1 filename2>filename3 joins two files (1 and 2) and stores the output of them in a new file (3)\\r\\nto convert a file to upper or lower case use, cat filename | tr a-z A-Z >output.txt\\r\\n5. cp command\\r\\nUse the cp command to copy files from the current directory to a different directory. For instance, the command cp scenery.jpg /home/username/Pictures would create a copy of scenery.jpg (from your current directory) into the Pictures directory.\\r\\n\\r\\n6. mv command\\r\\nThe primary use of the mv command is to move files, although it can also be used to rename files.\\r\\n\\r\\nThe arguments in mv are similar to the cp command. You need to type mv, the file’s name, and the destination’s directory. For example: mv file.txt /home/username/Documents.\\r\\n\\r\\nTo rename files, the Linux command is mv oldname.ext newname.ext\\r\\n\\r\\n7. mkdir command\\r\\nUse mkdir command to make a new directory — if you type mkdir Music it will create a directory called Music.\\r\\n\\r\\nThere are extra mkdir commands as well:\\r\\n\\r\\nTo generate a new directory inside another directory, use this Linux basic command mkdir Music/Newfile\\r\\nuse the p (parents) option to create a directory in between two existing directories. For example, mkdir -p Music/2020/Newfile will create the new “2020” file.\\r\\n8. rmdir command\\r\\nIf you need to delete a directory, use the rmdir command. However, rmdir only allows you to delete empty directories.\\r\\n\\r\\n9. rm command\\r\\nThe rm command is used to delete directories and the contents within them. If you only want to delete the directory — as an alternative to rmdir — use rm -r.\\r\\n\\r\\nNote: Be very careful with this command and double-check which directory you are in. This will delete everything and there is no undo.\\r\\n\\r\\n10. touch command\\r\\nThe touch command allows you to create a blank new file through the Linux command line. As an example, enter touch /home/username/Documents/Web.html to create an HTML file entitled Web under the Documents directory.\\r\\n\\r\\n11. locate command\\r\\nYou can use this command to locate a file, just like the search command in Windows. What’s more, using the -i argument along with this command will make it case-insensitive, so you can search for a file even if you don’t remember its exact name.\\r\\n\\r\\nTo search for a file that contains two or more words, use an asterisk (*). For example, locate -i school*note command will search for any file that contains the word “school” and “note”, whether it is uppercase or lowercase.\\r\\n\\r\\n12. find command\\r\\nSimilar to the locate command, using find also searches for files and directories. The difference is, you use the find command to locate files within a given directory.\\r\\n\\r\\nAs an example, find /home/ -name notes.txt command will search for a file called notes.txt within the home directory and its subdirectories.\\r\\n\\r\\nOther variations when using the find are:\\r\\n\\r\\nTo find files in the current directory use, find . -name notes.txt\\r\\nTo look for directories use, / -type d -name notes. txt\\r\\n13. grep command\\r\\nAnother basic Linux command that is undoubtedly helpful for everyday use is grep. It lets you search through all the text in a given file.\\r\\n\\r\\nTo illustrate, grep blue notepad.txt will search for the word blue in the notepad file. Lines that contain the searched word will be displayed fully.\\r\\n\\r\\n14. sudo command\\r\\nShort for “SuperUser Do”, this command enables you to perform tasks that require administrative or root permissions. However, it is not advisable to use this command for daily use because it might be easy for an error to occur if you did something wrong.\\r\\n\\r\\n15. df command\\r\\nUse df command to get a report on the system’s disk space usage, shown in percentage and KBs. If you want to see the report in megabytes, type df -m.\\r\\n\\r\\n16. du command\\r\\nIf you want to check how much space a file or a directory takes, the du (Disk Usage) command is the answer. However, the disk usage summary will show disk block numbers instead of the usual size format. If you want to see it in bytes, kilobytes, and megabytes, add the -h argument to the command line.\\r\\n\\r\\n17. head command\\r\\nThe head command is used to view the first lines of any text file. By default, it will show the first ten lines, but you can change this number to your liking. For example, if you only want to show the first five lines, type head -n 5 filename.ext.\\r\\n\\r\\n18. tail command\\r\\nThis one has a similar function to the head command, but instead of showing the first lines, the tail command will display the last ten lines of a text file. For example, tail -n filename.ext.\\r\\n\\r\\n19. diff command\\r\\nShort for difference, the diff command compares the contents of two files line by line. After analyzing the files, it will output the lines that do not match. Programmers often use this command when they need to make program alterations instead of rewriting the entire source code.\\r\\n\\r\\nThe simplest form of this command is diff file1.ext file2.ext\\r\\n\\r\\n20. tar command\\r\\nThe tar command is the most used command to archive multiple files into a tarball — a common Linux file format that is similar to zip format, with compression being optional.\\r\\n\\r\\nThis command is quite complex with a long list of functions such as adding new files into an existing archive, listing the content of an archive, extracting the content from an archive, and many more. Check out some practical examples to know more about other functions.\\r\\n\\r\\n21. chmod command\\r\\nchmod is another Linux command, used to change the read, write, and execute permissions of files and directories. As this command is rather complicated, you can read the full tutorial in order to execute it properly.\\r\\n\\r\\n22. chown command\\r\\nIn Linux, all files are owned by a specific user. The chown command enables you to change or transfer the ownership of a file to the specified username. For instance, chown linuxuser2 file.ext will make linuxuser2 as the owner of the file.ext.\\r\\n\\r\\n23. jobs command\\r\\njobs command will display all current jobs along with their statuses. A job is basically a process that is started by the shell.\\r\\n\\r\\n24. kill command\\r\\nIf you have an unresponsive program, you can terminate it manually by using the kill command. It will send a certain signal to the misbehaving app and instructs the app to terminate itself.\\r\\n\\r\\nThere is a total of sixty-four signals that you can use, but people usually only use two signals:\\r\\n\\r\\nSIGTERM (15) — requests a program to stop running and gives it some time to save all of its progress. If you don’t specify the signal when entering the kill command, this signal will be used.\\r\\nSIGKILL (9) — forces programs to stop immediately. Unsaved progress will be lost.\\r\\nBesides knowing the signals, you also need to know the process identification number (PID) of the program you want to kill. If you don’t know the PID, simply run the command ps ux.\\r\\n\\r\\nAfter knowing what signal you want to use and the PID of the program, enter the following syntax:\\r\\n\\r\\nkill [signal option] PID.\\r\\n\\r\\n25. ping command\\r\\nUse the ping command to check your connectivity status to a server. For example, by simply entering ping google.com, the command will check whether you’re able to connect to Google and also measure the response time.\\r\\n\\r\\n26. wget command\\r\\nThe Linux command line is super useful — you can even download files from the internet with the help of the wget command. To do so, simply type wget followed by the download link.\\r\\n\\r\\n27. uname command\\r\\nThe uname command, short for Unix Name, will print detailed information about your Linux system like the machine name, operating system, kernel, and so on.\\r\\n\\r\\n28. top command\\r\\nAs a terminal equivalent to Task Manager in Windows, the top command will display a list of running processes and how much CPU each process uses. It’s very useful to monitor system resource usage, especially knowing which process needs to be terminated because it consumes too many resources.\\r\\n\\r\\n29. history command\\r\\nWhen you’ve been using Linux for a certain period of time, you’ll quickly notice that you can run hundreds of commands every day. As such, running history command is particularly useful if you want to review the commands you’ve entered before.\\r\\n\\r\\n30. man command\\r\\nConfused about the function of certain Linux commands? Don’t worry, you can easily learn how to use them right from Linux’s shell by using the man command. For instance, entering man tail will show the manual instruction of the tail command.\\r\\n\\r\\n31. echo command\\r\\nThis command is used to move some data into a file. For example, if you want to add the text, “Hello, my name is John” into a file called name.txt, you would type echo Hello, my name is John >> name.txt\\r\\n\\r\\n32. zip, unzip command\\r\\nUse the zip command to compress your files into a zip archive, and use the unzip command to extract the zipped files from a zip archive.\\r\\n\\r\\n33. hostname command\\r\\nIf you want to know the name of your host/network simply type hostname. Adding a -I to the end will display the IP address of your network.\\r\\n\\r\\n34. useradd, userdel command\\r\\nSince Linux is a multi-user system, this means more than one person can interact with the same system at the same time. useradd is used to create a new user, while passwd is adding a password to that user’s account. To add a new person named John type, useradd John and then to add his password type, passwd 123456789.\\r\\n\\r\\nTo remove a user is very similar to adding a new user. To delete the users account type, userdel UserName.\",\n  \"course\": 3,\n  \"media\": \"/courses/chapters/chap2.jpeg\",\n  \"createdAt\": \"09/23/2020 11:36:41\"\n}, {\n  \"id\": 6,\n  \"title\": \"Authorization and Permission in Linux OS\",\n  \"introduction\": \"In this tutorial, learn to control file access through correct use of file and directory permissions and ownerships. Learn to:\\r\\n\\r\\nManage access permissions on both regular and special files as well as directories\\r\\nMaintain security using access modes such as suid, sgid, and the sticky bit\\r\\nChange the file creation mask\\r\\nGrant file access to group members\\r\\nThis tutorial helps you prepare for Objective 104.5 in Topic 104 of the Linux Server Professional (LPIC-1) exam 101. The objective has a weight of 3.\",\n  \"is_video\": false,\n  \"author\": 1,\n  \"body\": \"What groups am I in\\r\\nSimilarly, you can find out what groups you are in by using the groups command. You can find out both user and group information using the id command. Add a user ID parameter to either groups or id to see information for that user ID instead of the current user ID. Listing 2 shows some examples. Note that without a user ID, the id command will also display SELinux context as well as basic ID information.\\r\\n\\r\\nAdding permissions\\r\\nSuppose you create a “Hello world” shell script. When you first create the script, it will usually not be executable. Use the chmod command with the +x option to add the execute permissions as shown in Listing 5.\\r\\n\\r\\nListing 5. Creating an executable shell script\",\n  \"course\": 3,\n  \"media\": \"/courses/chapters/chap3.jpeg\",\n  \"createdAt\": \"09/23/2020 11:40:00\"\n}, {\n  \"id\": 7,\n  \"title\": \"Hacker Terminal\",\n  \"introduction\": \"You are a hacker. Your home is the terminal. You know every key stroke is valuable. If something is less than 100% efficient, you will spend hours figuring out the right tool to save yourself seconds. Because it’s always worth it.\\r\\n\\r\\nDoes your constant search for newer and better ways to do things detract from actually doing things? Some may say yes, but you say nay. No work is worth doing unless you can lecture your coworkers on why you were able to do it so efficiently (setup time not included).\\r\\n\\r\\nThe following is a list of tools/features that every good hacker should know about.\",\n  \"is_video\": true,\n  \"author\": 1,\n  \"body\": \"Shell (zsh)\\r\\nAverage developer: A shell is a shell. It doesn’t really matter which one I use. They all suck anyway.\\r\\nYou, a Hacker: The shell is the lifeblood of my work. My passion for efficiency and features knows no bounds. My shell must be one worthy of a true hacker.\\r\\nYou live in the terminal, and that’s why you want to use a great shell. That’s why you use zsh.\\r\\n\\r\\nIt comes with a whole slew of features:\\r\\n\\r\\nAuto-correct of misspelled commands\\r\\nEasy drop-in replacement of bash\\r\\nBetter cd completion using <tab>\\r\\nPath expansion: cd /u/c/c/j + <tab> =cd /user/caleb/code/jarvis\\r\\nMuch more\\r\\nIt also comes with a great framework for managing your zsh configuration: Oh My Zsh. It includes 200+ plugins and 140+ themes to add all sorts of awesome features to your terminal. A small sample:\\r\\n\\r\\ngit - tons of aliases and useful functions for git\\r\\ntmux - alias and settings for integrating zsh with tmux\\r\\nnode - adds node-docs command for opening website docs\\r\\nosx - several utilities for working with OSX\\r\\nweb-search - initialize web searches from command line\\r\\nauto-suggestions - fast, unobtrusive suggestions as you type based on history\\r\\nYou can find the full list of plugins here.\\r\\n\\r\\nSession Management (tmux)\\r\\nAverage developer: Okay I’ve got my files open for lame_project_1. But I also need to do work in boring_project_2. I also need to ssh into a server and look at the logs. I guess I’ll just create a huge mess in my terminal that has files/tabs from multiple projects open in a way that I’ll eventually lose control of and be forced to close and start over.\\r\\nYou, a Hacker: I work on several projects at once, so I need a tool to help me keep it organized. It should work across multiple platforms, and allow me to create organized work spaces and have a lot of other features that help with productivity.\\r\\nYou know that development can get messy. Sometimes, you have to work on several projects at once. That’s why you use tmux.\\r\\n\\r\\nIt allows you to create sessions. Each session can be customized to the exact layout you need. You can name sessions for easy switching, and even save and restore sessions if your terminal is closed. Plus, it has its own customizable status line that will allow you display things like time, date, CPU usage, and more. And if you don’t know your CPU usage at any given moment, are you even a hacker?\",\n  \"course\": 3,\n  \"media\": \"/courses/chapters/Parlez_moi_de_vous_pr%C3%A9sentez-vous_exemples_de_r%C3%A9ponses_coaching_emploi.mp4\",\n  \"createdAt\": \"09/23/2020 11:42:17\"\n}, {\n  \"id\": 8,\n  \"title\": \"Install and Config LAMP ubuntu server\",\n  \"introduction\": \"What is the LAMP Stack?\\r\\nThe LAMP stack is a set of open-source software used for web application development. For a web application to work, it has to include an operating system, a web server, a database, and a programming language. Each layer of software is vital for creating a database-driven and dynamic website.\\r\\n\\r\\n\\r\\nWhat is the LAMP Stack?\\r\\nThe LAMP stack is a set of open-source software used for web application development. For a web application to work, it has to include an operating system, a web server, a database, and a programming language. Each layer of software is vital for creating a database-driven and dynamic website.\\r\\n\\r\\nhow to install lamp stack on ubuntu\\r\\nThe name LAMP is an acronym of the following programs:\\r\\n\\r\\nLinux Operating System\\r\\nApache HTTP Server\\r\\nMySQL database management system\\r\\nPHP programming language\",\n  \"is_video\": true,\n  \"author\": 1,\n  \"body\": \"Make sure to update the package repository cache to ensure it installs the latest versions of the software. To do so, type in the following command:\\r\\n\\r\\nsudo apt-get update\\r\\nStep 2: Install Apache\\r\\n1. To install Apache, run the following command in the terminal:\\r\\n\\r\\nsudo apt-get install apache2\\r\\nPress y (yes) and hit ENTER to permit the installation.\\r\\n\\r\\n2. Check if Apache is installed correctly by running the Apache service status. Use the following the command:\\r\\n\\r\\nsudo service apache2 status\\r\\nIf everything installed correctly, you will receive this output:\\r\\n\\r\\nApache is active and running in Ubuntu.\\r\\n3. Next, make sure that the UFW firewall has an application profile for Apache by typing in the following command:\\r\\n\\r\\nsudo ufw app list\\r\\nIn the Apache Full profile, make sure it allows the traffic on ports 80 and 443. Check this by typing the command:\\r\\n\\r\\nsudo ufw app info “Apache Full”\\r\\nYou will see the output as in the following image:\\r\\n\\r\\nList of open ports in Ubunutu.\\r\\n4. To ensure Apache is running, enter the IP address of your server in the address bar and press ENTER.\\r\\n\\r\\nThe test Apache web server page should display as below.\\r\\n\\r\\nDefault Apache Ubuntu page.\\r\\nNote: To identify the server’s public IP address, run the command:\\r\\n\\r\\nsudo apt-get install curl\\r\\ncurl http://icanhazip.com\\r\\nStep 3: Install MySQL and Create a Database\\r\\nTo install MySQL, type in the following command:\\r\\n\\r\\nsudo apt-get install mysql-server\\r\\nPress y to allow the installation.\\r\\nDuring the installation, you will be prompted to set the root user password.\",\n  \"course\": 3,\n  \"media\": \"courses/chapters/Parlez_moi_de_vous_pr%C3%A9sentez-vous_exemples_de_r%C3%A9ponses_coaching_emploi_IjcZlOC.mp4\",\n  \"createdAt\": \"09/23/2020 11:44:41\"\n}, {\n  \"id\": 9,\n  \"title\": \"Craking password : Hashcat and Hydra\",\n  \"introduction\": \"Continuing with my series on how to crack passwords, I now want to introduce you to one of the newest and best designed password crackers out there—hashcat. The beauty of hashcat is in its design, which focuses on speed and versatility. It enables us to crack multiple types of hashes, in multiple ways, very fast.\\r\\n\\r\\nAs mentioned in the first part of this series, passwords are stored in a one-way encryption called hashes. There are multiple ways of obtaining these hashes, such as .dll injection in Windows systems or capturing the hash in transit, such as in WPA2 wireless cracking.\\r\\n\\r\\nOnce we can grab the hash, the next step becomes one of finding an effective and efficient way of cracking it. There are numerous tools, some of which I have highlighted in other articles here, but hashcat is unique in its design and versatility, so let's take a look at how it works.\",\n  \"is_video\": false,\n  \"author\": 1,\n  \"body\": \"We can see some of the options for hashcat displayed below the basic syntax. Some of the most important of these are -m (the hashtype) and -a (attack mode). In general, we will need to use both of these options in most password cracking attempts with hashcat.\\r\\n\\r\\nStep 2More Extensive Options\\r\\nIf we scan a bit further down this hashcat help screen, we can see more options. The first two below are some of the key options that hashcat enables.\\r\\n\\r\\nFirst, hashcat enables rules that allow us to apply specifically designed rules to use on our wordlist file. These rules can take our wordlist file and apply capitalization rules, special characters, word combinations, appended and prepended numbers, and so on. Each of these will help us to break passwords that have been made more complex to avoid dictionary attacks.\\r\\n\\r\\n\\r\\nThe next stanza shows us custom character sets. This enables us to set the character set that we want to use to crack the passwords. If we know the company's or institution's password policy, we can choose a subset of all characters to meet their policy and speed up our cracking. For instance, if a company allows an all-numeric character set, choose to crack the hashes with just numbers. These types of passwords are VERY easy to crack.\\r\\n\\r\\n\\r\\nThe next screen includes some of the more obscure options, including the output file type, the debug mode and the built-in character sets.\\r\\n\\r\\n\\r\\nFinally, we have to chose the type of hash we are trying to crack. Hashcat gives us numerous options. When we get ready to crack the hash, we need to designate in our command what type of hash we are working with by giving hashcat the number associated with the hash type. Here we can see a list of some of the hash types hashcat can work with.\\r\\n\\r\\n\\r\\nStep 3Choose Your Wordlist\\r\\nIn this tutorial, we will be using a simple dictionary attack on some Linux hashes. To do so, we need a wordlist to work from. There are literally thousands of wordlists available on the web, but Kali has numerous wordlists built right in, so let's try using one of those.\\r\\n\\r\\nTo find the built in wordlists in Kali, we can type:\\r\\n\\r\\nkali > locate wordlist\\r\\n\\r\\n\\r\\nWhen we do, we can see that there are dozens of wordlists available.\",\n  \"course\": 3,\n  \"media\": \"/courses/chapters/chap4.jpeg\",\n  \"createdAt\": \"09/23/2020 11:53:01\"\n}];\nconst courses = [{\n  \"id\": 1,\n  \"title\": \"course title la mécanique quantique\",\n  \"description\": \"the description of the course\",\n  \"media\": \"/courses/cover/glases.jpeg\",\n  \"author\": 3,\n  \"slug\": \"course-slug\",\n  \"objectifs\": \"hello world, objectifs\",\n  \"is_video\": false,\n  \"createdAt\": \"09/22/2020 14:35:42\"\n}, {\n  \"id\": 2,\n  \"title\": \"course title la thermodynamique\",\n  \"description\": \"the description of the course\",\n  \"media\": \"/courses/cover/cover.jpg\",\n  \"author\": 3,\n  \"slug\": \"course-slug2\",\n  \"objectifs\": \"hello world, objectifs\",\n  \"is_video\": false,\n  \"createdAt\": \"09/22/2020 14:37:30\"\n}, {\n  \"id\": 3,\n  \"title\": \"Introduction to GNU Linux\",\n  \"description\": \"What you'll learn ?\\r\\nBy the end of this course you will understand the fundamentals of the Linux operating system and be able to apply that knowledge in a practical and useful manner.\\r\\n\\r\\nThis course is an introduction to Linux operating system, il will help  beginners to understand the system and how it works,  we are going to discover this system and useful commands together.\",\n  \"media\": \"/courses/cover/logo-linux.jpg\",\n  \"author\": 1,\n  \"slug\": \"GNU Linux\",\n  \"objectifs\": \"This course aims to :\\r\\n-  Teach you the fundamentals of the Linux operating system\\r\\n-  Help you to understand the linux OS an dhow it works\\r\\n- Show you how to use the basic commands with examples\\r\\n-  Help you to understand the security system in Linux\\r\\n- Teach you How to use the terminal in Linux\\r\\n- Help you to set up a Ubuntu web server\\r\\n- Help you to have a hacker terminal\",\n  \"is_video\": false,\n  \"createdAt\": \"09/23/2020 11:20:43\"\n}];\nexport { chapters, courses };","map":{"version":3,"sources":["/home/chemime/Desktop/Python/django/trainingapp/frontend/src/service/test.js"],"names":["chapters","courses"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,CACb;AACI,QAAM,CADV;AAEI,WAAS,cAFb;AAGI,kBAAgB,gdAHpB;AAII,cAAY,KAJhB;AAKI,YAAU,CALd;AAMI,UAAQ,wZANZ;AAOI,YAAU,CAPd;AAQI,WAAS,8BARb;AASI,eAAa;AATjB,CADa,EAYb;AACI,QAAM,CADV;AAEI,WAAS,yBAFb;AAGI,kBAAgB,ukCAHpB;AAII,cAAY,KAJhB;AAKI,YAAU,CALd;AAMI,UAAQ,qlXANZ;AAOI,YAAU,CAPd;AAQI,WAAS,8BARb;AASI,eAAa;AATjB,CAZa,EAuBb;AACI,QAAM,CADV;AAEI,WAAS,0CAFb;AAGI,kBAAgB,ygBAHpB;AAII,cAAY,KAJhB;AAKI,YAAU,CALd;AAMI,UAAQ,wtBANZ;AAOI,YAAU,CAPd;AAQI,WAAS,8BARb;AASI,eAAa;AATjB,CAvBa,EAkCb;AACI,QAAM,CADV;AAEI,WAAS,iBAFb;AAGI,kBAAgB,ulBAHpB;AAII,cAAY,IAJhB;AAKI,YAAU,CALd;AAMI,UAAQ,k2EANZ;AAOI,YAAU,CAPd;AAQI,WAAS,wGARb;AASI,eAAa;AATjB,CAlCa,EA6Cb;AACI,QAAM,CADV;AAEI,WAAS,uCAFb;AAGI,kBAAgB,u2BAHpB;AAII,cAAY,IAJhB;AAKI,YAAU,CALd;AAMI,UAAQ,slDANZ;AAOI,YAAU,CAPd;AAQI,WAAS,+GARb;AASI,eAAa;AATjB,CA7Ca,EAwDb;AACI,QAAM,CADV;AAEI,WAAS,sCAFb;AAGI,kBAAgB,o3BAHpB;AAII,cAAY,KAJhB;AAKI,YAAU,CALd;AAMI,UAAQ,6tEANZ;AAOI,YAAU,CAPd;AAQI,WAAS,8BARb;AASI,eAAa;AATjB,CAxDa,CAAjB;AAuEA,MAAOC,OAAO,GAAI,CACV;AACI,QAAM,CADV;AAEI,WAAS,qCAFb;AAGI,iBAAe,+BAHnB;AAII,WAAS,4BAJb;AAKI,YAAU,CALd;AAMI,UAAQ,aANZ;AAOI,eAAa,wBAPjB;AAQI,cAAY,KARhB;AASI,eAAa;AATjB,CADU,EAYV;AACI,QAAM,CADV;AAEI,WAAS,iCAFb;AAGI,iBAAe,+BAHnB;AAII,WAAS,0BAJb;AAKI,YAAU,CALd;AAMI,UAAQ,cANZ;AAOI,eAAa,wBAPjB;AAQI,cAAY,KARhB;AASI,eAAa;AATjB,CAZU,EAuBV;AACI,QAAM,CADV;AAEI,WAAS,2BAFb;AAGI,iBAAe,mYAHnB;AAII,WAAS,+BAJb;AAKI,YAAU,CALd;AAMI,UAAQ,WANZ;AAOI,eAAa,yYAPjB;AAQI,cAAY,KARhB;AASI,eAAa;AATjB,CAvBU,CAAlB;AAoCI,SACID,QADJ,EACcC,OADd","sourcesContent":["const chapters = [\n    {\n        \"id\": 4,\n        \"title\": \"What's Linux\",\n        \"introduction\": \"Just like Windows, iOS, and Mac OS, Linux is an operating system. In fact, one of the most popular platforms on the planet, Android, is powered by the Linux operating system. An operating system is software that manages all of the hardware resources associated with your desktop or laptop. To put it simply, the operating system manages the communication between your software and your hardware. Without the operating system (OS), the software wouldn?t function.\",\n        \"is_video\": false,\n        \"author\": 1,\n        \"body\": \"What's distribution ?\\r\\nLinux has a number of different versions to suit any type of user. From new users to hard-core users, you’ll find a “flavor” of Linux to match your needs. These versions are called distributions (or, in the short form, “distros”). Nearly every distribution of Linux can be downloaded for free, burned onto disk (or USB thumb drive), and installed (on as many machines as you like).\",\n        \"course\": 3,\n        \"media\": \"/courses/chapters/chap1.jpeg\",\n        \"createdAt\": \"09/23/2020 11:31:55\"\n    },\n    {\n        \"id\": 5,\n        \"title\": \"Basic Commands in Linux\",\n        \"introduction\": \"When hearing about Linux, most people think of a complicated operating system that is only used by programmers. But it’s not as scary as it seems.\\r\\n\\r\\nLinux is an entire family of open-source Unix operating systems, that are based on the Linux Kernel. This includes all of the most popular Linux based systems like Ubuntu, Fedora, Mint, Debian, and others. More accurately, they’re called distributions or distros.\\r\\n\\r\\nSince Linux was first released in 1991, it has continued to gain popularity due to its open-source nature. People can freely modify and redistribute it under their own name.\\r\\n\\r\\nWhen operating a Linux OS, you need to use a shell — an interface that gives you access to the operating system’s services. Most Linux distributions use a graphic user interface (GUI) as their shell, mainly to provide ease of use for their users.\\r\\n\\r\\nThat being said, it’s recommended to use a command-line interface (CLI) because it’s more powerful and effective. Tasks that require a multi-step process through GUI can be done in a matter of seconds by typing commands into the CLI.\",\n        \"is_video\": false,\n        \"author\": 1,\n        \"body\": \"1. pwd command\\r\\nUse the pwd command to find out the path of the current working directory (folder) you’re in. The command will return an absolute (full) path, which is basically a path of all the directories that starts with a forward slash (/). An example of an absolute path is /home/username.\\r\\n\\r\\n2. cd command\\r\\nTo navigate through the Linux files and directories, use the cd command. It requires either the full path or the name of the directory, depending on the current working directory that you’re in.\\r\\n\\r\\nLet’s say you’re in /home/username/Documents and you want to go to Photos, a subdirectory of Documents. To do so, simply type the following command: cd Photos.\\r\\n\\r\\nAnother scenario is if you want to switch to a completely new directory, for example,/home/username/Movies. In this case, you have to type cd followed by the directory’s absolute path: cd /home/username/Movies.\\r\\n\\r\\nThere are some shortcuts to help you navigate quickly:\\r\\n\\r\\ncd .. (with two dots) to move one directory up\\r\\ncd to go straight to the home folder\\r\\ncd- (with a hyphen) to move to your previous directory\\r\\nOn a side note, Linux’s shell is case sensitive. So, you have to type the name’s directory exactly as it is.\\r\\n\\r\\n3. ls command\\r\\nThe ls command is used to view the contents of a directory. By default, this command will display the contents of your current working directory.\\r\\n\\r\\nIf you want to see the content of other directories, type ls and then the directory’s path. For example, enter ls /home/username/Documents to view the content of Documents.\\r\\n\\r\\nThere are variations you can use with the ls command:\\r\\n\\r\\nls -R will list all the files in the sub-directories as well\\r\\nls -a will show the hidden files\\r\\nls -al will list the files and directories with detailed information like the permissions, size, owner, etc.\\r\\n4. cat command\\r\\ncat (short for concatenate) is one of the most frequently used commands in Linux. It is used to list the contents of a file on the standard output (sdout). To run this command, type cat followed by the file’s name and its extension. For instance: cat file.txt.\\r\\n\\r\\nHere are other ways to use the cat command:\\r\\n\\r\\ncat > filename creates a new file\\r\\ncat filename1 filename2>filename3 joins two files (1 and 2) and stores the output of them in a new file (3)\\r\\nto convert a file to upper or lower case use, cat filename | tr a-z A-Z >output.txt\\r\\n5. cp command\\r\\nUse the cp command to copy files from the current directory to a different directory. For instance, the command cp scenery.jpg /home/username/Pictures would create a copy of scenery.jpg (from your current directory) into the Pictures directory.\\r\\n\\r\\n6. mv command\\r\\nThe primary use of the mv command is to move files, although it can also be used to rename files.\\r\\n\\r\\nThe arguments in mv are similar to the cp command. You need to type mv, the file’s name, and the destination’s directory. For example: mv file.txt /home/username/Documents.\\r\\n\\r\\nTo rename files, the Linux command is mv oldname.ext newname.ext\\r\\n\\r\\n7. mkdir command\\r\\nUse mkdir command to make a new directory — if you type mkdir Music it will create a directory called Music.\\r\\n\\r\\nThere are extra mkdir commands as well:\\r\\n\\r\\nTo generate a new directory inside another directory, use this Linux basic command mkdir Music/Newfile\\r\\nuse the p (parents) option to create a directory in between two existing directories. For example, mkdir -p Music/2020/Newfile will create the new “2020” file.\\r\\n8. rmdir command\\r\\nIf you need to delete a directory, use the rmdir command. However, rmdir only allows you to delete empty directories.\\r\\n\\r\\n9. rm command\\r\\nThe rm command is used to delete directories and the contents within them. If you only want to delete the directory — as an alternative to rmdir — use rm -r.\\r\\n\\r\\nNote: Be very careful with this command and double-check which directory you are in. This will delete everything and there is no undo.\\r\\n\\r\\n10. touch command\\r\\nThe touch command allows you to create a blank new file through the Linux command line. As an example, enter touch /home/username/Documents/Web.html to create an HTML file entitled Web under the Documents directory.\\r\\n\\r\\n11. locate command\\r\\nYou can use this command to locate a file, just like the search command in Windows. What’s more, using the -i argument along with this command will make it case-insensitive, so you can search for a file even if you don’t remember its exact name.\\r\\n\\r\\nTo search for a file that contains two or more words, use an asterisk (*). For example, locate -i school*note command will search for any file that contains the word “school” and “note”, whether it is uppercase or lowercase.\\r\\n\\r\\n12. find command\\r\\nSimilar to the locate command, using find also searches for files and directories. The difference is, you use the find command to locate files within a given directory.\\r\\n\\r\\nAs an example, find /home/ -name notes.txt command will search for a file called notes.txt within the home directory and its subdirectories.\\r\\n\\r\\nOther variations when using the find are:\\r\\n\\r\\nTo find files in the current directory use, find . -name notes.txt\\r\\nTo look for directories use, / -type d -name notes. txt\\r\\n13. grep command\\r\\nAnother basic Linux command that is undoubtedly helpful for everyday use is grep. It lets you search through all the text in a given file.\\r\\n\\r\\nTo illustrate, grep blue notepad.txt will search for the word blue in the notepad file. Lines that contain the searched word will be displayed fully.\\r\\n\\r\\n14. sudo command\\r\\nShort for “SuperUser Do”, this command enables you to perform tasks that require administrative or root permissions. However, it is not advisable to use this command for daily use because it might be easy for an error to occur if you did something wrong.\\r\\n\\r\\n15. df command\\r\\nUse df command to get a report on the system’s disk space usage, shown in percentage and KBs. If you want to see the report in megabytes, type df -m.\\r\\n\\r\\n16. du command\\r\\nIf you want to check how much space a file or a directory takes, the du (Disk Usage) command is the answer. However, the disk usage summary will show disk block numbers instead of the usual size format. If you want to see it in bytes, kilobytes, and megabytes, add the -h argument to the command line.\\r\\n\\r\\n17. head command\\r\\nThe head command is used to view the first lines of any text file. By default, it will show the first ten lines, but you can change this number to your liking. For example, if you only want to show the first five lines, type head -n 5 filename.ext.\\r\\n\\r\\n18. tail command\\r\\nThis one has a similar function to the head command, but instead of showing the first lines, the tail command will display the last ten lines of a text file. For example, tail -n filename.ext.\\r\\n\\r\\n19. diff command\\r\\nShort for difference, the diff command compares the contents of two files line by line. After analyzing the files, it will output the lines that do not match. Programmers often use this command when they need to make program alterations instead of rewriting the entire source code.\\r\\n\\r\\nThe simplest form of this command is diff file1.ext file2.ext\\r\\n\\r\\n20. tar command\\r\\nThe tar command is the most used command to archive multiple files into a tarball — a common Linux file format that is similar to zip format, with compression being optional.\\r\\n\\r\\nThis command is quite complex with a long list of functions such as adding new files into an existing archive, listing the content of an archive, extracting the content from an archive, and many more. Check out some practical examples to know more about other functions.\\r\\n\\r\\n21. chmod command\\r\\nchmod is another Linux command, used to change the read, write, and execute permissions of files and directories. As this command is rather complicated, you can read the full tutorial in order to execute it properly.\\r\\n\\r\\n22. chown command\\r\\nIn Linux, all files are owned by a specific user. The chown command enables you to change or transfer the ownership of a file to the specified username. For instance, chown linuxuser2 file.ext will make linuxuser2 as the owner of the file.ext.\\r\\n\\r\\n23. jobs command\\r\\njobs command will display all current jobs along with their statuses. A job is basically a process that is started by the shell.\\r\\n\\r\\n24. kill command\\r\\nIf you have an unresponsive program, you can terminate it manually by using the kill command. It will send a certain signal to the misbehaving app and instructs the app to terminate itself.\\r\\n\\r\\nThere is a total of sixty-four signals that you can use, but people usually only use two signals:\\r\\n\\r\\nSIGTERM (15) — requests a program to stop running and gives it some time to save all of its progress. If you don’t specify the signal when entering the kill command, this signal will be used.\\r\\nSIGKILL (9) — forces programs to stop immediately. Unsaved progress will be lost.\\r\\nBesides knowing the signals, you also need to know the process identification number (PID) of the program you want to kill. If you don’t know the PID, simply run the command ps ux.\\r\\n\\r\\nAfter knowing what signal you want to use and the PID of the program, enter the following syntax:\\r\\n\\r\\nkill [signal option] PID.\\r\\n\\r\\n25. ping command\\r\\nUse the ping command to check your connectivity status to a server. For example, by simply entering ping google.com, the command will check whether you’re able to connect to Google and also measure the response time.\\r\\n\\r\\n26. wget command\\r\\nThe Linux command line is super useful — you can even download files from the internet with the help of the wget command. To do so, simply type wget followed by the download link.\\r\\n\\r\\n27. uname command\\r\\nThe uname command, short for Unix Name, will print detailed information about your Linux system like the machine name, operating system, kernel, and so on.\\r\\n\\r\\n28. top command\\r\\nAs a terminal equivalent to Task Manager in Windows, the top command will display a list of running processes and how much CPU each process uses. It’s very useful to monitor system resource usage, especially knowing which process needs to be terminated because it consumes too many resources.\\r\\n\\r\\n29. history command\\r\\nWhen you’ve been using Linux for a certain period of time, you’ll quickly notice that you can run hundreds of commands every day. As such, running history command is particularly useful if you want to review the commands you’ve entered before.\\r\\n\\r\\n30. man command\\r\\nConfused about the function of certain Linux commands? Don’t worry, you can easily learn how to use them right from Linux’s shell by using the man command. For instance, entering man tail will show the manual instruction of the tail command.\\r\\n\\r\\n31. echo command\\r\\nThis command is used to move some data into a file. For example, if you want to add the text, “Hello, my name is John” into a file called name.txt, you would type echo Hello, my name is John >> name.txt\\r\\n\\r\\n32. zip, unzip command\\r\\nUse the zip command to compress your files into a zip archive, and use the unzip command to extract the zipped files from a zip archive.\\r\\n\\r\\n33. hostname command\\r\\nIf you want to know the name of your host/network simply type hostname. Adding a -I to the end will display the IP address of your network.\\r\\n\\r\\n34. useradd, userdel command\\r\\nSince Linux is a multi-user system, this means more than one person can interact with the same system at the same time. useradd is used to create a new user, while passwd is adding a password to that user’s account. To add a new person named John type, useradd John and then to add his password type, passwd 123456789.\\r\\n\\r\\nTo remove a user is very similar to adding a new user. To delete the users account type, userdel UserName.\",\n        \"course\": 3,\n        \"media\": \"/courses/chapters/chap2.jpeg\",\n        \"createdAt\": \"09/23/2020 11:36:41\"\n    },\n    {\n        \"id\": 6,\n        \"title\": \"Authorization and Permission in Linux OS\",\n        \"introduction\": \"In this tutorial, learn to control file access through correct use of file and directory permissions and ownerships. Learn to:\\r\\n\\r\\nManage access permissions on both regular and special files as well as directories\\r\\nMaintain security using access modes such as suid, sgid, and the sticky bit\\r\\nChange the file creation mask\\r\\nGrant file access to group members\\r\\nThis tutorial helps you prepare for Objective 104.5 in Topic 104 of the Linux Server Professional (LPIC-1) exam 101. The objective has a weight of 3.\",\n        \"is_video\": false,\n        \"author\": 1,\n        \"body\": \"What groups am I in\\r\\nSimilarly, you can find out what groups you are in by using the groups command. You can find out both user and group information using the id command. Add a user ID parameter to either groups or id to see information for that user ID instead of the current user ID. Listing 2 shows some examples. Note that without a user ID, the id command will also display SELinux context as well as basic ID information.\\r\\n\\r\\nAdding permissions\\r\\nSuppose you create a “Hello world” shell script. When you first create the script, it will usually not be executable. Use the chmod command with the +x option to add the execute permissions as shown in Listing 5.\\r\\n\\r\\nListing 5. Creating an executable shell script\",\n        \"course\": 3,\n        \"media\": \"/courses/chapters/chap3.jpeg\",\n        \"createdAt\": \"09/23/2020 11:40:00\"\n    },\n    {\n        \"id\": 7,\n        \"title\": \"Hacker Terminal\",\n        \"introduction\": \"You are a hacker. Your home is the terminal. You know every key stroke is valuable. If something is less than 100% efficient, you will spend hours figuring out the right tool to save yourself seconds. Because it’s always worth it.\\r\\n\\r\\nDoes your constant search for newer and better ways to do things detract from actually doing things? Some may say yes, but you say nay. No work is worth doing unless you can lecture your coworkers on why you were able to do it so efficiently (setup time not included).\\r\\n\\r\\nThe following is a list of tools/features that every good hacker should know about.\",\n        \"is_video\": true,\n        \"author\": 1,\n        \"body\": \"Shell (zsh)\\r\\nAverage developer: A shell is a shell. It doesn’t really matter which one I use. They all suck anyway.\\r\\nYou, a Hacker: The shell is the lifeblood of my work. My passion for efficiency and features knows no bounds. My shell must be one worthy of a true hacker.\\r\\nYou live in the terminal, and that’s why you want to use a great shell. That’s why you use zsh.\\r\\n\\r\\nIt comes with a whole slew of features:\\r\\n\\r\\nAuto-correct of misspelled commands\\r\\nEasy drop-in replacement of bash\\r\\nBetter cd completion using <tab>\\r\\nPath expansion: cd /u/c/c/j + <tab> =cd /user/caleb/code/jarvis\\r\\nMuch more\\r\\nIt also comes with a great framework for managing your zsh configuration: Oh My Zsh. It includes 200+ plugins and 140+ themes to add all sorts of awesome features to your terminal. A small sample:\\r\\n\\r\\ngit - tons of aliases and useful functions for git\\r\\ntmux - alias and settings for integrating zsh with tmux\\r\\nnode - adds node-docs command for opening website docs\\r\\nosx - several utilities for working with OSX\\r\\nweb-search - initialize web searches from command line\\r\\nauto-suggestions - fast, unobtrusive suggestions as you type based on history\\r\\nYou can find the full list of plugins here.\\r\\n\\r\\nSession Management (tmux)\\r\\nAverage developer: Okay I’ve got my files open for lame_project_1. But I also need to do work in boring_project_2. I also need to ssh into a server and look at the logs. I guess I’ll just create a huge mess in my terminal that has files/tabs from multiple projects open in a way that I’ll eventually lose control of and be forced to close and start over.\\r\\nYou, a Hacker: I work on several projects at once, so I need a tool to help me keep it organized. It should work across multiple platforms, and allow me to create organized work spaces and have a lot of other features that help with productivity.\\r\\nYou know that development can get messy. Sometimes, you have to work on several projects at once. That’s why you use tmux.\\r\\n\\r\\nIt allows you to create sessions. Each session can be customized to the exact layout you need. You can name sessions for easy switching, and even save and restore sessions if your terminal is closed. Plus, it has its own customizable status line that will allow you display things like time, date, CPU usage, and more. And if you don’t know your CPU usage at any given moment, are you even a hacker?\",\n        \"course\": 3,\n        \"media\": \"/courses/chapters/Parlez_moi_de_vous_pr%C3%A9sentez-vous_exemples_de_r%C3%A9ponses_coaching_emploi.mp4\",\n        \"createdAt\": \"09/23/2020 11:42:17\"\n    },\n    {\n        \"id\": 8,\n        \"title\": \"Install and Config LAMP ubuntu server\",\n        \"introduction\": \"What is the LAMP Stack?\\r\\nThe LAMP stack is a set of open-source software used for web application development. For a web application to work, it has to include an operating system, a web server, a database, and a programming language. Each layer of software is vital for creating a database-driven and dynamic website.\\r\\n\\r\\n\\r\\nWhat is the LAMP Stack?\\r\\nThe LAMP stack is a set of open-source software used for web application development. For a web application to work, it has to include an operating system, a web server, a database, and a programming language. Each layer of software is vital for creating a database-driven and dynamic website.\\r\\n\\r\\nhow to install lamp stack on ubuntu\\r\\nThe name LAMP is an acronym of the following programs:\\r\\n\\r\\nLinux Operating System\\r\\nApache HTTP Server\\r\\nMySQL database management system\\r\\nPHP programming language\",\n        \"is_video\": true,\n        \"author\": 1,\n        \"body\": \"Make sure to update the package repository cache to ensure it installs the latest versions of the software. To do so, type in the following command:\\r\\n\\r\\nsudo apt-get update\\r\\nStep 2: Install Apache\\r\\n1. To install Apache, run the following command in the terminal:\\r\\n\\r\\nsudo apt-get install apache2\\r\\nPress y (yes) and hit ENTER to permit the installation.\\r\\n\\r\\n2. Check if Apache is installed correctly by running the Apache service status. Use the following the command:\\r\\n\\r\\nsudo service apache2 status\\r\\nIf everything installed correctly, you will receive this output:\\r\\n\\r\\nApache is active and running in Ubuntu.\\r\\n3. Next, make sure that the UFW firewall has an application profile for Apache by typing in the following command:\\r\\n\\r\\nsudo ufw app list\\r\\nIn the Apache Full profile, make sure it allows the traffic on ports 80 and 443. Check this by typing the command:\\r\\n\\r\\nsudo ufw app info “Apache Full”\\r\\nYou will see the output as in the following image:\\r\\n\\r\\nList of open ports in Ubunutu.\\r\\n4. To ensure Apache is running, enter the IP address of your server in the address bar and press ENTER.\\r\\n\\r\\nThe test Apache web server page should display as below.\\r\\n\\r\\nDefault Apache Ubuntu page.\\r\\nNote: To identify the server’s public IP address, run the command:\\r\\n\\r\\nsudo apt-get install curl\\r\\ncurl http://icanhazip.com\\r\\nStep 3: Install MySQL and Create a Database\\r\\nTo install MySQL, type in the following command:\\r\\n\\r\\nsudo apt-get install mysql-server\\r\\nPress y to allow the installation.\\r\\nDuring the installation, you will be prompted to set the root user password.\",\n        \"course\": 3,\n        \"media\": \"courses/chapters/Parlez_moi_de_vous_pr%C3%A9sentez-vous_exemples_de_r%C3%A9ponses_coaching_emploi_IjcZlOC.mp4\",\n        \"createdAt\": \"09/23/2020 11:44:41\"\n    },\n    {\n        \"id\": 9,\n        \"title\": \"Craking password : Hashcat and Hydra\",\n        \"introduction\": \"Continuing with my series on how to crack passwords, I now want to introduce you to one of the newest and best designed password crackers out there—hashcat. The beauty of hashcat is in its design, which focuses on speed and versatility. It enables us to crack multiple types of hashes, in multiple ways, very fast.\\r\\n\\r\\nAs mentioned in the first part of this series, passwords are stored in a one-way encryption called hashes. There are multiple ways of obtaining these hashes, such as .dll injection in Windows systems or capturing the hash in transit, such as in WPA2 wireless cracking.\\r\\n\\r\\nOnce we can grab the hash, the next step becomes one of finding an effective and efficient way of cracking it. There are numerous tools, some of which I have highlighted in other articles here, but hashcat is unique in its design and versatility, so let's take a look at how it works.\",\n        \"is_video\": false,\n        \"author\": 1,\n        \"body\": \"We can see some of the options for hashcat displayed below the basic syntax. Some of the most important of these are -m (the hashtype) and -a (attack mode). In general, we will need to use both of these options in most password cracking attempts with hashcat.\\r\\n\\r\\nStep 2More Extensive Options\\r\\nIf we scan a bit further down this hashcat help screen, we can see more options. The first two below are some of the key options that hashcat enables.\\r\\n\\r\\nFirst, hashcat enables rules that allow us to apply specifically designed rules to use on our wordlist file. These rules can take our wordlist file and apply capitalization rules, special characters, word combinations, appended and prepended numbers, and so on. Each of these will help us to break passwords that have been made more complex to avoid dictionary attacks.\\r\\n\\r\\n\\r\\nThe next stanza shows us custom character sets. This enables us to set the character set that we want to use to crack the passwords. If we know the company's or institution's password policy, we can choose a subset of all characters to meet their policy and speed up our cracking. For instance, if a company allows an all-numeric character set, choose to crack the hashes with just numbers. These types of passwords are VERY easy to crack.\\r\\n\\r\\n\\r\\nThe next screen includes some of the more obscure options, including the output file type, the debug mode and the built-in character sets.\\r\\n\\r\\n\\r\\nFinally, we have to chose the type of hash we are trying to crack. Hashcat gives us numerous options. When we get ready to crack the hash, we need to designate in our command what type of hash we are working with by giving hashcat the number associated with the hash type. Here we can see a list of some of the hash types hashcat can work with.\\r\\n\\r\\n\\r\\nStep 3Choose Your Wordlist\\r\\nIn this tutorial, we will be using a simple dictionary attack on some Linux hashes. To do so, we need a wordlist to work from. There are literally thousands of wordlists available on the web, but Kali has numerous wordlists built right in, so let's try using one of those.\\r\\n\\r\\nTo find the built in wordlists in Kali, we can type:\\r\\n\\r\\nkali > locate wordlist\\r\\n\\r\\n\\r\\nWhen we do, we can see that there are dozens of wordlists available.\",\n        \"course\": 3,\n        \"media\": \"/courses/chapters/chap4.jpeg\",\n        \"createdAt\": \"09/23/2020 11:53:01\"\n    }\n]\n\n\n\nconst  courses =  [\n        {\n            \"id\": 1,\n            \"title\": \"course title la mécanique quantique\",\n            \"description\": \"the description of the course\",\n            \"media\": \"/courses/cover/glases.jpeg\",\n            \"author\": 3,\n            \"slug\": \"course-slug\",\n            \"objectifs\": \"hello world, objectifs\",\n            \"is_video\": false,\n            \"createdAt\": \"09/22/2020 14:35:42\"\n        },\n        {\n            \"id\": 2,\n            \"title\": \"course title la thermodynamique\",\n            \"description\": \"the description of the course\",\n            \"media\": \"/courses/cover/cover.jpg\",\n            \"author\": 3,\n            \"slug\": \"course-slug2\",\n            \"objectifs\": \"hello world, objectifs\",\n            \"is_video\": false,\n            \"createdAt\": \"09/22/2020 14:37:30\"\n        },\n        {\n            \"id\": 3,\n            \"title\": \"Introduction to GNU Linux\",\n            \"description\": \"What you'll learn ?\\r\\nBy the end of this course you will understand the fundamentals of the Linux operating system and be able to apply that knowledge in a practical and useful manner.\\r\\n\\r\\nThis course is an introduction to Linux operating system, il will help  beginners to understand the system and how it works,  we are going to discover this system and useful commands together.\",\n            \"media\": \"/courses/cover/logo-linux.jpg\",\n            \"author\": 1,\n            \"slug\": \"GNU Linux\",\n            \"objectifs\": \"This course aims to :\\r\\n-  Teach you the fundamentals of the Linux operating system\\r\\n-  Help you to understand the linux OS an dhow it works\\r\\n- Show you how to use the basic commands with examples\\r\\n-  Help you to understand the security system in Linux\\r\\n- Teach you How to use the terminal in Linux\\r\\n- Help you to set up a Ubuntu web server\\r\\n- Help you to have a hacker terminal\",\n            \"is_video\": false,\n            \"createdAt\": \"09/23/2020 11:20:43\"\n        }\n    ]\n\n    export {\n        chapters, courses\n    }"]},"metadata":{},"sourceType":"module"}