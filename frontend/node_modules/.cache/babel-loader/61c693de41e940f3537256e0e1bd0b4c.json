{"ast":null,"code":"/**\n * The code was extracted from:\n * https://github.com/davidchambers/Base64.js\n */\nvar chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\nfunction InvalidCharacterError(message) {\n  this.message = message;\n}\n\nInvalidCharacterError.prototype = new Error();\nInvalidCharacterError.prototype.name = \"InvalidCharacterError\";\n\nfunction polyfill(input) {\n  var str = String(input).replace(/=+$/, \"\");\n\n  if (str.length % 4 == 1) {\n    throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n  }\n\n  for ( // initialize result and counters\n  var bc = 0, bs, buffer, idx = 0, output = \"\"; // get next character\n  buffer = str.charAt(idx++); // character found in table? initialize bit storage and add its ascii value;\n  ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer, // and if not first of each 4 characters,\n  // convert the first 8 bits to one ascii character\n  bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {\n    // try to find character in table (0-63, not found => -1)\n    buffer = chars.indexOf(buffer);\n  }\n\n  return output;\n}\n\nvar atob = typeof window !== \"undefined\" && window.atob && window.atob.bind(window) || polyfill;\n\nfunction b64DecodeUnicode(str) {\n  return decodeURIComponent(atob(str).replace(/(.)/g, function (m, p) {\n    var code = p.charCodeAt(0).toString(16).toUpperCase();\n\n    if (code.length < 2) {\n      code = \"0\" + code;\n    }\n\n    return \"%\" + code;\n  }));\n}\n\nfunction base64_url_decode(str) {\n  var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n\n  switch (output.length % 4) {\n    case 0:\n      break;\n\n    case 2:\n      output += \"==\";\n      break;\n\n    case 3:\n      output += \"=\";\n      break;\n\n    default:\n      throw \"Illegal base64url string!\";\n  }\n\n  try {\n    return b64DecodeUnicode(output);\n  } catch (err) {\n    return atob(output);\n  }\n}\n\nfunction InvalidTokenError(message) {\n  this.message = message;\n}\n\nInvalidTokenError.prototype = new Error();\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\n\nfunction index(token, options) {\n  if (typeof token !== \"string\") {\n    throw new InvalidTokenError(\"Invalid token specified\");\n  }\n\n  options = options || {};\n  var pos = options.header === true ? 0 : 1;\n\n  try {\n    return JSON.parse(base64_url_decode(token.split(\".\")[pos]));\n  } catch (e) {\n    throw new InvalidTokenError(\"Invalid token specified: \" + e.message);\n  }\n}\n\nexport default index;\nexport { InvalidTokenError };","map":{"version":3,"sources":["../lib/atob.js","../lib/base64_url_decode.js","../lib/index.js"],"names":[],"mappings":"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","sourcesContent":["/**\n * The code was extracted from:\n * https://github.com/davidchambers/Base64.js\n */\n\nvar chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\nfunction InvalidCharacterError(message) {\n    this.message = message;\n}\n\nInvalidCharacterError.prototype = new Error();\nInvalidCharacterError.prototype.name = \"InvalidCharacterError\";\n\nfunction polyfill(input) {\n    var str = String(input).replace(/=+$/, \"\");\n    if (str.length % 4 == 1) {\n        throw new InvalidCharacterError(\n            \"'atob' failed: The string to be decoded is not correctly encoded.\"\n        );\n    }\n    for (\n        // initialize result and counters\n        var bc = 0, bs, buffer, idx = 0, output = \"\";\n        // get next character\n        (buffer = str.charAt(idx++));\n        // character found in table? initialize bit storage and add its ascii value;\n        ~buffer &&\n        ((bs = bc % 4 ? bs * 64 + buffer : buffer),\n            // and if not first of each 4 characters,\n            // convert the first 8 bits to one ascii character\n            bc++ % 4) ?\n        (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6)))) :\n        0\n    ) {\n        // try to find character in table (0-63, not found => -1)\n        buffer = chars.indexOf(buffer);\n    }\n    return output;\n}\n\nexport default (typeof window !== \"undefined\" &&\n    window.atob &&\n    window.atob.bind(window)) ||\npolyfill;","import atob from \"./atob\";\n\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(\n        atob(str).replace(/(.)/g, function(m, p) {\n            var code = p.charCodeAt(0).toString(16).toUpperCase();\n            if (code.length < 2) {\n                code = \"0\" + code;\n            }\n            return \"%\" + code;\n        })\n    );\n}\n\nexport default function(str) {\n    var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw \"Illegal base64url string!\";\n    }\n\n    try {\n        return b64DecodeUnicode(output);\n    } catch (err) {\n        return atob(output);\n    }\n}","\"use strict\";\n\nimport base64_url_decode from \"./base64_url_decode\";\n\nexport function InvalidTokenError(message) {\n    this.message = message;\n}\n\nInvalidTokenError.prototype = new Error();\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\n\nexport default function(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified\");\n    }\n\n    options = options || {};\n    var pos = options.header === true ? 0 : 1;\n    try {\n        return JSON.parse(base64_url_decode(token.split(\".\")[pos]));\n    } catch (e) {\n        throw new InvalidTokenError(\"Invalid token specified: \" + e.message);\n    }\n}"]},"metadata":{},"sourceType":"module"}