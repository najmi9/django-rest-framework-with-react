{"ast":null,"code":"/*\nLanguage: Haskell\nAuthor: Jeremy Hull <sourdrums@gmail.com>\nContributors: Zena Treep <zena.treep@gmail.com>\nWebsite: https://www.haskell.org\nCategory: functional\n*/\nfunction haskell(hljs) {\n  var COMMENT = {\n    variants: [hljs.COMMENT('--', '$'), hljs.COMMENT('{-', '-}', {\n      contains: ['self']\n    })]\n  };\n  var PRAGMA = {\n    className: 'meta',\n    begin: '{-#',\n    end: '#-}'\n  };\n  var PREPROCESSOR = {\n    className: 'meta',\n    begin: '^#',\n    end: '$'\n  };\n  var CONSTRUCTOR = {\n    className: 'type',\n    begin: '\\\\b[A-Z][\\\\w\\']*',\n    // TODO: other constructors (build-in, infix).\n    relevance: 0\n  };\n  var LIST = {\n    begin: '\\\\(',\n    end: '\\\\)',\n    illegal: '\"',\n    contains: [PRAGMA, PREPROCESSOR, {\n      className: 'type',\n      begin: '\\\\b[A-Z][\\\\w]*(\\\\((\\\\.\\\\.|,|\\\\w+)\\\\))?'\n    }, hljs.inherit(hljs.TITLE_MODE, {\n      begin: '[_a-z][\\\\w\\']*'\n    }), COMMENT]\n  };\n  var RECORD = {\n    begin: '{',\n    end: '}',\n    contains: LIST.contains\n  };\n  return {\n    name: 'Haskell',\n    aliases: ['hs'],\n    keywords: 'let in if then else case of where do module import hiding ' + 'qualified type data newtype deriving class instance as default ' + 'infix infixl infixr foreign export ccall stdcall cplusplus ' + 'jvm dotnet safe unsafe family forall mdo proc rec',\n    contains: [// Top-level constructions.\n    {\n      beginKeywords: 'module',\n      end: 'where',\n      keywords: 'module where',\n      contains: [LIST, COMMENT],\n      illegal: '\\\\W\\\\.|;'\n    }, {\n      begin: '\\\\bimport\\\\b',\n      end: '$',\n      keywords: 'import qualified as hiding',\n      contains: [LIST, COMMENT],\n      illegal: '\\\\W\\\\.|;'\n    }, {\n      className: 'class',\n      begin: '^(\\\\s*)?(class|instance)\\\\b',\n      end: 'where',\n      keywords: 'class family instance where',\n      contains: [CONSTRUCTOR, LIST, COMMENT]\n    }, {\n      className: 'class',\n      begin: '\\\\b(data|(new)?type)\\\\b',\n      end: '$',\n      keywords: 'data family type newtype deriving',\n      contains: [PRAGMA, CONSTRUCTOR, LIST, RECORD, COMMENT]\n    }, {\n      beginKeywords: 'default',\n      end: '$',\n      contains: [CONSTRUCTOR, LIST, COMMENT]\n    }, {\n      beginKeywords: 'infix infixl infixr',\n      end: '$',\n      contains: [hljs.C_NUMBER_MODE, COMMENT]\n    }, {\n      begin: '\\\\bforeign\\\\b',\n      end: '$',\n      keywords: 'foreign import export ccall stdcall cplusplus jvm ' + 'dotnet safe unsafe',\n      contains: [CONSTRUCTOR, hljs.QUOTE_STRING_MODE, COMMENT]\n    }, {\n      className: 'meta',\n      begin: '#!\\\\/usr\\\\/bin\\\\/env\\ runhaskell',\n      end: '$'\n    }, // \"Whitespaces\".\n    PRAGMA, PREPROCESSOR, // Literals and names.\n    // TODO: characters.\n    hljs.QUOTE_STRING_MODE, hljs.C_NUMBER_MODE, CONSTRUCTOR, hljs.inherit(hljs.TITLE_MODE, {\n      begin: '^[_a-z][\\\\w\\']*'\n    }), COMMENT, {\n      begin: '->|<-'\n    } // No markup, relevance booster\n    ]\n  };\n}\n\nmodule.exports = haskell;","map":{"version":3,"sources":["/home/chemime/Desktop/Python/django/trainingapp/frontend/node_modules/highlight.js/lib/languages/haskell.js"],"names":["haskell","hljs","COMMENT","variants","contains","PRAGMA","className","begin","end","PREPROCESSOR","CONSTRUCTOR","relevance","LIST","illegal","inherit","TITLE_MODE","RECORD","name","aliases","keywords","beginKeywords","C_NUMBER_MODE","QUOTE_STRING_MODE","module","exports"],"mappings":"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","sourcesContent":["/*\nLanguage: Haskell\nAuthor: Jeremy Hull <sourdrums@gmail.com>\nContributors: Zena Treep <zena.treep@gmail.com>\nWebsite: https://www.haskell.org\nCategory: functional\n*/\n\nfunction haskell(hljs) {\n  var COMMENT = {\n    variants: [\n      hljs.COMMENT('--', '$'),\n      hljs.COMMENT(\n        '{-',\n        '-}',\n        {\n          contains: ['self']\n        }\n      )\n    ]\n  };\n\n  var PRAGMA = {\n    className: 'meta',\n    begin: '{-#', end: '#-}'\n  };\n\n  var PREPROCESSOR = {\n    className: 'meta',\n    begin: '^#', end: '$'\n  };\n\n  var CONSTRUCTOR = {\n    className: 'type',\n    begin: '\\\\b[A-Z][\\\\w\\']*', // TODO: other constructors (build-in, infix).\n    relevance: 0\n  };\n\n  var LIST = {\n    begin: '\\\\(', end: '\\\\)',\n    illegal: '\"',\n    contains: [\n      PRAGMA,\n      PREPROCESSOR,\n      {className: 'type', begin: '\\\\b[A-Z][\\\\w]*(\\\\((\\\\.\\\\.|,|\\\\w+)\\\\))?'},\n      hljs.inherit(hljs.TITLE_MODE, {begin: '[_a-z][\\\\w\\']*'}),\n      COMMENT\n    ]\n  };\n\n  var RECORD = {\n    begin: '{', end: '}',\n    contains: LIST.contains\n  };\n\n  return {\n    name: 'Haskell',\n    aliases: ['hs'],\n    keywords:\n      'let in if then else case of where do module import hiding ' +\n      'qualified type data newtype deriving class instance as default ' +\n      'infix infixl infixr foreign export ccall stdcall cplusplus ' +\n      'jvm dotnet safe unsafe family forall mdo proc rec',\n    contains: [\n\n      // Top-level constructions.\n\n      {\n        beginKeywords: 'module', end: 'where',\n        keywords: 'module where',\n        contains: [LIST, COMMENT],\n        illegal: '\\\\W\\\\.|;'\n      },\n      {\n        begin: '\\\\bimport\\\\b', end: '$',\n        keywords: 'import qualified as hiding',\n        contains: [LIST, COMMENT],\n        illegal: '\\\\W\\\\.|;'\n      },\n\n      {\n        className: 'class',\n        begin: '^(\\\\s*)?(class|instance)\\\\b', end: 'where',\n        keywords: 'class family instance where',\n        contains: [CONSTRUCTOR, LIST, COMMENT]\n      },\n      {\n        className: 'class',\n        begin: '\\\\b(data|(new)?type)\\\\b', end: '$',\n        keywords: 'data family type newtype deriving',\n        contains: [PRAGMA, CONSTRUCTOR, LIST, RECORD, COMMENT]\n      },\n      {\n        beginKeywords: 'default', end: '$',\n        contains: [CONSTRUCTOR, LIST, COMMENT]\n      },\n      {\n        beginKeywords: 'infix infixl infixr', end: '$',\n        contains: [hljs.C_NUMBER_MODE, COMMENT]\n      },\n      {\n        begin: '\\\\bforeign\\\\b', end: '$',\n        keywords: 'foreign import export ccall stdcall cplusplus jvm ' +\n                  'dotnet safe unsafe',\n        contains: [CONSTRUCTOR, hljs.QUOTE_STRING_MODE, COMMENT]\n      },\n      {\n        className: 'meta',\n        begin: '#!\\\\/usr\\\\/bin\\\\/env\\ runhaskell', end: '$'\n      },\n\n      // \"Whitespaces\".\n\n      PRAGMA,\n      PREPROCESSOR,\n\n      // Literals and names.\n\n      // TODO: characters.\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE,\n      CONSTRUCTOR,\n      hljs.inherit(hljs.TITLE_MODE, {begin: '^[_a-z][\\\\w\\']*'}),\n\n      COMMENT,\n\n      {begin: '->|<-'} // No markup, relevance booster\n    ]\n  };\n}\n\nmodule.exports = haskell;\n"]},"metadata":{},"sourceType":"script"}