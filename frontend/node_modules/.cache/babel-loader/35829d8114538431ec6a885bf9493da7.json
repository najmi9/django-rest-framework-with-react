{"ast":null,"code":"const KEYWORDS = [\"as\", // for exports\n\"in\", \"of\", \"if\", \"for\", \"while\", \"finally\", \"var\", \"new\", \"function\", \"do\", \"return\", \"void\", \"else\", \"break\", \"catch\", \"instanceof\", \"with\", \"throw\", \"case\", \"default\", \"try\", \"switch\", \"continue\", \"typeof\", \"delete\", \"let\", \"yield\", \"const\", \"class\", // JS handles these with a special rule\n// \"get\",\n// \"set\",\n\"debugger\", \"async\", \"await\", \"static\", \"import\", \"from\", \"export\", \"extends\"];\nconst LITERALS = [\"true\", \"false\", \"null\", \"undefined\", \"NaN\", \"Infinity\"];\nconst TYPES = [\"Intl\", \"DataView\", \"Number\", \"Math\", \"Date\", \"String\", \"RegExp\", \"Object\", \"Function\", \"Boolean\", \"Error\", \"Symbol\", \"Set\", \"Map\", \"WeakSet\", \"WeakMap\", \"Proxy\", \"Reflect\", \"JSON\", \"Promise\", \"Float64Array\", \"Int16Array\", \"Int32Array\", \"Int8Array\", \"Uint16Array\", \"Uint32Array\", \"Float32Array\", \"Array\", \"Uint8Array\", \"Uint8ClampedArray\", \"ArrayBuffer\"];\nconst ERROR_TYPES = [\"EvalError\", \"InternalError\", \"RangeError\", \"ReferenceError\", \"SyntaxError\", \"TypeError\", \"URIError\"];\nconst BUILT_IN_GLOBALS = [\"setInterval\", \"setTimeout\", \"clearInterval\", \"clearTimeout\", \"require\", \"exports\", \"eval\", \"isFinite\", \"isNaN\", \"parseFloat\", \"parseInt\", \"decodeURI\", \"decodeURIComponent\", \"encodeURI\", \"encodeURIComponent\", \"escape\", \"unescape\"];\nconst BUILT_IN_VARIABLES = [\"arguments\", \"this\", \"super\", \"console\", \"window\", \"document\", \"localStorage\", \"module\", \"global\" // Node.js\n];\nconst BUILT_INS = [].concat(BUILT_IN_GLOBALS, BUILT_IN_VARIABLES, TYPES, ERROR_TYPES);\n/*\nLanguage: CoffeeScript\nAuthor: Dmytrii Nagirniak <dnagir@gmail.com>\nContributors: Oleg Efimov <efimovov@gmail.com>, Cédric Néhémie <cedric.nehemie@gmail.com>\nDescription: CoffeeScript is a programming language that transcompiles to JavaScript. For info about language see http://coffeescript.org/\nCategory: common, scripting\nWebsite: https://coffeescript.org\n*/\n\n/** @type LanguageFn */\n\nfunction coffeescript(hljs) {\n  var COFFEE_BUILT_INS = ['npm', 'print'];\n  var COFFEE_LITERALS = ['yes', 'no', 'on', 'off'];\n  var COFFEE_KEYWORDS = ['then', 'unless', 'until', 'loop', 'by', 'when', 'and', 'or', 'is', 'isnt', 'not'];\n  var NOT_VALID_KEYWORDS = [\"var\", \"const\", \"let\", \"function\", \"static\"];\n\n  var excluding = list => kw => !list.includes(kw);\n\n  var KEYWORDS$1 = {\n    keyword: KEYWORDS.concat(COFFEE_KEYWORDS).filter(excluding(NOT_VALID_KEYWORDS)).join(\" \"),\n    literal: LITERALS.concat(COFFEE_LITERALS).join(\" \"),\n    built_in: BUILT_INS.concat(COFFEE_BUILT_INS).join(\" \")\n  };\n  var JS_IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\n  var SUBST = {\n    className: 'subst',\n    begin: /#\\{/,\n    end: /}/,\n    keywords: KEYWORDS$1\n  };\n  var EXPRESSIONS = [hljs.BINARY_NUMBER_MODE, hljs.inherit(hljs.C_NUMBER_MODE, {\n    starts: {\n      end: '(\\\\s*/)?',\n      relevance: 0\n    }\n  }), // a number tries to eat the following slash to prevent treating it as a regexp\n  {\n    className: 'string',\n    variants: [{\n      begin: /'''/,\n      end: /'''/,\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      begin: /'/,\n      end: /'/,\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      begin: /\"\"\"/,\n      end: /\"\"\"/,\n      contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n    }, {\n      begin: /\"/,\n      end: /\"/,\n      contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n    }]\n  }, {\n    className: 'regexp',\n    variants: [{\n      begin: '///',\n      end: '///',\n      contains: [SUBST, hljs.HASH_COMMENT_MODE]\n    }, {\n      begin: '//[gim]{0,3}(?=\\\\W)',\n      relevance: 0\n    }, {\n      // regex can't start with space to parse x / 2 / 3 as two divisions\n      // regex can't start with *, and it supports an \"illegal\" in the main mode\n      begin: /\\/(?![ *]).*?(?![\\\\]).\\/[gim]{0,3}(?=\\W)/\n    }]\n  }, {\n    begin: '@' + JS_IDENT_RE // relevance booster\n\n  }, {\n    subLanguage: 'javascript',\n    excludeBegin: true,\n    excludeEnd: true,\n    variants: [{\n      begin: '```',\n      end: '```'\n    }, {\n      begin: '`',\n      end: '`'\n    }]\n  }];\n  SUBST.contains = EXPRESSIONS;\n  var TITLE = hljs.inherit(hljs.TITLE_MODE, {\n    begin: JS_IDENT_RE\n  });\n  var PARAMS_RE = '(\\\\(.*\\\\))?\\\\s*\\\\B[-=]>';\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\([^\\\\(]',\n    returnBegin: true,\n\n    /* We need another contained nameless mode to not have every nested\n    pair of parens to be called \"params\" */\n    contains: [{\n      begin: /\\(/,\n      end: /\\)/,\n      keywords: KEYWORDS$1,\n      contains: ['self'].concat(EXPRESSIONS)\n    }]\n  };\n  return {\n    name: 'CoffeeScript',\n    aliases: ['coffee', 'cson', 'iced'],\n    keywords: KEYWORDS$1,\n    illegal: /\\/\\*/,\n    contains: EXPRESSIONS.concat([hljs.COMMENT('###', '###'), hljs.HASH_COMMENT_MODE, {\n      className: 'function',\n      begin: '^\\\\s*' + JS_IDENT_RE + '\\\\s*=\\\\s*' + PARAMS_RE,\n      end: '[-=]>',\n      returnBegin: true,\n      contains: [TITLE, PARAMS]\n    }, {\n      // anonymous function start\n      begin: /[:\\(,=]\\s*/,\n      relevance: 0,\n      contains: [{\n        className: 'function',\n        begin: PARAMS_RE,\n        end: '[-=]>',\n        returnBegin: true,\n        contains: [PARAMS]\n      }]\n    }, {\n      className: 'class',\n      beginKeywords: 'class',\n      end: '$',\n      illegal: /[:=\"\\[\\]]/,\n      contains: [{\n        beginKeywords: 'extends',\n        endsWithParent: true,\n        illegal: /[:=\"\\[\\]]/,\n        contains: [TITLE]\n      }, TITLE]\n    }, {\n      begin: JS_IDENT_RE + ':',\n      end: ':',\n      returnBegin: true,\n      returnEnd: true,\n      relevance: 0\n    }])\n  };\n}\n\nmodule.exports = coffeescript;","map":{"version":3,"sources":["/home/chemime/Desktop/Python/django/trainingapp/frontend/node_modules/lowlight/node_modules/highlight.js/lib/languages/coffeescript.js"],"names":["KEYWORDS","LITERALS","TYPES","ERROR_TYPES","BUILT_IN_GLOBALS","BUILT_IN_VARIABLES","BUILT_INS","concat","coffeescript","hljs","COFFEE_BUILT_INS","COFFEE_LITERALS","COFFEE_KEYWORDS","NOT_VALID_KEYWORDS","excluding","list","kw","includes","KEYWORDS$1","keyword","filter","join","literal","built_in","JS_IDENT_RE","SUBST","className","begin","end","keywords","EXPRESSIONS","BINARY_NUMBER_MODE","inherit","C_NUMBER_MODE","starts","relevance","variants","contains","BACKSLASH_ESCAPE","HASH_COMMENT_MODE","subLanguage","excludeBegin","excludeEnd","TITLE","TITLE_MODE","PARAMS_RE","PARAMS","returnBegin","name","aliases","illegal","COMMENT","beginKeywords","endsWithParent","returnEnd","module","exports"],"mappings":"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","sourcesContent":["const KEYWORDS = [\n  \"as\", // for exports\n  \"in\",\n  \"of\",\n  \"if\",\n  \"for\",\n  \"while\",\n  \"finally\",\n  \"var\",\n  \"new\",\n  \"function\",\n  \"do\",\n  \"return\",\n  \"void\",\n  \"else\",\n  \"break\",\n  \"catch\",\n  \"instanceof\",\n  \"with\",\n  \"throw\",\n  \"case\",\n  \"default\",\n  \"try\",\n  \"switch\",\n  \"continue\",\n  \"typeof\",\n  \"delete\",\n  \"let\",\n  \"yield\",\n  \"const\",\n  \"class\",\n  // JS handles these with a special rule\n  // \"get\",\n  // \"set\",\n  \"debugger\",\n  \"async\",\n  \"await\",\n  \"static\",\n  \"import\",\n  \"from\",\n  \"export\",\n  \"extends\"\n];\nconst LITERALS = [\n  \"true\",\n  \"false\",\n  \"null\",\n  \"undefined\",\n  \"NaN\",\n  \"Infinity\"\n];\n\nconst TYPES = [\n  \"Intl\",\n  \"DataView\",\n  \"Number\",\n  \"Math\",\n  \"Date\",\n  \"String\",\n  \"RegExp\",\n  \"Object\",\n  \"Function\",\n  \"Boolean\",\n  \"Error\",\n  \"Symbol\",\n  \"Set\",\n  \"Map\",\n  \"WeakSet\",\n  \"WeakMap\",\n  \"Proxy\",\n  \"Reflect\",\n  \"JSON\",\n  \"Promise\",\n  \"Float64Array\",\n  \"Int16Array\",\n  \"Int32Array\",\n  \"Int8Array\",\n  \"Uint16Array\",\n  \"Uint32Array\",\n  \"Float32Array\",\n  \"Array\",\n  \"Uint8Array\",\n  \"Uint8ClampedArray\",\n  \"ArrayBuffer\"\n];\n\nconst ERROR_TYPES = [\n  \"EvalError\",\n  \"InternalError\",\n  \"RangeError\",\n  \"ReferenceError\",\n  \"SyntaxError\",\n  \"TypeError\",\n  \"URIError\"\n];\n\nconst BUILT_IN_GLOBALS = [\n  \"setInterval\",\n  \"setTimeout\",\n  \"clearInterval\",\n  \"clearTimeout\",\n\n  \"require\",\n  \"exports\",\n\n  \"eval\",\n  \"isFinite\",\n  \"isNaN\",\n  \"parseFloat\",\n  \"parseInt\",\n  \"decodeURI\",\n  \"decodeURIComponent\",\n  \"encodeURI\",\n  \"encodeURIComponent\",\n  \"escape\",\n  \"unescape\"\n];\n\nconst BUILT_IN_VARIABLES = [\n  \"arguments\",\n  \"this\",\n  \"super\",\n  \"console\",\n  \"window\",\n  \"document\",\n  \"localStorage\",\n  \"module\",\n  \"global\" // Node.js\n];\n\nconst BUILT_INS = [].concat(\n  BUILT_IN_GLOBALS,\n  BUILT_IN_VARIABLES,\n  TYPES,\n  ERROR_TYPES\n);\n\n/*\nLanguage: CoffeeScript\nAuthor: Dmytrii Nagirniak <dnagir@gmail.com>\nContributors: Oleg Efimov <efimovov@gmail.com>, Cédric Néhémie <cedric.nehemie@gmail.com>\nDescription: CoffeeScript is a programming language that transcompiles to JavaScript. For info about language see http://coffeescript.org/\nCategory: common, scripting\nWebsite: https://coffeescript.org\n*/\n\n/** @type LanguageFn */\nfunction coffeescript(hljs) {\n  var COFFEE_BUILT_INS = [\n    'npm',\n    'print'\n  ];\n  var COFFEE_LITERALS = [\n    'yes',\n    'no',\n    'on',\n    'off'\n  ];\n  var COFFEE_KEYWORDS = [\n    'then',\n    'unless',\n    'until',\n    'loop',\n    'by',\n    'when',\n    'and',\n    'or',\n    'is',\n    'isnt',\n    'not'\n  ];\n  var NOT_VALID_KEYWORDS = [\n    \"var\",\n    \"const\",\n    \"let\",\n    \"function\",\n    \"static\"\n  ];\n  var excluding = (list) =>\n    (kw) => !list.includes(kw);\n  var KEYWORDS$1 = {\n    keyword: KEYWORDS.concat(COFFEE_KEYWORDS).filter(excluding(NOT_VALID_KEYWORDS)).join(\" \"),\n    literal: LITERALS.concat(COFFEE_LITERALS).join(\" \"),\n    built_in: BUILT_INS.concat(COFFEE_BUILT_INS).join(\" \")\n  };\n  var JS_IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\n  var SUBST = {\n    className: 'subst',\n    begin: /#\\{/, end: /}/,\n    keywords: KEYWORDS$1\n  };\n  var EXPRESSIONS = [\n    hljs.BINARY_NUMBER_MODE,\n    hljs.inherit(hljs.C_NUMBER_MODE, {starts: {end: '(\\\\s*/)?', relevance: 0}}), // a number tries to eat the following slash to prevent treating it as a regexp\n    {\n      className: 'string',\n      variants: [\n        {\n          begin: /'''/, end: /'''/,\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: /'/, end: /'/,\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: /\"\"\"/, end: /\"\"\"/,\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n        },\n        {\n          begin: /\"/, end: /\"/,\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n        }\n      ]\n    },\n    {\n      className: 'regexp',\n      variants: [\n        {\n          begin: '///', end: '///',\n          contains: [SUBST, hljs.HASH_COMMENT_MODE]\n        },\n        {\n          begin: '//[gim]{0,3}(?=\\\\W)',\n          relevance: 0\n        },\n        {\n          // regex can't start with space to parse x / 2 / 3 as two divisions\n          // regex can't start with *, and it supports an \"illegal\" in the main mode\n          begin: /\\/(?![ *]).*?(?![\\\\]).\\/[gim]{0,3}(?=\\W)/\n        }\n      ]\n    },\n    {\n      begin: '@' + JS_IDENT_RE // relevance booster\n    },\n    {\n      subLanguage: 'javascript',\n      excludeBegin: true, excludeEnd: true,\n      variants: [\n        {\n          begin: '```', end: '```',\n        },\n        {\n          begin: '`', end: '`',\n        }\n      ]\n    }\n  ];\n  SUBST.contains = EXPRESSIONS;\n\n  var TITLE = hljs.inherit(hljs.TITLE_MODE, {begin: JS_IDENT_RE});\n  var PARAMS_RE = '(\\\\(.*\\\\))?\\\\s*\\\\B[-=]>';\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\([^\\\\(]', returnBegin: true,\n    /* We need another contained nameless mode to not have every nested\n    pair of parens to be called \"params\" */\n    contains: [{\n      begin: /\\(/, end: /\\)/,\n      keywords: KEYWORDS$1,\n      contains: ['self'].concat(EXPRESSIONS)\n    }]\n  };\n\n  return {\n    name: 'CoffeeScript',\n    aliases: ['coffee', 'cson', 'iced'],\n    keywords: KEYWORDS$1,\n    illegal: /\\/\\*/,\n    contains: EXPRESSIONS.concat([\n      hljs.COMMENT('###', '###'),\n      hljs.HASH_COMMENT_MODE,\n      {\n        className: 'function',\n        begin: '^\\\\s*' + JS_IDENT_RE + '\\\\s*=\\\\s*' + PARAMS_RE, end: '[-=]>',\n        returnBegin: true,\n        contains: [TITLE, PARAMS]\n      },\n      {\n        // anonymous function start\n        begin: /[:\\(,=]\\s*/,\n        relevance: 0,\n        contains: [\n          {\n            className: 'function',\n            begin: PARAMS_RE, end: '[-=]>',\n            returnBegin: true,\n            contains: [PARAMS]\n          }\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class',\n        end: '$',\n        illegal: /[:=\"\\[\\]]/,\n        contains: [\n          {\n            beginKeywords: 'extends',\n            endsWithParent: true,\n            illegal: /[:=\"\\[\\]]/,\n            contains: [TITLE]\n          },\n          TITLE\n        ]\n      },\n      {\n        begin: JS_IDENT_RE + ':', end: ':',\n        returnBegin: true, returnEnd: true,\n        relevance: 0\n      }\n    ])\n  };\n}\n\nmodule.exports = coffeescript;\n"]},"metadata":{},"sourceType":"script"}